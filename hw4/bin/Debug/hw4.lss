
bin/Debug/hw4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00000a78  00000b0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  00000a50  00000a50  00000ae4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000087  00800128  00800128  00000b34  2**0
                  ALLOC
  4 .stab         00000834  00000000  00000000  00000b34  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000935  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  00001c9d  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cb0  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00001cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  000022e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  00002886  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  000028a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_18>
  4c:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e7       	ldi	r30, 0x78	; 120
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e2       	ldi	r26, 0x28	; 40
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 3a       	cpi	r26, 0xAF	; 175
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 26 05 	jmp	0xa4c	; 0xa4c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include "simpleled.h"
#include "simpledelay.h"
#include "temp.h"

int main(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	00 d0       	rcall	.+0      	; 0xac <main+0x6>
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
    /*Initialize uart, led then temperature*/
    uart_init();
  b0:	0e 94 2f 01 	call	0x25e	; 0x25e <uart_init>
    led_init();
  b4:	0e 94 76 02 	call	0x4ec	; 0x4ec <led_init>
    temp_init();
  b8:	0e 94 80 00 	call	0x100	; 0x100 <temp_init>

    /*Write author's name to console*/
    uart_writestr("SER486 HW4 Jose Solis Salazar\n\r");
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	0e 94 35 01 	call	0x26a	; 0x26a <uart_writestr>

    /*Loop forever*/
    while(1){
        /*Begin the temp conversion*/
        temp_start();
  c4:	0e 94 c6 00 	call	0x18c	; 0x18c <temp_start>

        /*Wait until data is ready to read*/
        while(!temp_is_data_ready()){
  c8:	00 00       	nop
  ca:	0e 94 a3 00 	call	0x146	; 0x146 <temp_is_data_ready>
  ce:	89 2b       	or	r24, r25
  d0:	e1 f3       	breq	.-8      	; 0xca <main+0x24>
            /*Wait*/
        }

        /*Get reading and print to console*/
        signed int temperature = temp_get();
  d2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <temp_get>
  d6:	9a 83       	std	Y+2, r25	; 0x02
  d8:	89 83       	std	Y+1, r24	; 0x01
        uart_writedec32(temperature);
  da:	89 81       	ldd	r24, Y+1	; 0x01
  dc:	9a 81       	ldd	r25, Y+2	; 0x02
  de:	09 2e       	mov	r0, r25
  e0:	00 0c       	add	r0, r0
  e2:	aa 0b       	sbc	r26, r26
  e4:	bb 0b       	sbc	r27, r27
  e6:	bc 01       	movw	r22, r24
  e8:	cd 01       	movw	r24, r26
  ea:	0e 94 63 01 	call	0x2c6	; 0x2c6 <uart_writedec32>
        /*start on new line to make it easier to read on console*/
        uart_writestr("\n\r");
  ee:	82 e2       	ldi	r24, 0x22	; 34
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	0e 94 35 01 	call	0x26a	; 0x26a <uart_writestr>
        /*Wait 1000 ms = 1 second*/
        delay(1000);
  f6:	88 ee       	ldi	r24, 0xE8	; 232
  f8:	93 e0       	ldi	r25, 0x03	; 3
  fa:	0e 94 4d 02 	call	0x49a	; 0x49a <delay>
    }
  fe:	e2 cf       	rjmp	.-60     	; 0xc4 <main+0x1e>

00000100 <temp_init>:
 * Changes:
 *     ADMUX and ADCSRA register values
 *
 */
void temp_init()
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	00 d0       	rcall	.+0      	; 0x106 <temp_init+0x6>
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
    unsigned char ad_mux_value = ((VOLTAGE_REF << 6) | (INPUT_SELECTOR));
 10a:	88 ec       	ldi	r24, 0xC8	; 200
 10c:	89 83       	std	Y+1, r24	; 0x01
    unsigned char adcsra_value = ((CONVERSION_SELECTOR << 7) | (DIVISOR_SELECTOR));
 10e:	86 e8       	ldi	r24, 0x86	; 134
 110:	8a 83       	std	Y+2, r24	; 0x02

    ADMUX |= ad_mux_value;
 112:	8c e7       	ldi	r24, 0x7C	; 124
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	2c e7       	ldi	r18, 0x7C	; 124
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	30 81       	ld	r19, Z
 11e:	29 81       	ldd	r18, Y+1	; 0x01
 120:	23 2b       	or	r18, r19
 122:	fc 01       	movw	r30, r24
 124:	20 83       	st	Z, r18
    ADCSRA |= adcsra_value;
 126:	8a e7       	ldi	r24, 0x7A	; 122
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	2a e7       	ldi	r18, 0x7A	; 122
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	f9 01       	movw	r30, r18
 130:	30 81       	ld	r19, Z
 132:	2a 81       	ldd	r18, Y+2	; 0x02
 134:	23 2b       	or	r18, r19
 136:	fc 01       	movw	r30, r24
 138:	20 83       	st	Z, r18
}
 13a:	00 00       	nop
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <temp_is_data_ready>:
 * Changes:
 *     No Changes
 *
 */
int temp_is_data_ready()
{
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	1f 92       	push	r1
 14c:	cd b7       	in	r28, 0x3d	; 61
 14e:	de b7       	in	r29, 0x3e	; 62
    unsigned char result = (((ADCSRA) & 0x40) >>6);
 150:	8a e7       	ldi	r24, 0x7A	; 122
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	80 81       	ld	r24, Z
 158:	08 2e       	mov	r0, r24
 15a:	00 0c       	add	r0, r0
 15c:	99 0b       	sbc	r25, r25
 15e:	80 74       	andi	r24, 0x40	; 64
 160:	99 27       	eor	r25, r25
 162:	08 2e       	mov	r0, r24
 164:	89 2f       	mov	r24, r25
 166:	00 0c       	add	r0, r0
 168:	88 1f       	adc	r24, r24
 16a:	99 0b       	sbc	r25, r25
 16c:	00 0c       	add	r0, r0
 16e:	88 1f       	adc	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	89 83       	std	Y+1, r24	; 0x01

    if (result == 0) {
 174:	89 81       	ldd	r24, Y+1	; 0x01
 176:	88 23       	and	r24, r24
 178:	19 f4       	brne	.+6      	; 0x180 <temp_is_data_ready+0x3a>
        return 1;
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <temp_is_data_ready+0x3e>
    }

    return 0;
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
}
 184:	0f 90       	pop	r0
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <temp_start>:
 * Changes:
 *     ADCSRA register value
 *
 */
void temp_start()
{
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	cd b7       	in	r28, 0x3d	; 61
 192:	de b7       	in	r29, 0x3e	; 62
    ADCSRA |= 0x40;
 194:	8a e7       	ldi	r24, 0x7A	; 122
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	2a e7       	ldi	r18, 0x7A	; 122
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	f9 01       	movw	r30, r18
 19e:	20 81       	ld	r18, Z
 1a0:	20 64       	ori	r18, 0x40	; 64
 1a2:	fc 01       	movw	r30, r24
 1a4:	20 83       	st	Z, r18
}
 1a6:	00 00       	nop
 1a8:	df 91       	pop	r29
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <temp_get>:
 * Changes:
 *     No Changes
 *
 */
signed int temp_get()
{
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	cd b7       	in	r28, 0x3d	; 61
 1b4:	de b7       	in	r29, 0x3e	; 62
 1b6:	28 97       	sbiw	r28, 0x08	; 8
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
    signed long reading = (ADCL);
 1c2:	88 e7       	ldi	r24, 0x78	; 120
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	fc 01       	movw	r30, r24
 1c8:	80 81       	ld	r24, Z
 1ca:	08 2e       	mov	r0, r24
 1cc:	00 0c       	add	r0, r0
 1ce:	99 0b       	sbc	r25, r25
 1d0:	aa 0b       	sbc	r26, r26
 1d2:	bb 0b       	sbc	r27, r27
 1d4:	89 83       	std	Y+1, r24	; 0x01
 1d6:	9a 83       	std	Y+2, r25	; 0x02
 1d8:	ab 83       	std	Y+3, r26	; 0x03
 1da:	bc 83       	std	Y+4, r27	; 0x04
    reading |= ((ADCH) << 8);
 1dc:	89 e7       	ldi	r24, 0x79	; 121
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	fc 01       	movw	r30, r24
 1e2:	80 81       	ld	r24, Z
 1e4:	08 2e       	mov	r0, r24
 1e6:	00 0c       	add	r0, r0
 1e8:	99 0b       	sbc	r25, r25
 1ea:	98 2f       	mov	r25, r24
 1ec:	88 27       	eor	r24, r24
 1ee:	09 2e       	mov	r0, r25
 1f0:	00 0c       	add	r0, r0
 1f2:	aa 0b       	sbc	r26, r26
 1f4:	bb 0b       	sbc	r27, r27
 1f6:	29 81       	ldd	r18, Y+1	; 0x01
 1f8:	3a 81       	ldd	r19, Y+2	; 0x02
 1fa:	4b 81       	ldd	r20, Y+3	; 0x03
 1fc:	5c 81       	ldd	r21, Y+4	; 0x04
 1fe:	82 2b       	or	r24, r18
 200:	93 2b       	or	r25, r19
 202:	a4 2b       	or	r26, r20
 204:	b5 2b       	or	r27, r21
 206:	89 83       	std	Y+1, r24	; 0x01
 208:	9a 83       	std	Y+2, r25	; 0x02
 20a:	ab 83       	std	Y+3, r26	; 0x03
 20c:	bc 83       	std	Y+4, r27	; 0x04

    signed long degrees = ((reading * 101) / 100) - 273;
 20e:	29 81       	ldd	r18, Y+1	; 0x01
 210:	3a 81       	ldd	r19, Y+2	; 0x02
 212:	4b 81       	ldd	r20, Y+3	; 0x03
 214:	5c 81       	ldd	r21, Y+4	; 0x04
 216:	85 e6       	ldi	r24, 0x65	; 101
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	dc 01       	movw	r26, r24
 21c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__muluhisi3>
 220:	dc 01       	movw	r26, r24
 222:	cb 01       	movw	r24, r22
 224:	24 e6       	ldi	r18, 0x64	; 100
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	40 e0       	ldi	r20, 0x00	; 0
 22a:	50 e0       	ldi	r21, 0x00	; 0
 22c:	bc 01       	movw	r22, r24
 22e:	cd 01       	movw	r24, r26
 230:	0e 94 cb 04 	call	0x996	; 0x996 <__divmodsi4>
 234:	da 01       	movw	r26, r20
 236:	c9 01       	movw	r24, r18
 238:	81 51       	subi	r24, 0x11	; 17
 23a:	91 40       	sbci	r25, 0x01	; 1
 23c:	a1 09       	sbc	r26, r1
 23e:	b1 09       	sbc	r27, r1
 240:	8d 83       	std	Y+5, r24	; 0x05
 242:	9e 83       	std	Y+6, r25	; 0x06
 244:	af 83       	std	Y+7, r26	; 0x07
 246:	b8 87       	std	Y+8, r27	; 0x08

    return degrees;
 248:	8d 81       	ldd	r24, Y+5	; 0x05
 24a:	9e 81       	ldd	r25, Y+6	; 0x06
}
 24c:	28 96       	adiw	r28, 0x08	; 8
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <uart_init>:
 25e:	0e 94 ad 02 	call	0x55a	; 0x55a <serial_init>
 262:	78 94       	sei
 264:	08 95       	ret

00000266 <uart_writechar>:
 266:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <serial_writechar>

0000026a <uart_writestr>:
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	ec 01       	movw	r28, r24
 270:	89 91       	ld	r24, Y+
 272:	88 23       	and	r24, r24
 274:	19 f0       	breq	.+6      	; 0x27c <uart_writestr+0x12>
 276:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 27a:	fa cf       	rjmp	.-12     	; 0x270 <uart_writestr+0x6>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	08 95       	ret

00000282 <uart_writehex8>:
 282:	cf 93       	push	r28
 284:	c8 2f       	mov	r28, r24
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	24 e0       	ldi	r18, 0x04	; 4
 28a:	95 95       	asr	r25
 28c:	87 95       	ror	r24
 28e:	2a 95       	dec	r18
 290:	e1 f7       	brne	.-8      	; 0x28a <uart_writehex8+0x8>
 292:	8a 30       	cpi	r24, 0x0A	; 10
 294:	10 f4       	brcc	.+4      	; 0x29a <uart_writehex8+0x18>
 296:	80 5d       	subi	r24, 0xD0	; 208
 298:	01 c0       	rjmp	.+2      	; 0x29c <uart_writehex8+0x1a>
 29a:	89 5c       	subi	r24, 0xC9	; 201
 29c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 2a0:	8c 2f       	mov	r24, r28
 2a2:	8f 70       	andi	r24, 0x0F	; 15
 2a4:	8a 30       	cpi	r24, 0x0A	; 10
 2a6:	10 f0       	brcs	.+4      	; 0x2ac <uart_writehex8+0x2a>
 2a8:	89 5c       	subi	r24, 0xC9	; 201
 2aa:	01 c0       	rjmp	.+2      	; 0x2ae <uart_writehex8+0x2c>
 2ac:	80 5d       	subi	r24, 0xD0	; 208
 2ae:	cf 91       	pop	r28
 2b0:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <serial_writechar>

000002b4 <uart_writehex16>:
 2b4:	cf 93       	push	r28
 2b6:	c8 2f       	mov	r28, r24
 2b8:	89 2f       	mov	r24, r25
 2ba:	0e 94 41 01 	call	0x282	; 0x282 <uart_writehex8>
 2be:	8c 2f       	mov	r24, r28
 2c0:	cf 91       	pop	r28
 2c2:	0c 94 41 01 	jmp	0x282	; 0x282 <uart_writehex8>

000002c6 <uart_writedec32>:
 2c6:	2f 92       	push	r2
 2c8:	3f 92       	push	r3
 2ca:	4f 92       	push	r4
 2cc:	5f 92       	push	r5
 2ce:	6f 92       	push	r6
 2d0:	7f 92       	push	r7
 2d2:	8f 92       	push	r8
 2d4:	9f 92       	push	r9
 2d6:	af 92       	push	r10
 2d8:	bf 92       	push	r11
 2da:	cf 92       	push	r12
 2dc:	df 92       	push	r13
 2de:	ef 92       	push	r14
 2e0:	ff 92       	push	r15
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	cd b7       	in	r28, 0x3d	; 61
 2ec:	de b7       	in	r29, 0x3e	; 62
 2ee:	63 97       	sbiw	r28, 0x13	; 19
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	6b 01       	movw	r12, r22
 2fc:	7c 01       	movw	r14, r24
 2fe:	97 ff       	sbrs	r25, 7
 300:	0d c0       	rjmp	.+26     	; 0x31c <uart_writedec32+0x56>
 302:	f0 94       	com	r15
 304:	e0 94       	com	r14
 306:	d0 94       	com	r13
 308:	c0 94       	com	r12
 30a:	c1 1c       	adc	r12, r1
 30c:	d1 1c       	adc	r13, r1
 30e:	e1 1c       	adc	r14, r1
 310:	f1 1c       	adc	r15, r1
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	9b 8b       	std	Y+19, r25	; 0x13
 318:	8a 8b       	std	Y+18, r24	; 0x12
 31a:	02 c0       	rjmp	.+4      	; 0x320 <uart_writedec32+0x5a>
 31c:	1b 8a       	std	Y+19, r1	; 0x13
 31e:	1a 8a       	std	Y+18, r1	; 0x12
 320:	fe 01       	movw	r30, r28
 322:	31 96       	adiw	r30, 0x01	; 1
 324:	5f 01       	movw	r10, r30
 326:	8e 01       	movw	r16, r28
 328:	05 5f       	subi	r16, 0xF5	; 245
 32a:	1f 4f       	sbci	r17, 0xFF	; 255
 32c:	f9 8b       	std	Y+17, r31	; 0x11
 32e:	e8 8b       	std	Y+16, r30	; 0x10
 330:	66 24       	eor	r6, r6
 332:	63 94       	inc	r6
 334:	71 2c       	mov	r7, r1
 336:	81 2c       	mov	r8, r1
 338:	91 2c       	mov	r9, r1
 33a:	aa e0       	ldi	r26, 0x0A	; 10
 33c:	b0 e0       	ldi	r27, 0x00	; 0
 33e:	93 01       	movw	r18, r6
 340:	a4 01       	movw	r20, r8
 342:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__muluhisi3>
 346:	1b 01       	movw	r2, r22
 348:	2c 01       	movw	r4, r24
 34a:	c7 01       	movw	r24, r14
 34c:	b6 01       	movw	r22, r12
 34e:	91 01       	movw	r18, r2
 350:	a2 01       	movw	r20, r4
 352:	0e 94 cb 04 	call	0x996	; 0x996 <__divmodsi4>
 356:	93 01       	movw	r18, r6
 358:	a4 01       	movw	r20, r8
 35a:	0e 94 cb 04 	call	0x996	; 0x996 <__divmodsi4>
 35e:	e8 89       	ldd	r30, Y+16	; 0x10
 360:	f9 89       	ldd	r31, Y+17	; 0x11
 362:	21 93       	st	Z+, r18
 364:	f9 8b       	std	Y+17, r31	; 0x11
 366:	e8 8b       	std	Y+16, r30	; 0x10
 368:	82 2f       	mov	r24, r18
 36a:	22 0f       	add	r18, r18
 36c:	99 0b       	sbc	r25, r25
 36e:	aa 0b       	sbc	r26, r26
 370:	bb 0b       	sbc	r27, r27
 372:	c8 1a       	sub	r12, r24
 374:	d9 0a       	sbc	r13, r25
 376:	ea 0a       	sbc	r14, r26
 378:	fb 0a       	sbc	r15, r27
 37a:	31 01       	movw	r6, r2
 37c:	42 01       	movw	r8, r4
 37e:	0e 17       	cp	r16, r30
 380:	1f 07       	cpc	r17, r31
 382:	d9 f6       	brne	.-74     	; 0x33a <uart_writedec32+0x74>
 384:	8a 89       	ldd	r24, Y+18	; 0x12
 386:	9b 89       	ldd	r25, Y+19	; 0x13
 388:	89 2b       	or	r24, r25
 38a:	19 f0       	breq	.+6      	; 0x392 <uart_writedec32+0xcc>
 38c:	8d e2       	ldi	r24, 0x2D	; 45
 38e:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	f8 01       	movw	r30, r16
 398:	82 91       	ld	r24, -Z
 39a:	8f 01       	movw	r16, r30
 39c:	81 11       	cpse	r24, r1
 39e:	06 c0       	rjmp	.+12     	; 0x3ac <uart_writedec32+0xe6>
 3a0:	21 15       	cp	r18, r1
 3a2:	31 05       	cpc	r19, r1
 3a4:	19 f4       	brne	.+6      	; 0x3ac <uart_writedec32+0xe6>
 3a6:	ea 15       	cp	r30, r10
 3a8:	fb 05       	cpc	r31, r11
 3aa:	29 f4       	brne	.+10     	; 0x3b6 <uart_writedec32+0xf0>
 3ac:	80 5d       	subi	r24, 0xD0	; 208
 3ae:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 3b2:	21 e0       	ldi	r18, 0x01	; 1
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	0a 15       	cp	r16, r10
 3b8:	1b 05       	cpc	r17, r11
 3ba:	69 f7       	brne	.-38     	; 0x396 <uart_writedec32+0xd0>
 3bc:	63 96       	adiw	r28, 0x13	; 19
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	1f 91       	pop	r17
 3ce:	0f 91       	pop	r16
 3d0:	ff 90       	pop	r15
 3d2:	ef 90       	pop	r14
 3d4:	df 90       	pop	r13
 3d6:	cf 90       	pop	r12
 3d8:	bf 90       	pop	r11
 3da:	af 90       	pop	r10
 3dc:	9f 90       	pop	r9
 3de:	8f 90       	pop	r8
 3e0:	7f 90       	pop	r7
 3e2:	6f 90       	pop	r6
 3e4:	5f 90       	pop	r5
 3e6:	4f 90       	pop	r4
 3e8:	3f 90       	pop	r3
 3ea:	2f 90       	pop	r2
 3ec:	08 95       	ret

000003ee <uart_is_connected>:
 3ee:	0c 94 47 04 	jmp	0x88e	; 0x88e <serial_isconnected>

000003f2 <uart_is_packet_available>:
 3f2:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <serial_is_packet_ready>

000003f6 <uart_readpacket>:
 3f6:	ff 92       	push	r15
 3f8:	0f 93       	push	r16
 3fa:	1f 93       	push	r17
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
 400:	ec 01       	movw	r28, r24
 402:	06 2f       	mov	r16, r22
 404:	f7 2e       	mov	r15, r23
 406:	18 82       	st	Y, r1
 408:	0e 94 47 04 	call	0x88e	; 0x88e <serial_isconnected>
 40c:	10 e0       	ldi	r17, 0x00	; 0
 40e:	88 23       	and	r24, r24
 410:	d9 f0       	breq	.+54     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 412:	0e 94 1b 04 	call	0x836	; 0x836 <serial_rxchars>
 416:	88 23       	and	r24, r24
 418:	b9 f0       	breq	.+46     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 41a:	0e 94 22 04 	call	0x844	; 0x844 <serial_popchar>
 41e:	80 32       	cpi	r24, 0x20	; 32
 420:	10 f0       	brcs	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	89 93       	st	Y+, r24
 424:	1f 5f       	subi	r17, 0xFF	; 255
 426:	e0 2f       	mov	r30, r16
 428:	ff 2d       	mov	r31, r15
 42a:	48 2f       	mov	r20, r24
 42c:	50 e0       	ldi	r21, 0x00	; 0
 42e:	21 91       	ld	r18, Z+
 430:	22 23       	and	r18, r18
 432:	39 f0       	breq	.+14     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 434:	02 2e       	mov	r0, r18
 436:	00 0c       	add	r0, r0
 438:	33 0b       	sbc	r19, r19
 43a:	42 17       	cp	r20, r18
 43c:	53 07       	cpc	r21, r19
 43e:	b9 f7       	brne	.-18     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 440:	02 c0       	rjmp	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 442:	8d 30       	cpi	r24, 0x0D	; 13
 444:	51 f7       	brne	.-44     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 446:	18 82       	st	Y, r1
 448:	81 2f       	mov	r24, r17
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	1f 91       	pop	r17
 450:	0f 91       	pop	r16
 452:	ff 90       	pop	r15
 454:	08 95       	ret

00000456 <uart_writeip>:
 456:	0f 93       	push	r16
 458:	1f 93       	push	r17
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	8c 01       	movw	r16, r24
 460:	ec 01       	movw	r28, r24
 462:	69 91       	ld	r22, Y+
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	80 e0       	ldi	r24, 0x00	; 0
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	0e 94 63 01 	call	0x2c6	; 0x2c6 <uart_writedec32>
 46e:	0c 5f       	subi	r16, 0xFC	; 252
 470:	1f 4f       	sbci	r17, 0xFF	; 255
 472:	8e e2       	ldi	r24, 0x2E	; 46
 474:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 478:	69 91       	ld	r22, Y+
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 63 01 	call	0x2c6	; 0x2c6 <uart_writedec32>
 484:	c0 17       	cp	r28, r16
 486:	d1 07       	cpc	r29, r17
 488:	a1 f7       	brne	.-24     	; 0x472 <uart_writeip+0x1c>
 48a:	85 e2       	ldi	r24, 0x25	; 37
 48c:	91 e0       	ldi	r25, 0x01	; 1
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	0c 94 35 01 	jmp	0x26a	; 0x26a <uart_writestr>

0000049a <delay>:
 49a:	cf 93       	push	r28
 49c:	df 93       	push	r29
 49e:	00 d0       	rcall	.+0      	; 0x4a0 <delay+0x6>
 4a0:	00 d0       	rcall	.+0      	; 0x4a2 <delay+0x8>
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	1c 82       	std	Y+4, r1	; 0x04
 4a8:	1b 82       	std	Y+3, r1	; 0x03
 4aa:	2b 81       	ldd	r18, Y+3	; 0x03
 4ac:	3c 81       	ldd	r19, Y+4	; 0x04
 4ae:	28 17       	cp	r18, r24
 4b0:	39 07       	cpc	r19, r25
 4b2:	a8 f4       	brcc	.+42     	; 0x4de <delay+0x44>
 4b4:	1a 82       	std	Y+2, r1	; 0x02
 4b6:	19 82       	std	Y+1, r1	; 0x01
 4b8:	29 81       	ldd	r18, Y+1	; 0x01
 4ba:	3a 81       	ldd	r19, Y+2	; 0x02
 4bc:	28 3e       	cpi	r18, 0xE8	; 232
 4be:	33 40       	sbci	r19, 0x03	; 3
 4c0:	38 f4       	brcc	.+14     	; 0x4d0 <delay+0x36>
 4c2:	29 81       	ldd	r18, Y+1	; 0x01
 4c4:	3a 81       	ldd	r19, Y+2	; 0x02
 4c6:	2f 5f       	subi	r18, 0xFF	; 255
 4c8:	3f 4f       	sbci	r19, 0xFF	; 255
 4ca:	3a 83       	std	Y+2, r19	; 0x02
 4cc:	29 83       	std	Y+1, r18	; 0x01
 4ce:	f4 cf       	rjmp	.-24     	; 0x4b8 <delay+0x1e>
 4d0:	2b 81       	ldd	r18, Y+3	; 0x03
 4d2:	3c 81       	ldd	r19, Y+4	; 0x04
 4d4:	2f 5f       	subi	r18, 0xFF	; 255
 4d6:	3f 4f       	sbci	r19, 0xFF	; 255
 4d8:	3c 83       	std	Y+4, r19	; 0x04
 4da:	2b 83       	std	Y+3, r18	; 0x03
 4dc:	e6 cf       	rjmp	.-52     	; 0x4aa <delay+0x10>
 4de:	0f 90       	pop	r0
 4e0:	0f 90       	pop	r0
 4e2:	0f 90       	pop	r0
 4e4:	0f 90       	pop	r0
 4e6:	df 91       	pop	r29
 4e8:	cf 91       	pop	r28
 4ea:	08 95       	ret

000004ec <led_init>:
 4ec:	21 9a       	sbi	0x04, 1	; 4
 4ee:	29 98       	cbi	0x05, 1	; 5
 4f0:	08 95       	ret

000004f2 <led_on>:
 4f2:	29 9a       	sbi	0x05, 1	; 5
 4f4:	08 95       	ret

000004f6 <led_off>:
 4f6:	29 98       	cbi	0x05, 1	; 5
 4f8:	08 95       	ret

000004fa <led_ison>:
 4fa:	85 b1       	in	r24, 0x05	; 5
 4fc:	86 95       	lsr	r24
 4fe:	81 70       	andi	r24, 0x01	; 1
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	08 95       	ret

00000504 <led_blink>:
 504:	0f 93       	push	r16
 506:	1f 93       	push	r17
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	8c 01       	movw	r16, r24
 50e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <led_off>
 512:	e8 01       	movw	r28, r16
 514:	89 91       	ld	r24, Y+
 516:	88 23       	and	r24, r24
 518:	d9 f0       	breq	.+54     	; 0x550 <led_blink+0x4c>
 51a:	8e 32       	cpi	r24, 0x2E	; 46
 51c:	29 f4       	brne	.+10     	; 0x528 <led_blink+0x24>
 51e:	0e 94 79 02 	call	0x4f2	; 0x4f2 <led_on>
 522:	8a ef       	ldi	r24, 0xFA	; 250
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	06 c0       	rjmp	.+12     	; 0x534 <led_blink+0x30>
 528:	8d 32       	cpi	r24, 0x2D	; 45
 52a:	59 f4       	brne	.+22     	; 0x542 <led_blink+0x3e>
 52c:	0e 94 79 02 	call	0x4f2	; 0x4f2 <led_on>
 530:	8e ee       	ldi	r24, 0xEE	; 238
 532:	92 e0       	ldi	r25, 0x02	; 2
 534:	0e 94 4d 02 	call	0x49a	; 0x49a <delay>
 538:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <led_off>
 53c:	84 e6       	ldi	r24, 0x64	; 100
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	04 c0       	rjmp	.+8      	; 0x54a <led_blink+0x46>
 542:	80 32       	cpi	r24, 0x20	; 32
 544:	39 f7       	brne	.-50     	; 0x514 <led_blink+0x10>
 546:	88 ee       	ldi	r24, 0xE8	; 232
 548:	93 e0       	ldi	r25, 0x03	; 3
 54a:	0e 94 4d 02 	call	0x49a	; 0x49a <delay>
 54e:	e2 cf       	rjmp	.-60     	; 0x514 <led_blink+0x10>
 550:	df 91       	pop	r29
 552:	cf 91       	pop	r28
 554:	1f 91       	pop	r17
 556:	0f 91       	pop	r16
 558:	08 95       	ret

0000055a <serial_init>:
 55a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 55e:	87 e6       	ldi	r24, 0x67	; 103
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 566:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 56a:	e1 ec       	ldi	r30, 0xC1	; 193
 56c:	f0 e0       	ldi	r31, 0x00	; 0
 56e:	88 e1       	ldi	r24, 0x18	; 24
 570:	80 83       	st	Z, r24
 572:	86 e0       	ldi	r24, 0x06	; 6
 574:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 578:	80 81       	ld	r24, Z
 57a:	80 6a       	ori	r24, 0xA0	; 160
 57c:	80 83       	st	Z, r24
 57e:	08 95       	ret

00000580 <__vector_18>:
 580:	1f 92       	push	r1
 582:	0f 92       	push	r0
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	0f 92       	push	r0
 588:	11 24       	eor	r1, r1
 58a:	2f 93       	push	r18
 58c:	3f 93       	push	r19
 58e:	8f 93       	push	r24
 590:	9f 93       	push	r25
 592:	ef 93       	push	r30
 594:	ff 93       	push	r31
 596:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <socket_mode>
 59a:	88 23       	and	r24, r24
 59c:	09 f4       	brne	.+2      	; 0x5a0 <__vector_18+0x20>
 59e:	f0 c0       	rjmp	.+480    	; 0x780 <__vector_18+0x200>
 5a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 5a4:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <socket_connected>
 5a8:	99 23       	and	r25, r25
 5aa:	09 f4       	brne	.+2      	; 0x5ae <__vector_18+0x2e>
 5ac:	e3 c0       	rjmp	.+454    	; 0x774 <__vector_18+0x1f4>
 5ae:	90 ee       	ldi	r25, 0xE0	; 224
 5b0:	98 0f       	add	r25, r24
 5b2:	9f 35       	cpi	r25, 0x5F	; 95
 5b4:	18 f0       	brcs	.+6      	; 0x5bc <__vector_18+0x3c>
 5b6:	8d 30       	cpi	r24, 0x0D	; 13
 5b8:	09 f0       	breq	.+2      	; 0x5bc <__vector_18+0x3c>
 5ba:	59 c0       	rjmp	.+178    	; 0x66e <__vector_18+0xee>
 5bc:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <rxtail>
 5c0:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <rxhead>
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	29 1b       	sub	r18, r25
 5c8:	31 09       	sbc	r19, r1
 5ca:	21 50       	subi	r18, 0x01	; 1
 5cc:	31 09       	sbc	r19, r1
 5ce:	2f 73       	andi	r18, 0x3F	; 63
 5d0:	33 27       	eor	r19, r19
 5d2:	23 2b       	or	r18, r19
 5d4:	61 f0       	breq	.+24     	; 0x5ee <__vector_18+0x6e>
 5d6:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	e1 5d       	subi	r30, 0xD1	; 209
 5de:	fe 4f       	sbci	r31, 0xFE	; 254
 5e0:	80 83       	st	Z, r24
 5e2:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <rxhead>
 5e6:	9f 5f       	subi	r25, 0xFF	; 255
 5e8:	9f 73       	andi	r25, 0x3F	; 63
 5ea:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <rxhead>
 5ee:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
 5f2:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <txhead>
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	29 1b       	sub	r18, r25
 5fa:	31 09       	sbc	r19, r1
 5fc:	21 50       	subi	r18, 0x01	; 1
 5fe:	31 09       	sbc	r19, r1
 600:	2f 73       	andi	r18, 0x3F	; 63
 602:	33 27       	eor	r19, r19
 604:	23 2b       	or	r18, r19
 606:	89 f0       	breq	.+34     	; 0x62a <__vector_18+0xaa>
 608:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <txhead>
 60c:	f0 e0       	ldi	r31, 0x00	; 0
 60e:	e1 59       	subi	r30, 0x91	; 145
 610:	fe 4f       	sbci	r31, 0xFE	; 254
 612:	80 83       	st	Z, r24
 614:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <txhead>
 618:	9f 5f       	subi	r25, 0xFF	; 255
 61a:	9f 73       	andi	r25, 0x3F	; 63
 61c:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <txhead>
 620:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 624:	90 62       	ori	r25, 0x20	; 32
 626:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 62a:	8d 30       	cpi	r24, 0x0D	; 13
 62c:	09 f0       	breq	.+2      	; 0x630 <__vector_18+0xb0>
 62e:	c5 c0       	rjmp	.+394    	; 0x7ba <__vector_18+0x23a>
 630:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 634:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <txhead>
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	82 1b       	sub	r24, r18
 63c:	91 09       	sbc	r25, r1
 63e:	01 97       	sbiw	r24, 0x01	; 1
 640:	8f 73       	andi	r24, 0x3F	; 63
 642:	99 27       	eor	r25, r25
 644:	89 2b       	or	r24, r25
 646:	69 f0       	breq	.+26     	; 0x662 <__vector_18+0xe2>
 648:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <txhead>
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	e1 59       	subi	r30, 0x91	; 145
 650:	fe 4f       	sbci	r31, 0xFE	; 254
 652:	8a e0       	ldi	r24, 0x0A	; 10
 654:	80 83       	st	Z, r24
 656:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <txhead>
 65a:	8f 5f       	subi	r24, 0xFF	; 255
 65c:	8f 73       	andi	r24, 0x3F	; 63
 65e:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <txhead>
 662:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <packet_available>
 666:	8f 5f       	subi	r24, 0xFF	; 255
 668:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <packet_available>
 66c:	a6 c0       	rjmp	.+332    	; 0x7ba <__vector_18+0x23a>
 66e:	88 30       	cpi	r24, 0x08	; 8
 670:	11 f0       	breq	.+4      	; 0x676 <__vector_18+0xf6>
 672:	8f 37       	cpi	r24, 0x7F	; 127
 674:	c1 f5       	brne	.+112    	; 0x6e6 <__vector_18+0x166>
 676:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 67a:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <rxtail>
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	82 1b       	sub	r24, r18
 682:	91 09       	sbc	r25, r1
 684:	8f 73       	andi	r24, 0x3F	; 63
 686:	99 27       	eor	r25, r25
 688:	89 2b       	or	r24, r25
 68a:	09 f4       	brne	.+2      	; 0x68e <__vector_18+0x10e>
 68c:	96 c0       	rjmp	.+300    	; 0x7ba <__vector_18+0x23a>
 68e:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 692:	f0 e0       	ldi	r31, 0x00	; 0
 694:	e1 5d       	subi	r30, 0xD1	; 209
 696:	fe 4f       	sbci	r31, 0xFE	; 254
 698:	80 81       	ld	r24, Z
 69a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 69e:	81 50       	subi	r24, 0x01	; 1
 6a0:	8f 73       	andi	r24, 0x3F	; 63
 6a2:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <rxhead>
 6a6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 6aa:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <txhead>
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	82 1b       	sub	r24, r18
 6b2:	91 09       	sbc	r25, r1
 6b4:	01 97       	sbiw	r24, 0x01	; 1
 6b6:	8f 73       	andi	r24, 0x3F	; 63
 6b8:	99 27       	eor	r25, r25
 6ba:	89 2b       	or	r24, r25
 6bc:	09 f4       	brne	.+2      	; 0x6c0 <__vector_18+0x140>
 6be:	7d c0       	rjmp	.+250    	; 0x7ba <__vector_18+0x23a>
 6c0:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <txhead>
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	e1 59       	subi	r30, 0x91	; 145
 6c8:	fe 4f       	sbci	r31, 0xFE	; 254
 6ca:	8f e7       	ldi	r24, 0x7F	; 127
 6cc:	80 83       	st	Z, r24
 6ce:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <txhead>
 6d2:	8f 5f       	subi	r24, 0xFF	; 255
 6d4:	8f 73       	andi	r24, 0x3F	; 63
 6d6:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <txhead>
 6da:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 6de:	80 62       	ori	r24, 0x20	; 32
 6e0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 6e4:	6a c0       	rjmp	.+212    	; 0x7ba <__vector_18+0x23a>
 6e6:	84 30       	cpi	r24, 0x04	; 4
 6e8:	09 f0       	breq	.+2      	; 0x6ec <__vector_18+0x16c>
 6ea:	67 c0       	rjmp	.+206    	; 0x7ba <__vector_18+0x23a>
 6ec:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 6f0:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <rxtail>
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	82 1b       	sub	r24, r18
 6f8:	91 09       	sbc	r25, r1
 6fa:	8f 73       	andi	r24, 0x3F	; 63
 6fc:	99 27       	eor	r25, r25
 6fe:	89 2b       	or	r24, r25
 700:	31 f1       	breq	.+76     	; 0x74e <__vector_18+0x1ce>
 702:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	e1 5d       	subi	r30, 0xD1	; 209
 70a:	fe 4f       	sbci	r31, 0xFE	; 254
 70c:	80 81       	ld	r24, Z
 70e:	8d 30       	cpi	r24, 0x0D	; 13
 710:	f1 f0       	breq	.+60     	; 0x74e <__vector_18+0x1ce>
 712:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <rxtail>
 716:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <rxhead>
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	82 1b       	sub	r24, r18
 71e:	91 09       	sbc	r25, r1
 720:	01 97       	sbiw	r24, 0x01	; 1
 722:	8f 73       	andi	r24, 0x3F	; 63
 724:	99 27       	eor	r25, r25
 726:	89 2b       	or	r24, r25
 728:	91 f0       	breq	.+36     	; 0x74e <__vector_18+0x1ce>
 72a:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	e1 5d       	subi	r30, 0xD1	; 209
 732:	fe 4f       	sbci	r31, 0xFE	; 254
 734:	8d e0       	ldi	r24, 0x0D	; 13
 736:	80 83       	st	Z, r24
 738:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 73c:	8f 5f       	subi	r24, 0xFF	; 255
 73e:	8f 73       	andi	r24, 0x3F	; 63
 740:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <rxhead>
 744:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <packet_available>
 748:	8f 5f       	subi	r24, 0xFF	; 255
 74a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <packet_available>
 74e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <rxtail>
 752:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <rxhead>
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	82 1b       	sub	r24, r18
 75a:	91 09       	sbc	r25, r1
 75c:	01 97       	sbiw	r24, 0x01	; 1
 75e:	8f 73       	andi	r24, 0x3F	; 63
 760:	99 27       	eor	r25, r25
 762:	89 2b       	or	r24, r25
 764:	51 f1       	breq	.+84     	; 0x7ba <__vector_18+0x23a>
 766:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	e1 5d       	subi	r30, 0xD1	; 209
 76e:	fe 4f       	sbci	r31, 0xFE	; 254
 770:	84 e0       	ldi	r24, 0x04	; 4
 772:	19 c0       	rjmp	.+50     	; 0x7a6 <__vector_18+0x226>
 774:	83 30       	cpi	r24, 0x03	; 3
 776:	09 f5       	brne	.+66     	; 0x7ba <__vector_18+0x23a>
 778:	81 e0       	ldi	r24, 0x01	; 1
 77a:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <socket_connected>
 77e:	1d c0       	rjmp	.+58     	; 0x7ba <__vector_18+0x23a>
 780:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <rxtail>
 784:	20 91 2b 01 	lds	r18, 0x012B	; 0x80012b <rxhead>
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	82 1b       	sub	r24, r18
 78c:	91 09       	sbc	r25, r1
 78e:	01 97       	sbiw	r24, 0x01	; 1
 790:	8f 73       	andi	r24, 0x3F	; 63
 792:	99 27       	eor	r25, r25
 794:	89 2b       	or	r24, r25
 796:	79 f0       	breq	.+30     	; 0x7b6 <__vector_18+0x236>
 798:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <rxhead>
 79c:	f0 e0       	ldi	r31, 0x00	; 0
 79e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 7a2:	e1 5d       	subi	r30, 0xD1	; 209
 7a4:	fe 4f       	sbci	r31, 0xFE	; 254
 7a6:	80 83       	st	Z, r24
 7a8:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 7ac:	8f 5f       	subi	r24, 0xFF	; 255
 7ae:	8f 73       	andi	r24, 0x3F	; 63
 7b0:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <rxhead>
 7b4:	02 c0       	rjmp	.+4      	; 0x7ba <__vector_18+0x23a>
 7b6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 7ba:	ff 91       	pop	r31
 7bc:	ef 91       	pop	r30
 7be:	9f 91       	pop	r25
 7c0:	8f 91       	pop	r24
 7c2:	3f 91       	pop	r19
 7c4:	2f 91       	pop	r18
 7c6:	0f 90       	pop	r0
 7c8:	0f be       	out	0x3f, r0	; 63
 7ca:	0f 90       	pop	r0
 7cc:	1f 90       	pop	r1
 7ce:	18 95       	reti

000007d0 <__vector_19>:
 7d0:	1f 92       	push	r1
 7d2:	0f 92       	push	r0
 7d4:	0f b6       	in	r0, 0x3f	; 63
 7d6:	0f 92       	push	r0
 7d8:	11 24       	eor	r1, r1
 7da:	2f 93       	push	r18
 7dc:	8f 93       	push	r24
 7de:	9f 93       	push	r25
 7e0:	ef 93       	push	r30
 7e2:	ff 93       	push	r31
 7e4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <txhead>
 7e8:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	82 1b       	sub	r24, r18
 7f0:	91 09       	sbc	r25, r1
 7f2:	8f 73       	andi	r24, 0x3F	; 63
 7f4:	99 27       	eor	r25, r25
 7f6:	89 2b       	or	r24, r25
 7f8:	79 f0       	breq	.+30     	; 0x818 <__vector_19+0x48>
 7fa:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <__data_end>
 7fe:	f0 e0       	ldi	r31, 0x00	; 0
 800:	e1 59       	subi	r30, 0x91	; 145
 802:	fe 4f       	sbci	r31, 0xFE	; 254
 804:	80 81       	ld	r24, Z
 806:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 80a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 80e:	8f 5f       	subi	r24, 0xFF	; 255
 810:	8f 73       	andi	r24, 0x3F	; 63
 812:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__data_end>
 816:	05 c0       	rjmp	.+10     	; 0x822 <__vector_19+0x52>
 818:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 81c:	8f 7d       	andi	r24, 0xDF	; 223
 81e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 822:	ff 91       	pop	r31
 824:	ef 91       	pop	r30
 826:	9f 91       	pop	r25
 828:	8f 91       	pop	r24
 82a:	2f 91       	pop	r18
 82c:	0f 90       	pop	r0
 82e:	0f be       	out	0x3f, r0	; 63
 830:	0f 90       	pop	r0
 832:	1f 90       	pop	r1
 834:	18 95       	reti

00000836 <serial_rxchars>:
 836:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 83a:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <rxtail>
 83e:	89 1b       	sub	r24, r25
 840:	8f 73       	andi	r24, 0x3F	; 63
 842:	08 95       	ret

00000844 <serial_popchar>:
 844:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 848:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <rxtail>
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	82 1b       	sub	r24, r18
 850:	91 09       	sbc	r25, r1
 852:	8f 73       	andi	r24, 0x3F	; 63
 854:	99 27       	eor	r25, r25
 856:	89 2b       	or	r24, r25
 858:	c1 f0       	breq	.+48     	; 0x88a <serial_popchar+0x46>
 85a:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <rxtail>
 85e:	f0 e0       	ldi	r31, 0x00	; 0
 860:	e1 5d       	subi	r30, 0xD1	; 209
 862:	fe 4f       	sbci	r31, 0xFE	; 254
 864:	80 81       	ld	r24, Z
 866:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <rxtail>
 86a:	9f 5f       	subi	r25, 0xFF	; 255
 86c:	9f 73       	andi	r25, 0x3F	; 63
 86e:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <rxtail>
 872:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <socket_mode>
 876:	99 23       	and	r25, r25
 878:	49 f0       	breq	.+18     	; 0x88c <serial_popchar+0x48>
 87a:	8d 30       	cpi	r24, 0x0D	; 13
 87c:	39 f4       	brne	.+14     	; 0x88c <serial_popchar+0x48>
 87e:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <packet_available>
 882:	91 50       	subi	r25, 0x01	; 1
 884:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <packet_available>
 888:	08 95       	ret
 88a:	80 e0       	ldi	r24, 0x00	; 0
 88c:	08 95       	ret

0000088e <serial_isconnected>:
 88e:	81 e0       	ldi	r24, 0x01	; 1
 890:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <socket_mode>
 894:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <rxhead>
 898:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <rxtail>
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	82 1b       	sub	r24, r18
 8a0:	91 09       	sbc	r25, r1
 8a2:	8f 73       	andi	r24, 0x3F	; 63
 8a4:	99 27       	eor	r25, r25
 8a6:	89 2b       	or	r24, r25
 8a8:	b1 f0       	breq	.+44     	; 0x8d6 <serial_isconnected+0x48>
 8aa:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <rxtail>
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	e1 5d       	subi	r30, 0xD1	; 209
 8b2:	fe 4f       	sbci	r31, 0xFE	; 254
 8b4:	80 81       	ld	r24, Z
 8b6:	84 30       	cpi	r24, 0x04	; 4
 8b8:	71 f4       	brne	.+28     	; 0x8d6 <serial_isconnected+0x48>
 8ba:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <socket_connected>
 8be:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <rxtail>
 8c2:	f0 e0       	ldi	r31, 0x00	; 0
 8c4:	e1 5d       	subi	r30, 0xD1	; 209
 8c6:	fe 4f       	sbci	r31, 0xFE	; 254
 8c8:	80 81       	ld	r24, Z
 8ca:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <rxtail>
 8ce:	8f 5f       	subi	r24, 0xFF	; 255
 8d0:	8f 73       	andi	r24, 0x3F	; 63
 8d2:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <rxtail>
 8d6:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <socket_connected>
 8da:	08 95       	ret

000008dc <serial_is_packet_ready>:
 8dc:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <packet_available>
 8e0:	08 95       	ret

000008e2 <serial_writechar>:
 8e2:	0f b6       	in	r0, 0x3f	; 63
 8e4:	07 fe       	sbrs	r0, 7
 8e6:	0e c0       	rjmp	.+28     	; 0x904 <__stack+0x5>
 8e8:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
 8ec:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <txhead>
 8f0:	30 e0       	ldi	r19, 0x00	; 0
 8f2:	29 1b       	sub	r18, r25
 8f4:	31 09       	sbc	r19, r1
 8f6:	21 50       	subi	r18, 0x01	; 1
 8f8:	31 09       	sbc	r19, r1
 8fa:	2f 73       	andi	r18, 0x3F	; 63
 8fc:	33 27       	eor	r19, r19
 8fe:	23 2b       	or	r18, r19
 900:	99 f3       	breq	.-26     	; 0x8e8 <serial_writechar+0x6>
 902:	0d c0       	rjmp	.+26     	; 0x91e <__stack+0x1f>
 904:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
 908:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <txhead>
 90c:	30 e0       	ldi	r19, 0x00	; 0
 90e:	29 1b       	sub	r18, r25
 910:	31 09       	sbc	r19, r1
 912:	21 50       	subi	r18, 0x01	; 1
 914:	31 09       	sbc	r19, r1
 916:	2f 73       	andi	r18, 0x3F	; 63
 918:	33 27       	eor	r19, r19
 91a:	23 2b       	or	r18, r19
 91c:	61 f0       	breq	.+24     	; 0x936 <__stack+0x37>
 91e:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <txhead>
 922:	f0 e0       	ldi	r31, 0x00	; 0
 924:	e1 59       	subi	r30, 0x91	; 145
 926:	fe 4f       	sbci	r31, 0xFE	; 254
 928:	80 83       	st	Z, r24
 92a:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <txhead>
 92e:	8f 5f       	subi	r24, 0xFF	; 255
 930:	8f 73       	andi	r24, 0x3F	; 63
 932:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <txhead>
 936:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 93a:	80 62       	ori	r24, 0x20	; 32
 93c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 940:	08 95       	ret

00000942 <serial_writestr>:
 942:	1f 93       	push	r17
 944:	cf 93       	push	r28
 946:	df 93       	push	r29
 948:	ec 01       	movw	r28, r24
 94a:	80 e0       	ldi	r24, 0x00	; 0
 94c:	11 e0       	ldi	r17, 0x01	; 1
 94e:	18 0f       	add	r17, r24
 950:	fe 01       	movw	r30, r28
 952:	e8 0f       	add	r30, r24
 954:	f1 1d       	adc	r31, r1
 956:	80 81       	ld	r24, Z
 958:	88 23       	and	r24, r24
 95a:	21 f0       	breq	.+8      	; 0x964 <serial_writestr+0x22>
 95c:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 960:	81 2f       	mov	r24, r17
 962:	f4 cf       	rjmp	.-24     	; 0x94c <serial_writestr+0xa>
 964:	df 91       	pop	r29
 966:	cf 91       	pop	r28
 968:	1f 91       	pop	r17
 96a:	08 95       	ret

0000096c <serial_writestr_P>:
 96c:	1f 93       	push	r17
 96e:	cf 93       	push	r28
 970:	df 93       	push	r29
 972:	ec 01       	movw	r28, r24
 974:	80 e0       	ldi	r24, 0x00	; 0
 976:	11 e0       	ldi	r17, 0x01	; 1
 978:	18 0f       	add	r17, r24
 97a:	fe 01       	movw	r30, r28
 97c:	e8 0f       	add	r30, r24
 97e:	f1 1d       	adc	r31, r1
 980:	84 91       	lpm	r24, Z
 982:	88 23       	and	r24, r24
 984:	21 f0       	breq	.+8      	; 0x98e <serial_writestr_P+0x22>
 986:	0e 94 71 04 	call	0x8e2	; 0x8e2 <serial_writechar>
 98a:	81 2f       	mov	r24, r17
 98c:	f4 cf       	rjmp	.-24     	; 0x976 <serial_writestr_P+0xa>
 98e:	df 91       	pop	r29
 990:	cf 91       	pop	r28
 992:	1f 91       	pop	r17
 994:	08 95       	ret

00000996 <__divmodsi4>:
 996:	05 2e       	mov	r0, r21
 998:	97 fb       	bst	r25, 7
 99a:	1e f4       	brtc	.+6      	; 0x9a2 <__divmodsi4+0xc>
 99c:	00 94       	com	r0
 99e:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__negsi2>
 9a2:	57 fd       	sbrc	r21, 7
 9a4:	07 d0       	rcall	.+14     	; 0x9b4 <__divmodsi4_neg2>
 9a6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__udivmodsi4>
 9aa:	07 fc       	sbrc	r0, 7
 9ac:	03 d0       	rcall	.+6      	; 0x9b4 <__divmodsi4_neg2>
 9ae:	4e f4       	brtc	.+18     	; 0x9c2 <__divmodsi4_exit>
 9b0:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__negsi2>

000009b4 <__divmodsi4_neg2>:
 9b4:	50 95       	com	r21
 9b6:	40 95       	com	r20
 9b8:	30 95       	com	r19
 9ba:	21 95       	neg	r18
 9bc:	3f 4f       	sbci	r19, 0xFF	; 255
 9be:	4f 4f       	sbci	r20, 0xFF	; 255
 9c0:	5f 4f       	sbci	r21, 0xFF	; 255

000009c2 <__divmodsi4_exit>:
 9c2:	08 95       	ret

000009c4 <__negsi2>:
 9c4:	90 95       	com	r25
 9c6:	80 95       	com	r24
 9c8:	70 95       	com	r23
 9ca:	61 95       	neg	r22
 9cc:	7f 4f       	sbci	r23, 0xFF	; 255
 9ce:	8f 4f       	sbci	r24, 0xFF	; 255
 9d0:	9f 4f       	sbci	r25, 0xFF	; 255
 9d2:	08 95       	ret

000009d4 <__muluhisi3>:
 9d4:	0e 94 17 05 	call	0xa2e	; 0xa2e <__umulhisi3>
 9d8:	a5 9f       	mul	r26, r21
 9da:	90 0d       	add	r25, r0
 9dc:	b4 9f       	mul	r27, r20
 9de:	90 0d       	add	r25, r0
 9e0:	a4 9f       	mul	r26, r20
 9e2:	80 0d       	add	r24, r0
 9e4:	91 1d       	adc	r25, r1
 9e6:	11 24       	eor	r1, r1
 9e8:	08 95       	ret

000009ea <__udivmodsi4>:
 9ea:	a1 e2       	ldi	r26, 0x21	; 33
 9ec:	1a 2e       	mov	r1, r26
 9ee:	aa 1b       	sub	r26, r26
 9f0:	bb 1b       	sub	r27, r27
 9f2:	fd 01       	movw	r30, r26
 9f4:	0d c0       	rjmp	.+26     	; 0xa10 <__udivmodsi4_ep>

000009f6 <__udivmodsi4_loop>:
 9f6:	aa 1f       	adc	r26, r26
 9f8:	bb 1f       	adc	r27, r27
 9fa:	ee 1f       	adc	r30, r30
 9fc:	ff 1f       	adc	r31, r31
 9fe:	a2 17       	cp	r26, r18
 a00:	b3 07       	cpc	r27, r19
 a02:	e4 07       	cpc	r30, r20
 a04:	f5 07       	cpc	r31, r21
 a06:	20 f0       	brcs	.+8      	; 0xa10 <__udivmodsi4_ep>
 a08:	a2 1b       	sub	r26, r18
 a0a:	b3 0b       	sbc	r27, r19
 a0c:	e4 0b       	sbc	r30, r20
 a0e:	f5 0b       	sbc	r31, r21

00000a10 <__udivmodsi4_ep>:
 a10:	66 1f       	adc	r22, r22
 a12:	77 1f       	adc	r23, r23
 a14:	88 1f       	adc	r24, r24
 a16:	99 1f       	adc	r25, r25
 a18:	1a 94       	dec	r1
 a1a:	69 f7       	brne	.-38     	; 0x9f6 <__udivmodsi4_loop>
 a1c:	60 95       	com	r22
 a1e:	70 95       	com	r23
 a20:	80 95       	com	r24
 a22:	90 95       	com	r25
 a24:	9b 01       	movw	r18, r22
 a26:	ac 01       	movw	r20, r24
 a28:	bd 01       	movw	r22, r26
 a2a:	cf 01       	movw	r24, r30
 a2c:	08 95       	ret

00000a2e <__umulhisi3>:
 a2e:	a2 9f       	mul	r26, r18
 a30:	b0 01       	movw	r22, r0
 a32:	b3 9f       	mul	r27, r19
 a34:	c0 01       	movw	r24, r0
 a36:	a3 9f       	mul	r26, r19
 a38:	70 0d       	add	r23, r0
 a3a:	81 1d       	adc	r24, r1
 a3c:	11 24       	eor	r1, r1
 a3e:	91 1d       	adc	r25, r1
 a40:	b2 9f       	mul	r27, r18
 a42:	70 0d       	add	r23, r0
 a44:	81 1d       	adc	r24, r1
 a46:	11 24       	eor	r1, r1
 a48:	91 1d       	adc	r25, r1
 a4a:	08 95       	ret

00000a4c <_exit>:
 a4c:	f8 94       	cli

00000a4e <__stop_program>:
 a4e:	ff cf       	rjmp	.-2      	; 0xa4e <__stop_program>
