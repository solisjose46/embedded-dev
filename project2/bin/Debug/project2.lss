
bin/Debug/project2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000cc  00800100  000019a4  00001a38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000197c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  0000197c  0000197c  00001a10  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000001ad  008001cc  008001cc  00001b04  2**0
                  ALLOC
  4 .stab         00001890  00000000  00000000  00001b04  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000e28  00000000  00000000  00003394  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000041bc  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000041d0  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00004210  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  00004804  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  00004da6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  00004dc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 4a 0b 	jmp	0x1694	; 0x1694 <__vector_18>
      4c:	0c 94 7b 0b 	jmp	0x16f6	; 0x16f6 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__vector_22>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ea       	ldi	r30, 0xA4	; 164
      7c:	f9 e1       	ldi	r31, 0x19	; 25
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 3c       	cpi	r26, 0xCC	; 204
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	23 e0       	ldi	r18, 0x03	; 3
      8c:	ac ec       	ldi	r26, 0xCC	; 204
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a9 37       	cpi	r26, 0x79	; 121
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <main>
      9e:	0c 94 bc 0c 	jmp	0x1978	; 0x1978 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <is_data_valid>:
*
* returns:
*   1 if valid else 0
*
*/
static int is_data_valid() {
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	00 d0       	rcall	.+0      	; 0xac <is_data_valid+0x6>
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
    int result = 1;
      b0:	81 e0       	ldi	r24, 0x01	; 1
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	9a 83       	std	Y+2, r25	; 0x02
      b6:	89 83       	std	Y+1, r24	; 0x01

    /* If config token != "ASU" or checksum not valid return 0 */
    if (config.token != defaults.token) {
        result = 0;
      b8:	1a 82       	std	Y+2, r1	; 0x02
      ba:	19 82       	std	Y+1, r1	; 0x01
    }
    else if(!(is_checksum_valid((unsigned char*)&config, sizeof(config_struct)))){
        result = 0;
    }

    return result;
      bc:	89 81       	ldd	r24, Y+1	; 0x01
      be:	9a 81       	ldd	r25, Y+2	; 0x02

}
      c0:	0f 90       	pop	r0
      c2:	0f 90       	pop	r0
      c4:	df 91       	pop	r29
      c6:	cf 91       	pop	r28
      c8:	08 95       	ret

000000ca <write_defaults>:
*
* returns:
*   Nothing
*
*/
static void write_defaults() {
      ca:	cf 93       	push	r28
      cc:	df 93       	push	r29
      ce:	cd b7       	in	r28, 0x3d	; 61
      d0:	de b7       	in	r29, 0x3e	; 62
    update_checksum((unsigned char*) &defaults, sizeof(config_struct));
      d2:	62 e1       	ldi	r22, 0x12	; 18
      d4:	70 e0       	ldi	r23, 0x00	; 0
      d6:	80 e0       	ldi	r24, 0x00	; 0
      d8:	91 e0       	ldi	r25, 0x01	; 1
      da:	0e 94 2f 02 	call	0x45e	; 0x45e <update_checksum>
    eeprom_writebuf(CONFIG_ADDR, (unsigned char*)&defaults, sizeof(config_struct));
      de:	42 e1       	ldi	r20, 0x12	; 18
      e0:	60 e0       	ldi	r22, 0x00	; 0
      e2:	71 e0       	ldi	r23, 0x01	; 1
      e4:	80 e4       	ldi	r24, 0x40	; 64
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	0e 94 c8 00 	call	0x190	; 0x190 <eeprom_writebuf>
}
      ec:	00 00       	nop
      ee:	df 91       	pop	r29
      f0:	cf 91       	pop	r28
      f2:	08 95       	ret

000000f4 <config_init>:
*
* returns:
*   Nothing
*
*/
void config_init() {
      f4:	cf 93       	push	r28
      f6:	df 93       	push	r29
      f8:	cd b7       	in	r28, 0x3d	; 61
      fa:	de b7       	in	r29, 0x3e	; 62
    while (eeprom_isbusy());
      fc:	00 00       	nop
      fe:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     102:	89 2b       	or	r24, r25
     104:	e1 f7       	brne	.-8      	; 0xfe <config_init+0xa>

    /* Read data, if not valid then write factory defaults */
    eeprom_readbuf(CONFIG_ADDR, (unsigned char*)&config, sizeof(config_struct));
     106:	42 e1       	ldi	r20, 0x12	; 18
     108:	6c ea       	ldi	r22, 0xAC	; 172
     10a:	72 e0       	ldi	r23, 0x02	; 2
     10c:	80 e4       	ldi	r24, 0x40	; 64
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>
    if (!is_data_valid()) {
     114:	0e 94 53 00 	call	0xa6	; 0xa6 <is_data_valid>
     118:	89 2b       	or	r24, r25
     11a:	59 f4       	brne	.+22     	; 0x132 <config_init+0x3e>
        write_defaults();
     11c:	0e 94 65 00 	call	0xca	; 0xca <write_defaults>
        eeprom_readbuf(CONFIG_ADDR, (unsigned char*)&config, sizeof(config_struct));
     120:	42 e1       	ldi	r20, 0x12	; 18
     122:	6c ea       	ldi	r22, 0xAC	; 172
     124:	72 e0       	ldi	r23, 0x02	; 2
     126:	80 e4       	ldi	r24, 0x40	; 64
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>
        modified = 0;
     12e:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
    }

}
     132:	00 00       	nop
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	08 95       	ret

0000013a <config_update>:
*
* returns:
*   Nothing
*
*/
void config_update() {
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
     13e:	cd b7       	in	r28, 0x3d	; 61
     140:	de b7       	in	r29, 0x3e	; 62
    /* Write to the buffer if not busy and if modified flag is set */
    if (eeprom_isbusy() || !modified ) return;
     142:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     146:	89 2b       	or	r24, r25
     148:	a1 f4       	brne	.+40     	; 0x172 <config_update+0x38>
     14a:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__data_end>
     14e:	88 23       	and	r24, r24
     150:	81 f0       	breq	.+32     	; 0x172 <config_update+0x38>
    update_checksum((unsigned char*)&config, sizeof(config_struct));
     152:	62 e1       	ldi	r22, 0x12	; 18
     154:	70 e0       	ldi	r23, 0x00	; 0
     156:	8c ea       	ldi	r24, 0xAC	; 172
     158:	92 e0       	ldi	r25, 0x02	; 2
     15a:	0e 94 2f 02 	call	0x45e	; 0x45e <update_checksum>
    eeprom_writebuf(CONFIG_ADDR, (unsigned char*)&config, sizeof(config_struct));
     15e:	42 e1       	ldi	r20, 0x12	; 18
     160:	6c ea       	ldi	r22, 0xAC	; 172
     162:	72 e0       	ldi	r23, 0x02	; 2
     164:	80 e4       	ldi	r24, 0x40	; 64
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	0e 94 c8 00 	call	0x190	; 0x190 <eeprom_writebuf>
    /* Reset the flag */
    modified = 0;
     16c:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <__data_end>
     170:	01 c0       	rjmp	.+2      	; 0x174 <config_update+0x3a>
*   Nothing
*
*/
void config_update() {
    /* Write to the buffer if not busy and if modified flag is set */
    if (eeprom_isbusy() || !modified ) return;
     172:	00 00       	nop
    update_checksum((unsigned char*)&config, sizeof(config_struct));
    eeprom_writebuf(CONFIG_ADDR, (unsigned char*)&config, sizeof(config_struct));
    /* Reset the flag */
    modified = 0;

}
     174:	df 91       	pop	r29
     176:	cf 91       	pop	r28
     178:	08 95       	ret

0000017a <config_set_modified>:
*
* returns:
*   Nothing
*
*/
void config_set_modified() {
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	cd b7       	in	r28, 0x3d	; 61
     180:	de b7       	in	r29, 0x3e	; 62
    /* Set the flag */
    modified = 1;
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <__data_end>
}
     188:	00 00       	nop
     18a:	df 91       	pop	r29
     18c:	cf 91       	pop	r28
     18e:	08 95       	ret

00000190 <eeprom_writebuf>:
*
* changes:
*   writeaddr, write_busy, bufidx, writebuf, writesize, SREG, EECR
*
*/
void eeprom_writebuf(unsigned int addr, unsigned char* buf, unsigned char size) {
     190:	cf 93       	push	r28
     192:	df 93       	push	r29
     194:	cd b7       	in	r28, 0x3d	; 61
     196:	de b7       	in	r29, 0x3e	; 62
     198:	27 97       	sbiw	r28, 0x07	; 7
     19a:	0f b6       	in	r0, 0x3f	; 63
     19c:	f8 94       	cli
     19e:	de bf       	out	0x3e, r29	; 62
     1a0:	0f be       	out	0x3f, r0	; 63
     1a2:	cd bf       	out	0x3d, r28	; 61
     1a4:	9c 83       	std	Y+4, r25	; 0x04
     1a6:	8b 83       	std	Y+3, r24	; 0x03
     1a8:	7e 83       	std	Y+6, r23	; 0x06
     1aa:	6d 83       	std	Y+5, r22	; 0x05
     1ac:	4f 83       	std	Y+7, r20	; 0x07

    /* wait for eeprom*/
    while (eeprom_isbusy());
     1ae:	00 00       	nop
     1b0:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     1b4:	89 2b       	or	r24, r25
     1b6:	e1 f7       	brne	.-8      	; 0x1b0 <eeprom_writebuf+0x20>

    writeaddr = addr;
     1b8:	8b 81       	ldd	r24, Y+3	; 0x03
     1ba:	9c 81       	ldd	r25, Y+4	; 0x04
     1bc:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <writeaddr+0x1>
     1c0:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <writeaddr>
    write_busy = 1;
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <write_busy>
    bufidx = 0;
     1ca:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <bufidx>

    /* copy data to buffer*/
    for (int i = 0; i < size-1; i++) {
     1ce:	1a 82       	std	Y+2, r1	; 0x02
     1d0:	19 82       	std	Y+1, r1	; 0x01
     1d2:	13 c0       	rjmp	.+38     	; 0x1fa <eeprom_writebuf+0x6a>

        writebuf[i] = buf[i];
     1d4:	89 81       	ldd	r24, Y+1	; 0x01
     1d6:	9a 81       	ldd	r25, Y+2	; 0x02
     1d8:	2d 81       	ldd	r18, Y+5	; 0x05
     1da:	3e 81       	ldd	r19, Y+6	; 0x06
     1dc:	82 0f       	add	r24, r18
     1de:	93 1f       	adc	r25, r19
     1e0:	fc 01       	movw	r30, r24
     1e2:	20 81       	ld	r18, Z
     1e4:	89 81       	ldd	r24, Y+1	; 0x01
     1e6:	9a 81       	ldd	r25, Y+2	; 0x02
     1e8:	83 53       	subi	r24, 0x33	; 51
     1ea:	9e 4f       	sbci	r25, 0xFE	; 254
     1ec:	fc 01       	movw	r30, r24
     1ee:	20 83       	st	Z, r18
    writeaddr = addr;
    write_busy = 1;
    bufidx = 0;

    /* copy data to buffer*/
    for (int i = 0; i < size-1; i++) {
     1f0:	89 81       	ldd	r24, Y+1	; 0x01
     1f2:	9a 81       	ldd	r25, Y+2	; 0x02
     1f4:	01 96       	adiw	r24, 0x01	; 1
     1f6:	9a 83       	std	Y+2, r25	; 0x02
     1f8:	89 83       	std	Y+1, r24	; 0x01
     1fa:	8f 81       	ldd	r24, Y+7	; 0x07
     1fc:	88 2f       	mov	r24, r24
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	9c 01       	movw	r18, r24
     202:	21 50       	subi	r18, 0x01	; 1
     204:	31 09       	sbc	r19, r1
     206:	89 81       	ldd	r24, Y+1	; 0x01
     208:	9a 81       	ldd	r25, Y+2	; 0x02
     20a:	82 17       	cp	r24, r18
     20c:	93 07       	cpc	r25, r19
     20e:	14 f3       	brlt	.-60     	; 0x1d4 <eeprom_writebuf+0x44>
        writebuf[i] = buf[i];

    }

    /* set data size and enable interrupts */
    writesize = size;
     210:	8f 81       	ldd	r24, Y+7	; 0x07
     212:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <writesize>
    SREG |= 0x80;
     216:	8f e5       	ldi	r24, 0x5F	; 95
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	2f e5       	ldi	r18, 0x5F	; 95
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	f9 01       	movw	r30, r18
     220:	20 81       	ld	r18, Z
     222:	20 68       	ori	r18, 0x80	; 128
     224:	fc 01       	movw	r30, r24
     226:	20 83       	st	Z, r18
    EECR = 0x8;
     228:	8f e3       	ldi	r24, 0x3F	; 63
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	28 e0       	ldi	r18, 0x08	; 8
     22e:	fc 01       	movw	r30, r24
     230:	20 83       	st	Z, r18

}
     232:	00 00       	nop
     234:	27 96       	adiw	r28, 0x07	; 7
     236:	0f b6       	in	r0, 0x3f	; 63
     238:	f8 94       	cli
     23a:	de bf       	out	0x3e, r29	; 62
     23c:	0f be       	out	0x3f, r0	; 63
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	df 91       	pop	r29
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <eeprom_readbuf>:
*
* changes:
*   EEARH, EEARL, EECR, EEDR
*
*/
void eeprom_readbuf(unsigned int addr, unsigned char* buf, unsigned char size) {
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	cd b7       	in	r28, 0x3d	; 61
     24c:	de b7       	in	r29, 0x3e	; 62
     24e:	27 97       	sbiw	r28, 0x07	; 7
     250:	0f b6       	in	r0, 0x3f	; 63
     252:	f8 94       	cli
     254:	de bf       	out	0x3e, r29	; 62
     256:	0f be       	out	0x3f, r0	; 63
     258:	cd bf       	out	0x3d, r28	; 61
     25a:	9c 83       	std	Y+4, r25	; 0x04
     25c:	8b 83       	std	Y+3, r24	; 0x03
     25e:	7e 83       	std	Y+6, r23	; 0x06
     260:	6d 83       	std	Y+5, r22	; 0x05
     262:	4f 83       	std	Y+7, r20	; 0x07
    /* wait for eeprom */
    while (eeprom_isbusy());
     264:	00 00       	nop
     266:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     26a:	89 2b       	or	r24, r25
     26c:	e1 f7       	brne	.-8      	; 0x266 <eeprom_readbuf+0x20>

    for (int i = 0; i < size; i++){
     26e:	1a 82       	std	Y+2, r1	; 0x02
     270:	19 82       	std	Y+1, r1	; 0x01
     272:	37 c0       	rjmp	.+110    	; 0x2e2 <eeprom_readbuf+0x9c>
        /* Block */
        while ((EECR & 0x10) == 1);
     274:	00 00       	nop
     276:	8f e3       	ldi	r24, 0x3F	; 63
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	fc 01       	movw	r30, r24
     27c:	80 81       	ld	r24, Z

        /* set read address, enable read then read into buffer */
        EEARH = ((addr + i) >> 4);
     27e:	82 e4       	ldi	r24, 0x42	; 66
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	49 81       	ldd	r20, Y+1	; 0x01
     284:	5a 81       	ldd	r21, Y+2	; 0x02
     286:	2b 81       	ldd	r18, Y+3	; 0x03
     288:	3c 81       	ldd	r19, Y+4	; 0x04
     28a:	24 0f       	add	r18, r20
     28c:	35 1f       	adc	r19, r21
     28e:	32 95       	swap	r19
     290:	22 95       	swap	r18
     292:	2f 70       	andi	r18, 0x0F	; 15
     294:	23 27       	eor	r18, r19
     296:	3f 70       	andi	r19, 0x0F	; 15
     298:	23 27       	eor	r18, r19
     29a:	fc 01       	movw	r30, r24
     29c:	20 83       	st	Z, r18
        EEARL = ((addr + i) & 0x0F);
     29e:	81 e4       	ldi	r24, 0x41	; 65
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	3b 81       	ldd	r19, Y+3	; 0x03
     2a4:	29 81       	ldd	r18, Y+1	; 0x01
     2a6:	23 0f       	add	r18, r19
     2a8:	2f 70       	andi	r18, 0x0F	; 15
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 83       	st	Z, r18
        EECR |= 0x1;
     2ae:	8f e3       	ldi	r24, 0x3F	; 63
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	2f e3       	ldi	r18, 0x3F	; 63
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	f9 01       	movw	r30, r18
     2b8:	20 81       	ld	r18, Z
     2ba:	21 60       	ori	r18, 0x01	; 1
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18
        buf[i] = EEDR;
     2c0:	89 81       	ldd	r24, Y+1	; 0x01
     2c2:	9a 81       	ldd	r25, Y+2	; 0x02
     2c4:	2d 81       	ldd	r18, Y+5	; 0x05
     2c6:	3e 81       	ldd	r19, Y+6	; 0x06
     2c8:	82 0f       	add	r24, r18
     2ca:	93 1f       	adc	r25, r19
     2cc:	20 e4       	ldi	r18, 0x40	; 64
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	fc 01       	movw	r30, r24
     2d6:	20 83       	st	Z, r18
*/
void eeprom_readbuf(unsigned int addr, unsigned char* buf, unsigned char size) {
    /* wait for eeprom */
    while (eeprom_isbusy());

    for (int i = 0; i < size; i++){
     2d8:	89 81       	ldd	r24, Y+1	; 0x01
     2da:	9a 81       	ldd	r25, Y+2	; 0x02
     2dc:	01 96       	adiw	r24, 0x01	; 1
     2de:	9a 83       	std	Y+2, r25	; 0x02
     2e0:	89 83       	std	Y+1, r24	; 0x01
     2e2:	8f 81       	ldd	r24, Y+7	; 0x07
     2e4:	28 2f       	mov	r18, r24
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	9a 81       	ldd	r25, Y+2	; 0x02
     2ec:	82 17       	cp	r24, r18
     2ee:	93 07       	cpc	r25, r19
     2f0:	0c f2       	brlt	.-126    	; 0x274 <eeprom_readbuf+0x2e>
        EEARL = ((addr + i) & 0x0F);
        EECR |= 0x1;
        buf[i] = EEDR;
    }

}
     2f2:	00 00       	nop
     2f4:	27 96       	adiw	r28, 0x07	; 7
     2f6:	0f b6       	in	r0, 0x3f	; 63
     2f8:	f8 94       	cli
     2fa:	de bf       	out	0x3e, r29	; 62
     2fc:	0f be       	out	0x3f, r0	; 63
     2fe:	cd bf       	out	0x3d, r28	; 61
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	08 95       	ret

00000306 <eeprom_isbusy>:
*
* changes:
*   Nothing
*
*/
int eeprom_isbusy(){
     306:	cf 93       	push	r28
     308:	df 93       	push	r29
     30a:	cd b7       	in	r28, 0x3d	; 61
     30c:	de b7       	in	r29, 0x3e	; 62
    return write_busy;
     30e:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <write_busy>
     312:	88 2f       	mov	r24, r24
     314:	90 e0       	ldi	r25, 0x00	; 0
}
     316:	df 91       	pop	r29
     318:	cf 91       	pop	r28
     31a:	08 95       	ret

0000031c <__vector_22>:
* changes:
*   EEPROM
*
*/
void __vector_22(void) __attribute__ ((signal,used, externally_visible));
void __vector_22(void) {
     31c:	1f 92       	push	r1
     31e:	0f 92       	push	r0
     320:	0f b6       	in	r0, 0x3f	; 63
     322:	0f 92       	push	r0
     324:	11 24       	eor	r1, r1
     326:	8f 93       	push	r24
     328:	9f 93       	push	r25
     32a:	ef 93       	push	r30
     32c:	ff 93       	push	r31

    if (bufidx < writesize) {
     32e:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <bufidx>
     332:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <writesize>
     336:	98 17       	cp	r25, r24
     338:	50 f5       	brcc	.+84     	; 0x38e <__vector_22+0x72>
         /* block */
        while((EECR & 0x10) == 1);
     33a:	8f b3       	in	r24, 0x1f	; 31

        /* Set address and byte to be written */
        EEARH = ((writeaddr) >> 4);
     33c:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <writeaddr>
     340:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <writeaddr+0x1>
     344:	e4 e0       	ldi	r30, 0x04	; 4
     346:	96 95       	lsr	r25
     348:	87 95       	ror	r24
     34a:	ea 95       	dec	r30
     34c:	e1 f7       	brne	.-8      	; 0x346 <__vector_22+0x2a>
     34e:	82 bd       	out	0x22, r24	; 34
        EEARL = ((writeaddr) & 0x0F);
     350:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <writeaddr>
     354:	8f 70       	andi	r24, 0x0F	; 15
     356:	81 bd       	out	0x21, r24	; 33
        EEDR = writebuf[bufidx];
     358:	e0 91 0d 02 	lds	r30, 0x020D	; 0x80020d <bufidx>
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	e3 53       	subi	r30, 0x33	; 51
     360:	fe 4f       	sbci	r31, 0xFE	; 254
     362:	80 81       	ld	r24, Z
     364:	80 bd       	out	0x20, r24	; 32

        /* Disable interrupts */
        unsigned char sreg_state = SREG;
     366:	8f b7       	in	r24, 0x3f	; 63
        __builtin_avr_cli();
     368:	f8 94       	cli

        /* Enable write then write */
        EECR |= 0b100;
     36a:	fa 9a       	sbi	0x1f, 2	; 31
        EECR |= 0b10;
     36c:	f9 9a       	sbi	0x1f, 1	; 31

        /* Enable interrupts and increment address for next byte */
        SREG = sreg_state;
     36e:	8f bf       	out	0x3f, r24	; 63
        writeaddr++;
     370:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <writeaddr>
     374:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <writeaddr+0x1>
     378:	01 96       	adiw	r24, 0x01	; 1
     37a:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <writeaddr+0x1>
     37e:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <writeaddr>
        bufidx++;
     382:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <bufidx>
     386:	8f 5f       	subi	r24, 0xFF	; 255
     388:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <bufidx>
     38c:	03 c0       	rjmp	.+6      	; 0x394 <__vector_22+0x78>

    }
    else {

        EECR &= (~(1 << 3));
     38e:	fb 98       	cbi	0x1f, 3	; 31
        write_busy = 0;
     390:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <write_busy>

    }

}
     394:	ff 91       	pop	r31
     396:	ef 91       	pop	r30
     398:	9f 91       	pop	r25
     39a:	8f 91       	pop	r24
     39c:	0f 90       	pop	r0
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	0f 90       	pop	r0
     3a2:	1f 90       	pop	r1
     3a4:	18 95       	reti

000003a6 <main>:
* returns:
*   Nothing
*
*/

int main(void) {
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	1f 92       	push	r1
     3ac:	cd b7       	in	r28, 0x3d	; 61
     3ae:	de b7       	in	r29, 0x3e	; 62
    /* Hardware init */
    uart_init();
     3b0:	0e 94 0d 09 	call	0x121a	; 0x121a <uart_init>
    config_init();
     3b4:	0e 94 7a 00 	call	0xf4	; 0xf4 <config_init>
    led_init();
     3b8:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <led_init>
    log_init();
     3bc:	0e 94 9c 03 	call	0x738	; 0x738 <log_init>
    rtc_init();
     3c0:	0e 94 62 05 	call	0xac4	; 0xac4 <rtc_init>
    vpd_init();
     3c4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <vpd_init>
    /* Set pattern to blink and date string */
    led_set_blink("--- -.-");
     3c8:	8d e5       	ldi	r24, 0x5D	; 93
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	0e 94 fe 02 	call	0x5fc	; 0x5fc <led_set_blink>
    rtc_set_by_datestr("01/01/2019 00:00:00");
     3d0:	85 e6       	ldi	r24, 0x65	; 101
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	0e 94 91 05 	call	0xb22	; 0xb22 <rtc_set_by_datestr>
    /*  */
    uart_writestr("SER 486 Project 2 - Jose Solis Salazar\n\r");
     3d8:	89 e7       	ldi	r24, 0x79	; 121
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>

    /* Print default VPD values */
    uart_writestr(vpd.model);
     3e0:	82 ec       	ldi	r24, 0xC2	; 194
     3e2:	92 e0       	ldi	r25, 0x02	; 2
     3e4:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    uart_writestr("\r\n");
     3e8:	82 ea       	ldi	r24, 0xA2	; 162
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    uart_writestr(vpd.manufacturer);
     3f0:	8e ec       	ldi	r24, 0xCE	; 206
     3f2:	92 e0       	ldi	r25, 0x02	; 2
     3f4:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    uart_writestr("\r\n");
     3f8:	82 ea       	ldi	r24, 0xA2	; 162
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    uart_writestr(vpd.token);
     400:	8e eb       	ldi	r24, 0xBE	; 190
     402:	92 e0       	ldi	r25, 0x02	; 2
     404:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    uart_writestr("\r\n");
     408:	82 ea       	ldi	r24, 0xA2	; 162
     40a:	91 e0       	ldi	r25, 0x01	; 1
     40c:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>

    /* Set config static ip and modified state */
    config.use_static_ip = 1;
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <config+0xc>
    config_set_modified();
     416:	0e 94 bd 00 	call	0x17a	; 0x17a <config_set_modified>

    /* Clear log and add logs */
    log_clear();
     41a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <log_clear>
    log_add_record(0xaa);
     41e:	8a ea       	ldi	r24, 0xAA	; 170
     420:	0e 94 97 04 	call	0x92e	; 0x92e <log_add_record>
    log_add_record(0xbb);
     424:	8b eb       	ldi	r24, 0xBB	; 187
     426:	0e 94 97 04 	call	0x92e	; 0x92e <log_add_record>
    log_add_record(0xcc);
     42a:	8c ec       	ldi	r24, 0xCC	; 204
     42c:	0e 94 97 04 	call	0x92e	; 0x92e <log_add_record>

    unsigned char dumped = 0;
     430:	19 82       	std	Y+1, r1	; 0x01

    while(1){
        /*update led, log and config */
        led_update();
     432:	0e 94 10 03 	call	0x620	; 0x620 <led_update>
        log_update();
     436:	0e 94 61 04 	call	0x8c2	; 0x8c2 <log_update>
        config_update();
     43a:	0e 94 9d 00 	call	0x13a	; 0x13a <config_update>

        /* Print EEPROM contents */
        if ((!eeprom_isbusy()) && (!dumped)) {
     43e:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     442:	89 2b       	or	r24, r25
     444:	b1 f7       	brne	.-20     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     446:	89 81       	ldd	r24, Y+1	; 0x01
     448:	88 23       	and	r24, r24
     44a:	99 f7       	brne	.-26     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
          dump_eeprom(0,0x100);
     44c:	60 e0       	ldi	r22, 0x00	; 0
     44e:	71 e0       	ldi	r23, 0x01	; 1
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 d7 09 	call	0x13ae	; 0x13ae <dump_eeprom>
          dumped=1;
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	89 83       	std	Y+1, r24	; 0x01
        }
    }
     45c:	ea cf       	rjmp	.-44     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>

0000045e <update_checksum>:
*
* returns:
*   Nothing
*
*/
void update_checksum(unsigned char* data, unsigned int size) {
     45e:	cf 93       	push	r28
     460:	df 93       	push	r29
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	28 97       	sbiw	r28, 0x08	; 8
     468:	0f b6       	in	r0, 0x3f	; 63
     46a:	f8 94       	cli
     46c:	de bf       	out	0x3e, r29	; 62
     46e:	0f be       	out	0x3f, r0	; 63
     470:	cd bf       	out	0x3d, r28	; 61
     472:	9e 83       	std	Y+6, r25	; 0x06
     474:	8d 83       	std	Y+5, r24	; 0x05
     476:	78 87       	std	Y+8, r23	; 0x08
     478:	6f 83       	std	Y+7, r22	; 0x07
    int sum = 0;
     47a:	1a 82       	std	Y+2, r1	; 0x02
     47c:	19 82       	std	Y+1, r1	; 0x01
    for (int i = 0; i < (size - 2); i++){
     47e:	1c 82       	std	Y+4, r1	; 0x04
     480:	1b 82       	std	Y+3, r1	; 0x03
     482:	15 c0       	rjmp	.+42     	; 0x4ae <update_checksum+0x50>
        sum += data[i];
     484:	8b 81       	ldd	r24, Y+3	; 0x03
     486:	9c 81       	ldd	r25, Y+4	; 0x04
     488:	2d 81       	ldd	r18, Y+5	; 0x05
     48a:	3e 81       	ldd	r19, Y+6	; 0x06
     48c:	82 0f       	add	r24, r18
     48e:	93 1f       	adc	r25, r19
     490:	fc 01       	movw	r30, r24
     492:	80 81       	ld	r24, Z
     494:	88 2f       	mov	r24, r24
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	29 81       	ldd	r18, Y+1	; 0x01
     49a:	3a 81       	ldd	r19, Y+2	; 0x02
     49c:	82 0f       	add	r24, r18
     49e:	93 1f       	adc	r25, r19
     4a0:	9a 83       	std	Y+2, r25	; 0x02
     4a2:	89 83       	std	Y+1, r24	; 0x01
*   Nothing
*
*/
void update_checksum(unsigned char* data, unsigned int size) {
    int sum = 0;
    for (int i = 0; i < (size - 2); i++){
     4a4:	8b 81       	ldd	r24, Y+3	; 0x03
     4a6:	9c 81       	ldd	r25, Y+4	; 0x04
     4a8:	01 96       	adiw	r24, 0x01	; 1
     4aa:	9c 83       	std	Y+4, r25	; 0x04
     4ac:	8b 83       	std	Y+3, r24	; 0x03
     4ae:	8f 81       	ldd	r24, Y+7	; 0x07
     4b0:	98 85       	ldd	r25, Y+8	; 0x08
     4b2:	9c 01       	movw	r18, r24
     4b4:	22 50       	subi	r18, 0x02	; 2
     4b6:	31 09       	sbc	r19, r1
     4b8:	8b 81       	ldd	r24, Y+3	; 0x03
     4ba:	9c 81       	ldd	r25, Y+4	; 0x04
     4bc:	82 17       	cp	r24, r18
     4be:	93 07       	cpc	r25, r19
     4c0:	08 f3       	brcs	.-62     	; 0x484 <update_checksum+0x26>
        sum += data[i];
    }
    data[size - 1] = (sum * -1);
     4c2:	8f 81       	ldd	r24, Y+7	; 0x07
     4c4:	98 85       	ldd	r25, Y+8	; 0x08
     4c6:	01 97       	sbiw	r24, 0x01	; 1
     4c8:	2d 81       	ldd	r18, Y+5	; 0x05
     4ca:	3e 81       	ldd	r19, Y+6	; 0x06
     4cc:	82 0f       	add	r24, r18
     4ce:	93 1f       	adc	r25, r19
     4d0:	29 81       	ldd	r18, Y+1	; 0x01
     4d2:	21 95       	neg	r18
     4d4:	fc 01       	movw	r30, r24
     4d6:	20 83       	st	Z, r18

}
     4d8:	00 00       	nop
     4da:	28 96       	adiw	r28, 0x08	; 8
     4dc:	0f b6       	in	r0, 0x3f	; 63
     4de:	f8 94       	cli
     4e0:	de bf       	out	0x3e, r29	; 62
     4e2:	0f be       	out	0x3f, r0	; 63
     4e4:	cd bf       	out	0x3d, r28	; 61
     4e6:	df 91       	pop	r29
     4e8:	cf 91       	pop	r28
     4ea:	08 95       	ret

000004ec <is_checksum_valid>:
*
* changes:
*   EEPROM
*
*/
int is_checksum_valid(unsigned char* data, unsigned int size) {
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	cd b7       	in	r28, 0x3d	; 61
     4f2:	de b7       	in	r29, 0x3e	; 62
     4f4:	28 97       	sbiw	r28, 0x08	; 8
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	9e 83       	std	Y+6, r25	; 0x06
     502:	8d 83       	std	Y+5, r24	; 0x05
     504:	78 87       	std	Y+8, r23	; 0x08
     506:	6f 83       	std	Y+7, r22	; 0x07
    int sum = 0;
     508:	1a 82       	std	Y+2, r1	; 0x02
     50a:	19 82       	std	Y+1, r1	; 0x01
    for (int i = 0; i < size; i++){
     50c:	1c 82       	std	Y+4, r1	; 0x04
     50e:	1b 82       	std	Y+3, r1	; 0x03
     510:	15 c0       	rjmp	.+42     	; 0x53c <is_checksum_valid+0x50>
        sum += data[i];
     512:	8b 81       	ldd	r24, Y+3	; 0x03
     514:	9c 81       	ldd	r25, Y+4	; 0x04
     516:	2d 81       	ldd	r18, Y+5	; 0x05
     518:	3e 81       	ldd	r19, Y+6	; 0x06
     51a:	82 0f       	add	r24, r18
     51c:	93 1f       	adc	r25, r19
     51e:	fc 01       	movw	r30, r24
     520:	80 81       	ld	r24, Z
     522:	88 2f       	mov	r24, r24
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	29 81       	ldd	r18, Y+1	; 0x01
     528:	3a 81       	ldd	r19, Y+2	; 0x02
     52a:	82 0f       	add	r24, r18
     52c:	93 1f       	adc	r25, r19
     52e:	9a 83       	std	Y+2, r25	; 0x02
     530:	89 83       	std	Y+1, r24	; 0x01
*   EEPROM
*
*/
int is_checksum_valid(unsigned char* data, unsigned int size) {
    int sum = 0;
    for (int i = 0; i < size; i++){
     532:	8b 81       	ldd	r24, Y+3	; 0x03
     534:	9c 81       	ldd	r25, Y+4	; 0x04
     536:	01 96       	adiw	r24, 0x01	; 1
     538:	9c 83       	std	Y+4, r25	; 0x04
     53a:	8b 83       	std	Y+3, r24	; 0x03
     53c:	2b 81       	ldd	r18, Y+3	; 0x03
     53e:	3c 81       	ldd	r19, Y+4	; 0x04
     540:	8f 81       	ldd	r24, Y+7	; 0x07
     542:	98 85       	ldd	r25, Y+8	; 0x08
     544:	28 17       	cp	r18, r24
     546:	39 07       	cpc	r19, r25
     548:	20 f3       	brcs	.-56     	; 0x512 <is_checksum_valid+0x26>
        sum += data[i];
    }
    return (sum == 0);
     54a:	21 e0       	ldi	r18, 0x01	; 1
     54c:	89 81       	ldd	r24, Y+1	; 0x01
     54e:	9a 81       	ldd	r25, Y+2	; 0x02
     550:	89 2b       	or	r24, r25
     552:	09 f0       	breq	.+2      	; 0x556 <is_checksum_valid+0x6a>
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	82 2f       	mov	r24, r18
     558:	90 e0       	ldi	r25, 0x00	; 0

}
     55a:	28 96       	adiw	r28, 0x08	; 8
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	f8 94       	cli
     560:	de bf       	out	0x3e, r29	; 62
     562:	0f be       	out	0x3f, r0	; 63
     564:	cd bf       	out	0x3d, r28	; 61
     566:	df 91       	pop	r29
     568:	cf 91       	pop	r28
     56a:	08 95       	ret

0000056c <is_data_valid>:
*
* returns:
*   1 if data valid else returns 0
*/

static int is_data_valid() {
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	00 d0       	rcall	.+0      	; 0x572 <is_data_valid+0x6>
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
    int result = 1;
     576:	81 e0       	ldi	r24, 0x01	; 1
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	9a 83       	std	Y+2, r25	; 0x02
     57c:	89 83       	std	Y+1, r24	; 0x01

    /* If vpd.token != "SER" or checksum not valid return 0 */
    if(vpd.token != defaults.token ){
           result = 0;
     57e:	1a 82       	std	Y+2, r1	; 0x02
     580:	19 82       	std	Y+1, r1	; 0x01
    else if (is_checksum_valid((unsigned char*)&vpd, sizeof(vpd_struct))) {

       result = 0;
    }

    return result;
     582:	89 81       	ldd	r24, Y+1	; 0x01
     584:	9a 81       	ldd	r25, Y+2	; 0x02

}
     586:	0f 90       	pop	r0
     588:	0f 90       	pop	r0
     58a:	df 91       	pop	r29
     58c:	cf 91       	pop	r28
     58e:	08 95       	ret

00000590 <write_defaults>:
*   None
*
* returns:
*   Nothing
*/
static void write_defaults() {
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
     594:	cd b7       	in	r28, 0x3d	; 61
     596:	de b7       	in	r29, 0x3e	; 62
    update_checksum((unsigned char*) &defaults, sizeof(vpd_struct));
     598:	67 e3       	ldi	r22, 0x37	; 55
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	82 e1       	ldi	r24, 0x12	; 18
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	0e 94 2f 02 	call	0x45e	; 0x45e <update_checksum>
    eeprom_writebuf(0x00, (unsigned char*)&defaults, sizeof(vpd_struct));
     5a4:	47 e3       	ldi	r20, 0x37	; 55
     5a6:	62 e1       	ldi	r22, 0x12	; 18
     5a8:	71 e0       	ldi	r23, 0x01	; 1
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	0e 94 c8 00 	call	0x190	; 0x190 <eeprom_writebuf>

}
     5b2:	00 00       	nop
     5b4:	df 91       	pop	r29
     5b6:	cf 91       	pop	r28
     5b8:	08 95       	ret

000005ba <vpd_init>:
*   None
*
* returns:
*   Nothing
*/
void vpd_init() {
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	cd b7       	in	r28, 0x3d	; 61
     5c0:	de b7       	in	r29, 0x3e	; 62
    while (eeprom_isbusy());
     5c2:	00 00       	nop
     5c4:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     5c8:	89 2b       	or	r24, r25
     5ca:	e1 f7       	brne	.-8      	; 0x5c4 <vpd_init+0xa>
    eeprom_readbuf(0x0, (unsigned char*)&vpd, sizeof(vpd_struct));
     5cc:	47 e3       	ldi	r20, 0x37	; 55
     5ce:	6e eb       	ldi	r22, 0xBE	; 190
     5d0:	72 e0       	ldi	r23, 0x02	; 2
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>

    if(!is_data_valid()){
     5da:	0e 94 b6 02 	call	0x56c	; 0x56c <is_data_valid>
     5de:	89 2b       	or	r24, r25
     5e0:	49 f4       	brne	.+18     	; 0x5f4 <vpd_init+0x3a>
       write_defaults();
     5e2:	0e 94 c8 02 	call	0x590	; 0x590 <write_defaults>
       eeprom_readbuf(0x0, (unsigned char*)&vpd, sizeof(vpd_struct));
     5e6:	47 e3       	ldi	r20, 0x37	; 55
     5e8:	6e eb       	ldi	r22, 0xBE	; 190
     5ea:	72 e0       	ldi	r23, 0x02	; 2
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>

    }
}
     5f4:	00 00       	nop
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	08 95       	ret

000005fc <led_set_blink>:
     5fc:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <blink_msg+0x1>
     600:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <blink_msg>
     604:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <blink_pos+0x1>
     608:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <blink_pos>
     60c:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <blink_state>
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0e 94 0d 0b 	call	0x161a	; 0x161a <delay_set>
     61c:	0c 94 6f 03 	jmp	0x6de	; 0x6de <led_off>

00000620 <led_update>:
     620:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <blink_msg>
     624:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <blink_msg+0x1>
     628:	89 2b       	or	r24, r25
     62a:	09 f4       	brne	.+2      	; 0x62e <led_update+0xe>
     62c:	52 c0       	rjmp	.+164    	; 0x6d2 <led_update+0xb2>
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <delay_isdone>
     636:	89 2b       	or	r24, r25
     638:	09 f4       	brne	.+2      	; 0x63c <led_update+0x1c>
     63a:	4b c0       	rjmp	.+150    	; 0x6d2 <led_update+0xb2>
     63c:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <blink_state>
     640:	81 11       	cpse	r24, r1
     642:	34 c0       	rjmp	.+104    	; 0x6ac <led_update+0x8c>
     644:	20 91 15 02 	lds	r18, 0x0215	; 0x800215 <blink_pos>
     648:	30 91 16 02 	lds	r19, 0x0216	; 0x800216 <blink_pos+0x1>
     64c:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <blink_msg>
     650:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <blink_msg+0x1>
     654:	e2 0f       	add	r30, r18
     656:	f3 1f       	adc	r31, r19
     658:	80 81       	ld	r24, Z
     65a:	80 32       	cpi	r24, 0x20	; 32
     65c:	e9 f0       	breq	.+58     	; 0x698 <led_update+0x78>
     65e:	3c f4       	brge	.+14     	; 0x66e <led_update+0x4e>
     660:	81 11       	cpse	r24, r1
     662:	1d c0       	rjmp	.+58     	; 0x69e <led_update+0x7e>
     664:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <blink_pos+0x1>
     668:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <blink_pos>
     66c:	08 95       	ret
     66e:	8d 32       	cpi	r24, 0x2D	; 45
     670:	39 f0       	breq	.+14     	; 0x680 <led_update+0x60>
     672:	8e 32       	cpi	r24, 0x2E	; 46
     674:	a1 f4       	brne	.+40     	; 0x69e <led_update+0x7e>
     676:	0e 94 6d 03 	call	0x6da	; 0x6da <led_on>
     67a:	6a ef       	ldi	r22, 0xFA	; 250
     67c:	70 e0       	ldi	r23, 0x00	; 0
     67e:	04 c0       	rjmp	.+8      	; 0x688 <led_update+0x68>
     680:	0e 94 6d 03 	call	0x6da	; 0x6da <led_on>
     684:	6e ee       	ldi	r22, 0xEE	; 238
     686:	72 e0       	ldi	r23, 0x02	; 2
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	0e 94 0d 0b 	call	0x161a	; 0x161a <delay_set>
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <blink_state>
     696:	08 95       	ret
     698:	68 ee       	ldi	r22, 0xE8	; 232
     69a:	73 e0       	ldi	r23, 0x03	; 3
     69c:	0b c0       	rjmp	.+22     	; 0x6b4 <led_update+0x94>
     69e:	2f 5f       	subi	r18, 0xFF	; 255
     6a0:	3f 4f       	sbci	r19, 0xFF	; 255
     6a2:	30 93 16 02 	sts	0x0216, r19	; 0x800216 <blink_pos+0x1>
     6a6:	20 93 15 02 	sts	0x0215, r18	; 0x800215 <blink_pos>
     6aa:	08 95       	ret
     6ac:	0e 94 6f 03 	call	0x6de	; 0x6de <led_off>
     6b0:	64 e6       	ldi	r22, 0x64	; 100
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	0e 94 0d 0b 	call	0x161a	; 0x161a <delay_set>
     6bc:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <blink_state>
     6c0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <blink_pos>
     6c4:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <blink_pos+0x1>
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	90 93 16 02 	sts	0x0216, r25	; 0x800216 <blink_pos+0x1>
     6ce:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <blink_pos>
     6d2:	08 95       	ret

000006d4 <led_init>:
     6d4:	21 9a       	sbi	0x04, 1	; 4
     6d6:	29 98       	cbi	0x05, 1	; 5
     6d8:	08 95       	ret

000006da <led_on>:
     6da:	29 9a       	sbi	0x05, 1	; 5
     6dc:	08 95       	ret

000006de <led_off>:
     6de:	29 98       	cbi	0x05, 1	; 5
     6e0:	08 95       	ret

000006e2 <led_is_on>:
     6e2:	85 b1       	in	r24, 0x05	; 5
     6e4:	86 95       	lsr	r24
     6e6:	81 70       	andi	r24, 0x01	; 1
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	08 95       	ret

000006ec <log_is_data_valid>:
     6ec:	80 31       	cpi	r24, 0x10	; 16
     6ee:	91 05       	cpc	r25, r1
     6f0:	04 f5       	brge	.+64     	; 0x732 <log_is_data_valid+0x46>
     6f2:	27 e0       	ldi	r18, 0x07	; 7
     6f4:	28 9f       	mul	r18, r24
     6f6:	a0 01       	movw	r20, r0
     6f8:	29 9f       	mul	r18, r25
     6fa:	50 0d       	add	r21, r0
     6fc:	11 24       	eor	r1, r1
     6fe:	fa 01       	movw	r30, r20
     700:	e6 5e       	subi	r30, 0xE6	; 230
     702:	fd 4f       	sbci	r31, 0xFD	; 253
     704:	80 81       	ld	r24, Z
     706:	81 32       	cpi	r24, 0x21	; 33
     708:	a0 f4       	brcc	.+40     	; 0x732 <log_is_data_valid+0x46>
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	fa 01       	movw	r30, r20
     712:	e8 0f       	add	r30, r24
     714:	f9 1f       	adc	r31, r25
     716:	e6 5e       	subi	r30, 0xE6	; 230
     718:	fd 4f       	sbci	r31, 0xFD	; 253
     71a:	30 81       	ld	r19, Z
     71c:	23 0f       	add	r18, r19
     71e:	01 96       	adiw	r24, 0x01	; 1
     720:	87 30       	cpi	r24, 0x07	; 7
     722:	91 05       	cpc	r25, r1
     724:	a9 f7       	brne	.-22     	; 0x710 <log_is_data_valid+0x24>
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	22 23       	and	r18, r18
     72c:	21 f0       	breq	.+8      	; 0x736 <log_is_data_valid+0x4a>
     72e:	80 e0       	ldi	r24, 0x00	; 0
     730:	08 95       	ret
     732:	80 e0       	ldi	r24, 0x00	; 0
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	08 95       	ret

00000738 <log_init>:
     738:	6f 92       	push	r6
     73a:	7f 92       	push	r7
     73c:	8f 92       	push	r8
     73e:	9f 92       	push	r9
     740:	af 92       	push	r10
     742:	bf 92       	push	r11
     744:	cf 92       	push	r12
     746:	df 92       	push	r13
     748:	ef 92       	push	r14
     74a:	ff 92       	push	r15
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     758:	89 2b       	or	r24, r25
     75a:	e1 f7       	brne	.-8      	; 0x754 <log_init+0x1c>
     75c:	0a e8       	ldi	r16, 0x8A	; 138
     75e:	12 e0       	ldi	r17, 0x02	; 2
     760:	c0 e8       	ldi	r28, 0x80	; 128
     762:	d0 e0       	ldi	r29, 0x00	; 0
     764:	be 01       	movw	r22, r28
     766:	66 56       	subi	r22, 0x66	; 102
     768:	7e 4f       	sbci	r23, 0xFE	; 254
     76a:	47 e0       	ldi	r20, 0x07	; 7
     76c:	ce 01       	movw	r24, r28
     76e:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>
     772:	f8 01       	movw	r30, r16
     774:	11 92       	st	Z+, r1
     776:	8f 01       	movw	r16, r30
     778:	27 96       	adiw	r28, 0x07	; 7
     77a:	c0 3f       	cpi	r28, 0xF0	; 240
     77c:	d1 05       	cpc	r29, r1
     77e:	91 f7       	brne	.-28     	; 0x764 <log_init+0x2c>
     780:	4a e1       	ldi	r20, 0x1A	; 26
     782:	e4 2e       	mov	r14, r20
     784:	42 e0       	ldi	r20, 0x02	; 2
     786:	f4 2e       	mov	r15, r20
     788:	87 01       	movw	r16, r14
     78a:	c0 e0       	ldi	r28, 0x00	; 0
     78c:	d0 e0       	ldi	r29, 0x00	; 0
     78e:	d1 2c       	mov	r13, r1
     790:	b1 2c       	mov	r11, r1
     792:	77 24       	eor	r7, r7
     794:	7a 94       	dec	r7
     796:	ce 01       	movw	r24, r28
     798:	0e 94 76 03 	call	0x6ec	; 0x6ec <log_is_data_valid>
     79c:	89 2b       	or	r24, r25
     79e:	41 f0       	breq	.+16     	; 0x7b0 <log_init+0x78>
     7a0:	f8 01       	movw	r30, r16
     7a2:	80 81       	ld	r24, Z
     7a4:	87 15       	cp	r24, r7
     7a6:	20 f4       	brcc	.+8      	; 0x7b0 <log_init+0x78>
     7a8:	bc 2e       	mov	r11, r28
     7aa:	78 2e       	mov	r7, r24
     7ac:	dd 24       	eor	r13, r13
     7ae:	d3 94       	inc	r13
     7b0:	21 96       	adiw	r28, 0x01	; 1
     7b2:	09 5f       	subi	r16, 0xF9	; 249
     7b4:	1f 4f       	sbci	r17, 0xFF	; 255
     7b6:	c0 31       	cpi	r28, 0x10	; 16
     7b8:	d1 05       	cpc	r29, r1
     7ba:	69 f7       	brne	.-38     	; 0x796 <log_init+0x5e>
     7bc:	dd 20       	and	r13, r13
     7be:	09 f4       	brne	.+2      	; 0x7c2 <log_init+0x8a>
     7c0:	6a c0       	rjmp	.+212    	; 0x896 <log_init+0x15e>
     7c2:	b0 92 19 02 	sts	0x0219, r11	; 0x800219 <last_written>
     7c6:	70 92 18 02 	sts	0x0218, r7	; 0x800218 <last_transaction_written>
     7ca:	cb 2d       	mov	r28, r11
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
     7ce:	8e 01       	movw	r16, r28
     7d0:	0f 5f       	subi	r16, 0xFF	; 255
     7d2:	1f 4f       	sbci	r17, 0xFF	; 255
     7d4:	87 2c       	mov	r8, r7
     7d6:	2f e0       	ldi	r18, 0x0F	; 15
     7d8:	a2 2e       	mov	r10, r18
     7da:	37 e0       	ldi	r19, 0x07	; 7
     7dc:	93 2e       	mov	r9, r19
     7de:	68 01       	movw	r12, r16
     7e0:	ff e0       	ldi	r31, 0x0F	; 15
     7e2:	cf 22       	and	r12, r31
     7e4:	dd 24       	eor	r13, r13
     7e6:	c6 01       	movw	r24, r12
     7e8:	0e 94 76 03 	call	0x6ec	; 0x6ec <log_is_data_valid>
     7ec:	89 2b       	or	r24, r25
     7ee:	61 f4       	brne	.+24     	; 0x808 <log_init+0xd0>
     7f0:	b0 92 17 02 	sts	0x0217, r11	; 0x800217 <tail>
     7f4:	8e 01       	movw	r16, r28
     7f6:	01 50       	subi	r16, 0x01	; 1
     7f8:	11 09       	sbc	r17, r1
     7fa:	60 97       	sbiw	r28, 0x10	; 16
     7fc:	80 e1       	ldi	r24, 0x10	; 16
     7fe:	a8 2e       	mov	r10, r24
     800:	b1 2c       	mov	r11, r1
     802:	97 e0       	ldi	r25, 0x07	; 7
     804:	69 2e       	mov	r6, r25
     806:	3a c0       	rjmp	.+116    	; 0x87c <log_init+0x144>
     808:	9c 9c       	mul	r9, r12
     80a:	f0 01       	movw	r30, r0
     80c:	9d 9c       	mul	r9, r13
     80e:	f0 0d       	add	r31, r0
     810:	11 24       	eor	r1, r1
     812:	e6 5e       	subi	r30, 0xE6	; 230
     814:	fd 4f       	sbci	r31, 0xFD	; 253
     816:	40 81       	ld	r20, Z
     818:	24 2f       	mov	r18, r20
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	88 2d       	mov	r24, r8
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	01 96       	adiw	r24, 0x01	; 1
     822:	8f 71       	andi	r24, 0x1F	; 31
     824:	99 27       	eor	r25, r25
     826:	28 17       	cp	r18, r24
     828:	39 07       	cpc	r19, r25
     82a:	11 f7       	brne	.-60     	; 0x7f0 <log_init+0xb8>
     82c:	c0 92 19 02 	sts	0x0219, r12	; 0x800219 <last_written>
     830:	40 93 18 02 	sts	0x0218, r20	; 0x800218 <last_transaction_written>
     834:	aa 94       	dec	r10
     836:	0f 5f       	subi	r16, 0xFF	; 255
     838:	1f 4f       	sbci	r17, 0xFF	; 255
     83a:	aa 20       	and	r10, r10
     83c:	c9 f2       	breq	.-78     	; 0x7f0 <log_init+0xb8>
     83e:	84 2e       	mov	r8, r20
     840:	ce cf       	rjmp	.-100    	; 0x7de <log_init+0xa6>
     842:	f7 01       	movw	r30, r14
     844:	20 81       	ld	r18, Z
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	87 2d       	mov	r24, r7
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	4f 96       	adiw	r24, 0x1f	; 31
     84e:	8f 71       	andi	r24, 0x1F	; 31
     850:	99 27       	eor	r25, r25
     852:	28 17       	cp	r18, r24
     854:	39 07       	cpc	r19, r25
     856:	31 f5       	brne	.+76     	; 0x8a4 <log_init+0x16c>
     858:	c0 92 17 02 	sts	0x0217, r12	; 0x800217 <tail>
     85c:	68 9c       	mul	r6, r8
     85e:	f0 01       	movw	r30, r0
     860:	69 9c       	mul	r6, r9
     862:	f0 0d       	add	r31, r0
     864:	11 24       	eor	r1, r1
     866:	e6 5e       	subi	r30, 0xE6	; 230
     868:	fd 4f       	sbci	r31, 0xFD	; 253
     86a:	70 80       	ld	r7, Z
     86c:	01 50       	subi	r16, 0x01	; 1
     86e:	11 09       	sbc	r17, r1
     870:	f7 e0       	ldi	r31, 0x07	; 7
     872:	ef 0e       	add	r14, r31
     874:	f1 1c       	adc	r15, r1
     876:	0c 17       	cp	r16, r28
     878:	1d 07       	cpc	r17, r29
     87a:	a1 f0       	breq	.+40     	; 0x8a4 <log_init+0x16c>
     87c:	c8 01       	movw	r24, r16
     87e:	b5 01       	movw	r22, r10
     880:	0e 94 4d 0c 	call	0x189a	; 0x189a <__divmodhi4>
     884:	6c 01       	movw	r12, r24
     886:	4c 01       	movw	r8, r24
     888:	99 24       	eor	r9, r9
     88a:	c4 01       	movw	r24, r8
     88c:	0e 94 76 03 	call	0x6ec	; 0x6ec <log_is_data_valid>
     890:	89 2b       	or	r24, r25
     892:	b9 f6       	brne	.-82     	; 0x842 <log_init+0x10a>
     894:	07 c0       	rjmp	.+14     	; 0x8a4 <log_init+0x16c>
     896:	8f e0       	ldi	r24, 0x0F	; 15
     898:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <last_written>
     89c:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <last_transaction_written>
     8a0:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <tail>
     8a4:	df 91       	pop	r29
     8a6:	cf 91       	pop	r28
     8a8:	1f 91       	pop	r17
     8aa:	0f 91       	pop	r16
     8ac:	ff 90       	pop	r15
     8ae:	ef 90       	pop	r14
     8b0:	df 90       	pop	r13
     8b2:	cf 90       	pop	r12
     8b4:	bf 90       	pop	r11
     8b6:	af 90       	pop	r10
     8b8:	9f 90       	pop	r9
     8ba:	8f 90       	pop	r8
     8bc:	7f 90       	pop	r7
     8be:	6f 90       	pop	r6
     8c0:	08 95       	ret

000008c2 <log_update>:
     8c2:	ef 92       	push	r14
     8c4:	ff 92       	push	r15
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	0e 94 83 01 	call	0x306	; 0x306 <eeprom_isbusy>
     8d0:	89 2b       	or	r24, r25
     8d2:	39 f5       	brne	.+78     	; 0x922 <__stack+0x23>
     8d4:	ea e8       	ldi	r30, 0x8A	; 138
     8d6:	f2 e0       	ldi	r31, 0x02	; 2
     8d8:	c0 e0       	ldi	r28, 0x00	; 0
     8da:	d0 e0       	ldi	r29, 0x00	; 0
     8dc:	81 91       	ld	r24, Z+
     8de:	88 23       	and	r24, r24
     8e0:	e1 f0       	breq	.+56     	; 0x91a <__stack+0x1b>
     8e2:	17 e0       	ldi	r17, 0x07	; 7
     8e4:	1c 9f       	mul	r17, r28
     8e6:	c0 01       	movw	r24, r0
     8e8:	1d 9f       	mul	r17, r29
     8ea:	90 0d       	add	r25, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	9c 01       	movw	r18, r24
     8f0:	26 5e       	subi	r18, 0xE6	; 230
     8f2:	3d 4f       	sbci	r19, 0xFD	; 253
     8f4:	79 01       	movw	r14, r18
     8f6:	67 e0       	ldi	r22, 0x07	; 7
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	c9 01       	movw	r24, r18
     8fc:	0e 94 2f 02 	call	0x45e	; 0x45e <update_checksum>
     900:	c1 9f       	mul	r28, r17
     902:	c0 01       	movw	r24, r0
     904:	11 24       	eor	r1, r1
     906:	47 e0       	ldi	r20, 0x07	; 7
     908:	b7 01       	movw	r22, r14
     90a:	80 58       	subi	r24, 0x80	; 128
     90c:	9f 4f       	sbci	r25, 0xFF	; 255
     90e:	0e 94 c8 00 	call	0x190	; 0x190 <eeprom_writebuf>
     912:	c6 57       	subi	r28, 0x76	; 118
     914:	dd 4f       	sbci	r29, 0xFD	; 253
     916:	18 82       	st	Y, r1
     918:	04 c0       	rjmp	.+8      	; 0x922 <__stack+0x23>
     91a:	21 96       	adiw	r28, 0x01	; 1
     91c:	c0 31       	cpi	r28, 0x10	; 16
     91e:	d1 05       	cpc	r29, r1
     920:	e9 f6       	brne	.-70     	; 0x8dc <log_update+0x1a>
     922:	df 91       	pop	r29
     924:	cf 91       	pop	r28
     926:	1f 91       	pop	r17
     928:	ff 90       	pop	r15
     92a:	ef 90       	pop	r14
     92c:	08 95       	ret

0000092e <log_add_record>:
     92e:	ef 92       	push	r14
     930:	ff 92       	push	r15
     932:	0f 93       	push	r16
     934:	1f 93       	push	r17
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	e8 2e       	mov	r14, r24
     93c:	c0 91 19 02 	lds	r28, 0x0219	; 0x800219 <last_written>
     940:	d0 e0       	ldi	r29, 0x00	; 0
     942:	21 96       	adiw	r28, 0x01	; 1
     944:	cf 70       	andi	r28, 0x0F	; 15
     946:	dd 27       	eor	r29, r29
     948:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <tail>
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	0e 94 76 03 	call	0x6ec	; 0x6ec <log_is_data_valid>
     952:	f8 2e       	mov	r15, r24
     954:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <last_transaction_written>
     958:	8f 5f       	subi	r24, 0xFF	; 255
     95a:	81 32       	cpi	r24, 0x21	; 33
     95c:	18 f4       	brcc	.+6      	; 0x964 <log_add_record+0x36>
     95e:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <last_transaction_written>
     962:	02 c0       	rjmp	.+4      	; 0x968 <log_add_record+0x3a>
     964:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <last_transaction_written>
     968:	87 e0       	ldi	r24, 0x07	; 7
     96a:	8c 9f       	mul	r24, r28
     96c:	80 01       	movw	r16, r0
     96e:	8d 9f       	mul	r24, r29
     970:	10 0d       	add	r17, r0
     972:	11 24       	eor	r1, r1
     974:	06 5e       	subi	r16, 0xE6	; 230
     976:	1d 4f       	sbci	r17, 0xFD	; 253
     978:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <last_transaction_written>
     97c:	f8 01       	movw	r30, r16
     97e:	80 83       	st	Z, r24
     980:	0e 94 64 05 	call	0xac8	; 0xac8 <rtc_get_date>
     984:	f8 01       	movw	r30, r16
     986:	61 83       	std	Z+1, r22	; 0x01
     988:	72 83       	std	Z+2, r23	; 0x02
     98a:	83 83       	std	Z+3, r24	; 0x03
     98c:	94 83       	std	Z+4, r25	; 0x04
     98e:	e5 82       	std	Z+5, r14	; 0x05
     990:	c0 93 19 02 	sts	0x0219, r28	; 0x800219 <last_written>
     994:	67 e0       	ldi	r22, 0x07	; 7
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	c8 01       	movw	r24, r16
     99a:	0e 94 2f 02 	call	0x45e	; 0x45e <update_checksum>
     99e:	c6 57       	subi	r28, 0x76	; 118
     9a0:	dd 4f       	sbci	r29, 0xFD	; 253
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	88 83       	st	Y, r24
     9a6:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <last_written>
     9aa:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <tail>
     9ae:	89 13       	cpse	r24, r25
     9b0:	08 c0       	rjmp	.+16     	; 0x9c2 <log_add_record+0x94>
     9b2:	ff 20       	and	r15, r15
     9b4:	31 f0       	breq	.+12     	; 0x9c2 <log_add_record+0x94>
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	01 96       	adiw	r24, 0x01	; 1
     9ba:	8f 70       	andi	r24, 0x0F	; 15
     9bc:	99 27       	eor	r25, r25
     9be:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <tail>
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	ff 90       	pop	r15
     9cc:	ef 90       	pop	r14
     9ce:	08 95       	ret

000009d0 <log_clear>:
     9d0:	ea e1       	ldi	r30, 0x1A	; 26
     9d2:	f2 e0       	ldi	r31, 0x02	; 2
     9d4:	aa e8       	ldi	r26, 0x8A	; 138
     9d6:	b2 e0       	ldi	r27, 0x02	; 2
     9d8:	8f ef       	ldi	r24, 0xFF	; 255
     9da:	4f ef       	ldi	r20, 0xFF	; 255
     9dc:	5f ef       	ldi	r21, 0xFF	; 255
     9de:	ba 01       	movw	r22, r20
     9e0:	91 e0       	ldi	r25, 0x01	; 1
     9e2:	80 83       	st	Z, r24
     9e4:	85 83       	std	Z+5, r24	; 0x05
     9e6:	41 83       	std	Z+1, r20	; 0x01
     9e8:	52 83       	std	Z+2, r21	; 0x02
     9ea:	63 83       	std	Z+3, r22	; 0x03
     9ec:	74 83       	std	Z+4, r23	; 0x04
     9ee:	9d 93       	st	X+, r25
     9f0:	37 96       	adiw	r30, 0x07	; 7
     9f2:	22 e0       	ldi	r18, 0x02	; 2
     9f4:	ea 38       	cpi	r30, 0x8A	; 138
     9f6:	f2 07       	cpc	r31, r18
     9f8:	a1 f7       	brne	.-24     	; 0x9e2 <log_clear+0x12>
     9fa:	8f e0       	ldi	r24, 0x0F	; 15
     9fc:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <last_written>
     a00:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <tail>
     a04:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <last_transaction_written>
     a08:	08 95       	ret

00000a0a <log_get_num_entries>:
     a0a:	0f 93       	push	r16
     a0c:	1f 93       	push	r17
     a0e:	cf 93       	push	r28
     a10:	df 93       	push	r29
     a12:	00 91 17 02 	lds	r16, 0x0217	; 0x800217 <tail>
     a16:	c0 2f       	mov	r28, r16
     a18:	10 e0       	ldi	r17, 0x00	; 0
     a1a:	d0 e0       	ldi	r29, 0x00	; 0
     a1c:	ce 01       	movw	r24, r28
     a1e:	0e 94 76 03 	call	0x6ec	; 0x6ec <log_is_data_valid>
     a22:	89 2b       	or	r24, r25
     a24:	29 f0       	breq	.+10     	; 0xa30 <log_get_num_entries+0x26>
     a26:	21 96       	adiw	r28, 0x01	; 1
     a28:	cf 70       	andi	r28, 0x0F	; 15
     a2a:	1f 5f       	subi	r17, 0xFF	; 255
     a2c:	0c 13       	cpse	r16, r28
     a2e:	f5 cf       	rjmp	.-22     	; 0xa1a <log_get_num_entries+0x10>
     a30:	81 2f       	mov	r24, r17
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	1f 91       	pop	r17
     a38:	0f 91       	pop	r16
     a3a:	08 95       	ret

00000a3c <log_get_record>:
     a3c:	af 92       	push	r10
     a3e:	bf 92       	push	r11
     a40:	cf 92       	push	r12
     a42:	df 92       	push	r13
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	6b 01       	movw	r12, r22
     a52:	7c 01       	movw	r14, r24
     a54:	8a 01       	movw	r16, r20
     a56:	59 01       	movw	r10, r18
     a58:	0e 94 05 05 	call	0xa0a	; 0xa0a <log_get_num_entries>
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	a0 e0       	ldi	r26, 0x00	; 0
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	c8 16       	cp	r12, r24
     a64:	d9 06       	cpc	r13, r25
     a66:	ea 06       	cpc	r14, r26
     a68:	fb 06       	cpc	r15, r27
     a6a:	f8 f4       	brcc	.+62     	; 0xaaa <log_get_record+0x6e>
     a6c:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <tail>
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	c8 0e       	add	r12, r24
     a74:	d9 1e       	adc	r13, r25
     a76:	8f e0       	ldi	r24, 0x0F	; 15
     a78:	c8 22       	and	r12, r24
     a7a:	dd 24       	eor	r13, r13
     a7c:	87 e0       	ldi	r24, 0x07	; 7
     a7e:	8c 9d       	mul	r24, r12
     a80:	f0 01       	movw	r30, r0
     a82:	8d 9d       	mul	r24, r13
     a84:	f0 0d       	add	r31, r0
     a86:	11 24       	eor	r1, r1
     a88:	e6 5e       	subi	r30, 0xE6	; 230
     a8a:	fd 4f       	sbci	r31, 0xFD	; 253
     a8c:	81 81       	ldd	r24, Z+1	; 0x01
     a8e:	92 81       	ldd	r25, Z+2	; 0x02
     a90:	a3 81       	ldd	r26, Z+3	; 0x03
     a92:	b4 81       	ldd	r27, Z+4	; 0x04
     a94:	e8 01       	movw	r28, r16
     a96:	88 83       	st	Y, r24
     a98:	99 83       	std	Y+1, r25	; 0x01
     a9a:	aa 83       	std	Y+2, r26	; 0x02
     a9c:	bb 83       	std	Y+3, r27	; 0x03
     a9e:	85 81       	ldd	r24, Z+5	; 0x05
     aa0:	f5 01       	movw	r30, r10
     aa2:	80 83       	st	Z, r24
     aa4:	81 e0       	ldi	r24, 0x01	; 1
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	02 c0       	rjmp	.+4      	; 0xaae <log_get_record+0x72>
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	1f 91       	pop	r17
     ab4:	0f 91       	pop	r16
     ab6:	ff 90       	pop	r15
     ab8:	ef 90       	pop	r14
     aba:	df 90       	pop	r13
     abc:	cf 90       	pop	r12
     abe:	bf 90       	pop	r11
     ac0:	af 90       	pop	r10
     ac2:	08 95       	ret

00000ac4 <rtc_init>:
     ac4:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <timer1_init>

00000ac8 <rtc_get_date>:
     ac8:	0f 93       	push	r16
     aca:	1f 93       	push	r17
     acc:	0e 94 f5 08 	call	0x11ea	; 0x11ea <timer1_get>
     ad0:	00 91 f5 02 	lds	r16, 0x02F5	; 0x8002f5 <rtc_base>
     ad4:	10 91 f6 02 	lds	r17, 0x02F6	; 0x8002f6 <rtc_base+0x1>
     ad8:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <rtc_base+0x2>
     adc:	30 91 f8 02 	lds	r19, 0x02F8	; 0x8002f8 <rtc_base+0x3>
     ae0:	60 0f       	add	r22, r16
     ae2:	71 1f       	adc	r23, r17
     ae4:	82 1f       	adc	r24, r18
     ae6:	93 1f       	adc	r25, r19
     ae8:	1f 91       	pop	r17
     aea:	0f 91       	pop	r16
     aec:	08 95       	ret

00000aee <is_leapyear>:
     aee:	9c 01       	movw	r18, r24
     af0:	60 e9       	ldi	r22, 0x90	; 144
     af2:	71 e0       	ldi	r23, 0x01	; 1
     af4:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
     af8:	89 2b       	or	r24, r25
     afa:	79 f0       	breq	.+30     	; 0xb1a <is_leapyear+0x2c>
     afc:	c9 01       	movw	r24, r18
     afe:	83 70       	andi	r24, 0x03	; 3
     b00:	99 27       	eor	r25, r25
     b02:	89 2b       	or	r24, r25
     b04:	61 f4       	brne	.+24     	; 0xb1e <is_leapyear+0x30>
     b06:	c9 01       	movw	r24, r18
     b08:	64 e6       	ldi	r22, 0x64	; 100
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
     b10:	9c 01       	movw	r18, r24
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	23 2b       	or	r18, r19
     b16:	21 f4       	brne	.+8      	; 0xb20 <is_leapyear+0x32>
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <is_leapyear+0x30>
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	08 95       	ret
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	08 95       	ret

00000b22 <rtc_set_by_datestr>:
     b22:	2f 92       	push	r2
     b24:	3f 92       	push	r3
     b26:	4f 92       	push	r4
     b28:	5f 92       	push	r5
     b2a:	6f 92       	push	r6
     b2c:	7f 92       	push	r7
     b2e:	8f 92       	push	r8
     b30:	9f 92       	push	r9
     b32:	af 92       	push	r10
     b34:	bf 92       	push	r11
     b36:	cf 92       	push	r12
     b38:	df 92       	push	r13
     b3a:	ef 92       	push	r14
     b3c:	ff 92       	push	r15
     b3e:	0f 93       	push	r16
     b40:	1f 93       	push	r17
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	cd b7       	in	r28, 0x3d	; 61
     b48:	de b7       	in	r29, 0x3e	; 62
     b4a:	67 97       	sbiw	r28, 0x17	; 23
     b4c:	0f b6       	in	r0, 0x3f	; 63
     b4e:	f8 94       	cli
     b50:	de bf       	out	0x3e, r29	; 62
     b52:	0f be       	out	0x3f, r0	; 63
     b54:	cd bf       	out	0x3d, r28	; 61
     b56:	2c e0       	ldi	r18, 0x0C	; 12
     b58:	e5 ea       	ldi	r30, 0xA5	; 165
     b5a:	f1 e0       	ldi	r31, 0x01	; 1
     b5c:	ae 01       	movw	r20, r28
     b5e:	4f 5f       	subi	r20, 0xFF	; 255
     b60:	5f 4f       	sbci	r21, 0xFF	; 255
     b62:	1a 01       	movw	r2, r20
     b64:	da 01       	movw	r26, r20
     b66:	01 90       	ld	r0, Z+
     b68:	0d 92       	st	X+, r0
     b6a:	2a 95       	dec	r18
     b6c:	e1 f7       	brne	.-8      	; 0xb66 <rtc_set_by_datestr+0x44>
     b6e:	dc 01       	movw	r26, r24
     b70:	2c 91       	ld	r18, X
     b72:	22 0f       	add	r18, r18
     b74:	20 56       	subi	r18, 0x60	; 96
     b76:	32 2f       	mov	r19, r18
     b78:	33 0f       	add	r19, r19
     b7a:	33 0f       	add	r19, r19
     b7c:	23 0f       	add	r18, r19
     b7e:	11 96       	adiw	r26, 0x01	; 1
     b80:	3c 91       	ld	r19, X
     b82:	11 97       	sbiw	r26, 0x01	; 1
     b84:	31 53       	subi	r19, 0x31	; 49
     b86:	23 0f       	add	r18, r19
     b88:	2d 87       	std	Y+13, r18	; 0x0d
     b8a:	13 96       	adiw	r26, 0x03	; 3
     b8c:	2c 91       	ld	r18, X
     b8e:	13 97       	sbiw	r26, 0x03	; 3
     b90:	02 2e       	mov	r0, r18
     b92:	00 0c       	add	r0, r0
     b94:	33 0b       	sbc	r19, r19
     b96:	20 53       	subi	r18, 0x30	; 48
     b98:	31 09       	sbc	r19, r1
     b9a:	6a e0       	ldi	r22, 0x0A	; 10
     b9c:	62 9f       	mul	r22, r18
     b9e:	a0 01       	movw	r20, r0
     ba0:	63 9f       	mul	r22, r19
     ba2:	50 0d       	add	r21, r0
     ba4:	11 24       	eor	r1, r1
     ba6:	14 96       	adiw	r26, 0x04	; 4
     ba8:	cc 90       	ld	r12, X
     baa:	0c 2c       	mov	r0, r12
     bac:	00 0c       	add	r0, r0
     bae:	dd 08       	sbc	r13, r13
     bb0:	b0 e3       	ldi	r27, 0x30	; 48
     bb2:	cb 1a       	sub	r12, r27
     bb4:	d1 08       	sbc	r13, r1
     bb6:	c4 0e       	add	r12, r20
     bb8:	d5 1e       	adc	r13, r21
     bba:	86 01       	movw	r16, r12
     bbc:	01 50       	subi	r16, 0x01	; 1
     bbe:	11 09       	sbc	r17, r1
     bc0:	fc 01       	movw	r30, r24
     bc2:	26 81       	ldd	r18, Z+6	; 0x06
     bc4:	02 2e       	mov	r0, r18
     bc6:	00 0c       	add	r0, r0
     bc8:	33 0b       	sbc	r19, r19
     bca:	20 53       	subi	r18, 0x30	; 48
     bcc:	31 09       	sbc	r19, r1
     bce:	e8 ee       	ldi	r30, 0xE8	; 232
     bd0:	f3 e0       	ldi	r31, 0x03	; 3
     bd2:	2e 9f       	mul	r18, r30
     bd4:	a0 01       	movw	r20, r0
     bd6:	2f 9f       	mul	r18, r31
     bd8:	50 0d       	add	r21, r0
     bda:	3e 9f       	mul	r19, r30
     bdc:	50 0d       	add	r21, r0
     bde:	11 24       	eor	r1, r1
     be0:	dc 01       	movw	r26, r24
     be2:	17 96       	adiw	r26, 0x07	; 7
     be4:	2c 91       	ld	r18, X
     be6:	17 97       	sbiw	r26, 0x07	; 7
     be8:	02 2e       	mov	r0, r18
     bea:	00 0c       	add	r0, r0
     bec:	33 0b       	sbc	r19, r19
     bee:	20 53       	subi	r18, 0x30	; 48
     bf0:	31 09       	sbc	r19, r1
     bf2:	74 e6       	ldi	r23, 0x64	; 100
     bf4:	72 9f       	mul	r23, r18
     bf6:	70 01       	movw	r14, r0
     bf8:	73 9f       	mul	r23, r19
     bfa:	f0 0c       	add	r15, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	e4 0e       	add	r14, r20
     c00:	f5 1e       	adc	r15, r21
     c02:	18 96       	adiw	r26, 0x08	; 8
     c04:	4c 91       	ld	r20, X
     c06:	18 97       	sbiw	r26, 0x08	; 8
     c08:	04 2e       	mov	r0, r20
     c0a:	00 0c       	add	r0, r0
     c0c:	55 0b       	sbc	r21, r21
     c0e:	40 53       	subi	r20, 0x30	; 48
     c10:	51 09       	sbc	r21, r1
     c12:	64 9f       	mul	r22, r20
     c14:	90 01       	movw	r18, r0
     c16:	65 9f       	mul	r22, r21
     c18:	30 0d       	add	r19, r0
     c1a:	11 24       	eor	r1, r1
     c1c:	e2 0e       	add	r14, r18
     c1e:	f3 1e       	adc	r15, r19
     c20:	19 96       	adiw	r26, 0x09	; 9
     c22:	2c 91       	ld	r18, X
     c24:	19 97       	sbiw	r26, 0x09	; 9
     c26:	f7 01       	movw	r30, r14
     c28:	e2 0f       	add	r30, r18
     c2a:	f1 1d       	adc	r31, r1
     c2c:	27 fd       	sbrc	r18, 7
     c2e:	fa 95       	dec	r31
     c30:	af 01       	movw	r20, r30
     c32:	58 50       	subi	r21, 0x08	; 8
     c34:	7a 01       	movw	r14, r20
     c36:	1b 96       	adiw	r26, 0x0b	; 11
     c38:	2c 91       	ld	r18, X
     c3a:	1b 97       	sbiw	r26, 0x0b	; 11
     c3c:	22 0f       	add	r18, r18
     c3e:	20 56       	subi	r18, 0x60	; 96
     c40:	32 2f       	mov	r19, r18
     c42:	33 0f       	add	r19, r19
     c44:	33 0f       	add	r19, r19
     c46:	23 0f       	add	r18, r19
     c48:	1c 96       	adiw	r26, 0x0c	; 12
     c4a:	3c 91       	ld	r19, X
     c4c:	1c 97       	sbiw	r26, 0x0c	; 12
     c4e:	30 53       	subi	r19, 0x30	; 48
     c50:	23 0f       	add	r18, r19
     c52:	29 8b       	std	Y+17, r18	; 0x11
     c54:	1e 96       	adiw	r26, 0x0e	; 14
     c56:	2c 91       	ld	r18, X
     c58:	1e 97       	sbiw	r26, 0x0e	; 14
     c5a:	22 0f       	add	r18, r18
     c5c:	20 56       	subi	r18, 0x60	; 96
     c5e:	32 2f       	mov	r19, r18
     c60:	33 0f       	add	r19, r19
     c62:	33 0f       	add	r19, r19
     c64:	23 0f       	add	r18, r19
     c66:	1f 96       	adiw	r26, 0x0f	; 15
     c68:	3c 91       	ld	r19, X
     c6a:	1f 97       	sbiw	r26, 0x0f	; 15
     c6c:	30 53       	subi	r19, 0x30	; 48
     c6e:	23 0f       	add	r18, r19
     c70:	2a 8b       	std	Y+18, r18	; 0x12
     c72:	51 96       	adiw	r26, 0x11	; 17
     c74:	2c 91       	ld	r18, X
     c76:	51 97       	sbiw	r26, 0x11	; 17
     c78:	22 0f       	add	r18, r18
     c7a:	20 56       	subi	r18, 0x60	; 96
     c7c:	32 2f       	mov	r19, r18
     c7e:	33 0f       	add	r19, r19
     c80:	33 0f       	add	r19, r19
     c82:	23 0f       	add	r18, r19
     c84:	52 96       	adiw	r26, 0x12	; 18
     c86:	8c 91       	ld	r24, X
     c88:	80 53       	subi	r24, 0x30	; 48
     c8a:	28 0f       	add	r18, r24
     c8c:	2b 8b       	std	Y+19, r18	; 0x13
     c8e:	ca 01       	movw	r24, r20
     c90:	0e 94 77 05 	call	0xaee	; 0xaee <is_leapyear>
     c94:	88 23       	and	r24, r24
     c96:	21 f0       	breq	.+8      	; 0xca0 <rtc_set_by_datestr+0x17e>
     c98:	5d 85       	ldd	r21, Y+13	; 0x0d
     c9a:	52 30       	cpi	r21, 0x02	; 2
     c9c:	08 f0       	brcs	.+2      	; 0xca0 <rtc_set_by_datestr+0x17e>
     c9e:	86 01       	movw	r16, r12
     ca0:	c7 01       	movw	r24, r14
     ca2:	60 e9       	ldi	r22, 0x90	; 144
     ca4:	71 e0       	ldi	r23, 0x01	; 1
     ca6:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
     caa:	fc 01       	movw	r30, r24
     cac:	db 01       	movw	r26, r22
     cae:	20 e8       	ldi	r18, 0x80	; 128
     cb0:	39 e5       	ldi	r19, 0x59	; 89
     cb2:	40 e6       	ldi	r20, 0x60	; 96
     cb4:	50 ef       	ldi	r21, 0xF0	; 240
     cb6:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
     cba:	2b 01       	movw	r4, r22
     cbc:	3c 01       	movw	r6, r24
     cbe:	cf 01       	movw	r24, r30
     cc0:	64 e6       	ldi	r22, 0x64	; 100
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
     cc8:	fc 01       	movw	r30, r24
     cca:	db 01       	movw	r26, r22
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	32 ec       	ldi	r19, 0xC2	; 194
     cd0:	47 e1       	ldi	r20, 0x17	; 23
     cd2:	5c eb       	ldi	r21, 0xBC	; 188
     cd4:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
     cd8:	4b 01       	movw	r8, r22
     cda:	5c 01       	movw	r10, r24
     cdc:	df 01       	movw	r26, r30
     cde:	b6 95       	lsr	r27
     ce0:	a7 95       	ror	r26
     ce2:	b6 95       	lsr	r27
     ce4:	a7 95       	ror	r26
     ce6:	20 e8       	ldi	r18, 0x80	; 128
     ce8:	3f e1       	ldi	r19, 0x1F	; 31
     cea:	46 e8       	ldi	r20, 0x86	; 134
     cec:	57 e0       	ldi	r21, 0x07	; 7
     cee:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
     cf2:	6b 01       	movw	r12, r22
     cf4:	7c 01       	movw	r14, r24
     cf6:	df 01       	movw	r26, r30
     cf8:	a3 70       	andi	r26, 0x03	; 3
     cfa:	bb 27       	eor	r27, r27
     cfc:	20 e8       	ldi	r18, 0x80	; 128
     cfe:	33 e3       	ldi	r19, 0x33	; 51
     d00:	41 ee       	ldi	r20, 0xE1	; 225
     d02:	51 e0       	ldi	r21, 0x01	; 1
     d04:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
     d08:	6c 8b       	std	Y+20, r22	; 0x14
     d0a:	7d 8b       	std	Y+21, r23	; 0x15
     d0c:	8e 8b       	std	Y+22, r24	; 0x16
     d0e:	9f 8b       	std	Y+23, r25	; 0x17
     d10:	f1 01       	movw	r30, r2
     d12:	8e 2f       	mov	r24, r30
     d14:	82 19       	sub	r24, r2
     d16:	9d 85       	ldd	r25, Y+13	; 0x0d
     d18:	89 17       	cp	r24, r25
     d1a:	20 f4       	brcc	.+8      	; 0xd24 <rtc_set_by_datestr+0x202>
     d1c:	81 91       	ld	r24, Z+
     d1e:	08 0f       	add	r16, r24
     d20:	11 1d       	adc	r17, r1
     d22:	f7 cf       	rjmp	.-18     	; 0xd12 <rtc_set_by_datestr+0x1f0>
     d24:	a9 89       	ldd	r26, Y+17	; 0x11
     d26:	2a 2f       	mov	r18, r26
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	a0 e1       	ldi	r26, 0x10	; 16
     d2c:	be e0       	ldi	r27, 0x0E	; 14
     d2e:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__umulhisi3>
     d32:	6d 87       	std	Y+13, r22	; 0x0d
     d34:	7e 87       	std	Y+14, r23	; 0x0e
     d36:	8f 87       	std	Y+15, r24	; 0x0f
     d38:	98 8b       	std	Y+16, r25	; 0x10
     d3a:	ba 89       	ldd	r27, Y+18	; 0x12
     d3c:	2b 2f       	mov	r18, r27
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	ac e3       	ldi	r26, 0x3C	; 60
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__umulhisi3>
     d48:	2d 85       	ldd	r18, Y+13	; 0x0d
     d4a:	3e 85       	ldd	r19, Y+14	; 0x0e
     d4c:	4f 85       	ldd	r20, Y+15	; 0x0f
     d4e:	58 89       	ldd	r21, Y+16	; 0x10
     d50:	26 0f       	add	r18, r22
     d52:	37 1f       	adc	r19, r23
     d54:	48 1f       	adc	r20, r24
     d56:	59 1f       	adc	r21, r25
     d58:	da 01       	movw	r26, r20
     d5a:	c9 01       	movw	r24, r18
     d5c:	3b 89       	ldd	r19, Y+19	; 0x13
     d5e:	83 0f       	add	r24, r19
     d60:	91 1d       	adc	r25, r1
     d62:	a1 1d       	adc	r26, r1
     d64:	b1 1d       	adc	r27, r1
     d66:	48 0e       	add	r4, r24
     d68:	59 1e       	adc	r5, r25
     d6a:	6a 1e       	adc	r6, r26
     d6c:	7b 1e       	adc	r7, r27
     d6e:	84 0c       	add	r8, r4
     d70:	95 1c       	adc	r9, r5
     d72:	a6 1c       	adc	r10, r6
     d74:	b7 1c       	adc	r11, r7
     d76:	c8 0c       	add	r12, r8
     d78:	d9 1c       	adc	r13, r9
     d7a:	ea 1c       	adc	r14, r10
     d7c:	fb 1c       	adc	r15, r11
     d7e:	8c 89       	ldd	r24, Y+20	; 0x14
     d80:	9d 89       	ldd	r25, Y+21	; 0x15
     d82:	ae 89       	ldd	r26, Y+22	; 0x16
     d84:	bf 89       	ldd	r27, Y+23	; 0x17
     d86:	c8 0e       	add	r12, r24
     d88:	d9 1e       	adc	r13, r25
     d8a:	ea 1e       	adc	r14, r26
     d8c:	fb 1e       	adc	r15, r27
     d8e:	d8 01       	movw	r26, r16
     d90:	20 e8       	ldi	r18, 0x80	; 128
     d92:	31 e5       	ldi	r19, 0x51	; 81
     d94:	41 e0       	ldi	r20, 0x01	; 1
     d96:	50 e0       	ldi	r21, 0x00	; 0
     d98:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
     d9c:	dc 01       	movw	r26, r24
     d9e:	cb 01       	movw	r24, r22
     da0:	8c 0d       	add	r24, r12
     da2:	9d 1d       	adc	r25, r13
     da4:	ae 1d       	adc	r26, r14
     da6:	bf 1d       	adc	r27, r15
     da8:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <rtc_base>
     dac:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <rtc_base+0x1>
     db0:	a0 93 f7 02 	sts	0x02F7, r26	; 0x8002f7 <rtc_base+0x2>
     db4:	b0 93 f8 02 	sts	0x02F8, r27	; 0x8002f8 <rtc_base+0x3>
     db8:	67 96       	adiw	r28, 0x17	; 23
     dba:	0f b6       	in	r0, 0x3f	; 63
     dbc:	f8 94       	cli
     dbe:	de bf       	out	0x3e, r29	; 62
     dc0:	0f be       	out	0x3f, r0	; 63
     dc2:	cd bf       	out	0x3d, r28	; 61
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	1f 91       	pop	r17
     dca:	0f 91       	pop	r16
     dcc:	ff 90       	pop	r15
     dce:	ef 90       	pop	r14
     dd0:	df 90       	pop	r13
     dd2:	cf 90       	pop	r12
     dd4:	bf 90       	pop	r11
     dd6:	af 90       	pop	r10
     dd8:	9f 90       	pop	r9
     dda:	8f 90       	pop	r8
     ddc:	7f 90       	pop	r7
     dde:	6f 90       	pop	r6
     de0:	5f 90       	pop	r5
     de2:	4f 90       	pop	r4
     de4:	3f 90       	pop	r3
     de6:	2f 90       	pop	r2
     de8:	0c 94 01 09 	jmp	0x1202	; 0x1202 <timer1_clear>

00000dec <get_month>:
     dec:	ef 92       	push	r14
     dee:	ff 92       	push	r15
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	cd b7       	in	r28, 0x3d	; 61
     dfa:	de b7       	in	r29, 0x3e	; 62
     dfc:	68 97       	sbiw	r28, 0x18	; 24
     dfe:	0f b6       	in	r0, 0x3f	; 63
     e00:	f8 94       	cli
     e02:	de bf       	out	0x3e, r29	; 62
     e04:	0f be       	out	0x3f, r0	; 63
     e06:	cd bf       	out	0x3d, r28	; 61
     e08:	7b 01       	movw	r14, r22
     e0a:	2c e0       	ldi	r18, 0x0C	; 12
     e0c:	e5 ea       	ldi	r30, 0xA5	; 165
     e0e:	f1 e0       	ldi	r31, 0x01	; 1
     e10:	de 01       	movw	r26, r28
     e12:	1d 96       	adiw	r26, 0x0d	; 13
     e14:	01 90       	ld	r0, Z+
     e16:	0d 92       	st	X+, r0
     e18:	2a 95       	dec	r18
     e1a:	e1 f7       	brne	.-8      	; 0xe14 <get_month+0x28>
     e1c:	8e 01       	movw	r16, r28
     e1e:	0f 5f       	subi	r16, 0xFF	; 255
     e20:	1f 4f       	sbci	r17, 0xFF	; 255
     e22:	2c e0       	ldi	r18, 0x0C	; 12
     e24:	f8 01       	movw	r30, r16
     e26:	11 92       	st	Z+, r1
     e28:	2a 95       	dec	r18
     e2a:	e9 f7       	brne	.-6      	; 0xe26 <get_month+0x3a>
     e2c:	0e 94 77 05 	call	0xaee	; 0xaee <is_leapyear>
     e30:	8a 83       	std	Y+2, r24	; 0x02
     e32:	de 01       	movw	r26, r28
     e34:	1d 96       	adiw	r26, 0x0d	; 13
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	f7 01       	movw	r30, r14
     e3a:	40 81       	ld	r20, Z
     e3c:	51 81       	ldd	r21, Z+1	; 0x01
     e3e:	9d 91       	ld	r25, X+
     e40:	f8 01       	movw	r30, r16
     e42:	21 91       	ld	r18, Z+
     e44:	8f 01       	movw	r16, r30
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	29 0f       	add	r18, r25
     e4a:	31 1d       	adc	r19, r1
     e4c:	42 17       	cp	r20, r18
     e4e:	53 07       	cpc	r21, r19
     e50:	40 f0       	brcs	.+16     	; 0xe62 <get_month+0x76>
     e52:	42 1b       	sub	r20, r18
     e54:	53 0b       	sbc	r21, r19
     e56:	f7 01       	movw	r30, r14
     e58:	51 83       	std	Z+1, r21	; 0x01
     e5a:	40 83       	st	Z, r20
     e5c:	8f 5f       	subi	r24, 0xFF	; 255
     e5e:	8c 30       	cpi	r24, 0x0C	; 12
     e60:	59 f7       	brne	.-42     	; 0xe38 <get_month+0x4c>
     e62:	68 96       	adiw	r28, 0x18	; 24
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	ff 90       	pop	r15
     e78:	ef 90       	pop	r14
     e7a:	08 95       	ret

00000e7c <rtc_num2datestr>:
     e7c:	4f 92       	push	r4
     e7e:	5f 92       	push	r5
     e80:	6f 92       	push	r6
     e82:	7f 92       	push	r7
     e84:	8f 92       	push	r8
     e86:	9f 92       	push	r9
     e88:	af 92       	push	r10
     e8a:	bf 92       	push	r11
     e8c:	cf 92       	push	r12
     e8e:	df 92       	push	r13
     e90:	ef 92       	push	r14
     e92:	ff 92       	push	r15
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
     e98:	00 d0       	rcall	.+0      	; 0xe9a <rtc_num2datestr+0x1e>
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
     e9e:	2b 01       	movw	r4, r22
     ea0:	3c 01       	movw	r6, r24
     ea2:	81 e0       	ldi	r24, 0x01	; 1
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	a0 e0       	ldi	r26, 0x00	; 0
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	20 e8       	ldi	r18, 0x80	; 128
     eac:	42 16       	cp	r4, r18
     eae:	29 e5       	ldi	r18, 0x59	; 89
     eb0:	52 06       	cpc	r5, r18
     eb2:	20 e6       	ldi	r18, 0x60	; 96
     eb4:	62 06       	cpc	r6, r18
     eb6:	20 ef       	ldi	r18, 0xF0	; 240
     eb8:	72 06       	cpc	r7, r18
     eba:	18 f4       	brcc	.+6      	; 0xec2 <rtc_num2datestr+0x46>
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	dc 01       	movw	r26, r24
     ec2:	20 e9       	ldi	r18, 0x90	; 144
     ec4:	31 e0       	ldi	r19, 0x01	; 1
     ec6:	82 9f       	mul	r24, r18
     ec8:	50 01       	movw	r10, r0
     eca:	83 9f       	mul	r24, r19
     ecc:	b0 0c       	add	r11, r0
     ece:	92 9f       	mul	r25, r18
     ed0:	b0 0c       	add	r11, r0
     ed2:	11 24       	eor	r1, r1
     ed4:	80 e3       	ldi	r24, 0x30	; 48
     ed6:	a8 1a       	sub	r10, r24
     ed8:	88 ef       	ldi	r24, 0xF8	; 248
     eda:	b8 0a       	sbc	r11, r24
     edc:	c1 2c       	mov	r12, r1
     ede:	d1 2c       	mov	r13, r1
     ee0:	76 01       	movw	r14, r12
     ee2:	c3 94       	inc	r12
     ee4:	20 e8       	ldi	r18, 0x80	; 128
     ee6:	42 16       	cp	r4, r18
     ee8:	29 e5       	ldi	r18, 0x59	; 89
     eea:	52 06       	cpc	r5, r18
     eec:	20 e6       	ldi	r18, 0x60	; 96
     eee:	62 06       	cpc	r6, r18
     ef0:	20 ef       	ldi	r18, 0xF0	; 240
     ef2:	72 06       	cpc	r7, r18
     ef4:	18 f4       	brcc	.+6      	; 0xefc <rtc_num2datestr+0x80>
     ef6:	c1 2c       	mov	r12, r1
     ef8:	d1 2c       	mov	r13, r1
     efa:	76 01       	movw	r14, r12
     efc:	a7 01       	movw	r20, r14
     efe:	96 01       	movw	r18, r12
     f00:	60 e8       	ldi	r22, 0x80	; 128
     f02:	79 e5       	ldi	r23, 0x59	; 89
     f04:	80 e6       	ldi	r24, 0x60	; 96
     f06:	90 ef       	ldi	r25, 0xF0	; 240
     f08:	0e 94 29 0c 	call	0x1852	; 0x1852 <__mulsi3>
     f0c:	73 01       	movw	r14, r6
     f0e:	62 01       	movw	r12, r4
     f10:	c6 1a       	sub	r12, r22
     f12:	d7 0a       	sbc	r13, r23
     f14:	e8 0a       	sbc	r14, r24
     f16:	f9 0a       	sbc	r15, r25
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	a0 e0       	ldi	r26, 0x00	; 0
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	c1 14       	cp	r12, r1
     f22:	22 ec       	ldi	r18, 0xC2	; 194
     f24:	d2 06       	cpc	r13, r18
     f26:	27 e1       	ldi	r18, 0x17	; 23
     f28:	e2 06       	cpc	r14, r18
     f2a:	2c eb       	ldi	r18, 0xBC	; 188
     f2c:	f2 06       	cpc	r15, r18
     f2e:	18 f4       	brcc	.+6      	; 0xf36 <rtc_num2datestr+0xba>
     f30:	80 e0       	ldi	r24, 0x00	; 0
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	dc 01       	movw	r26, r24
     f36:	44 e6       	ldi	r20, 0x64	; 100
     f38:	48 9f       	mul	r20, r24
     f3a:	90 01       	movw	r18, r0
     f3c:	49 9f       	mul	r20, r25
     f3e:	30 0d       	add	r19, r0
     f40:	11 24       	eor	r1, r1
     f42:	a2 0e       	add	r10, r18
     f44:	b3 1e       	adc	r11, r19
     f46:	21 e0       	ldi	r18, 0x01	; 1
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	40 e0       	ldi	r20, 0x00	; 0
     f4c:	50 e0       	ldi	r21, 0x00	; 0
     f4e:	c1 14       	cp	r12, r1
     f50:	82 ec       	ldi	r24, 0xC2	; 194
     f52:	d8 06       	cpc	r13, r24
     f54:	87 e1       	ldi	r24, 0x17	; 23
     f56:	e8 06       	cpc	r14, r24
     f58:	8c eb       	ldi	r24, 0xBC	; 188
     f5a:	f8 06       	cpc	r15, r24
     f5c:	18 f4       	brcc	.+6      	; 0xf64 <rtc_num2datestr+0xe8>
     f5e:	20 e0       	ldi	r18, 0x00	; 0
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	a9 01       	movw	r20, r18
     f64:	60 e0       	ldi	r22, 0x00	; 0
     f66:	72 ec       	ldi	r23, 0xC2	; 194
     f68:	87 e1       	ldi	r24, 0x17	; 23
     f6a:	9c eb       	ldi	r25, 0xBC	; 188
     f6c:	0e 94 29 0c 	call	0x1852	; 0x1852 <__mulsi3>
     f70:	a7 01       	movw	r20, r14
     f72:	96 01       	movw	r18, r12
     f74:	26 1b       	sub	r18, r22
     f76:	37 0b       	sbc	r19, r23
     f78:	48 0b       	sbc	r20, r24
     f7a:	59 0b       	sbc	r21, r25
     f7c:	ca 01       	movw	r24, r20
     f7e:	b9 01       	movw	r22, r18
     f80:	20 e8       	ldi	r18, 0x80	; 128
     f82:	3f e1       	ldi	r19, 0x1F	; 31
     f84:	46 e8       	ldi	r20, 0x86	; 134
     f86:	57 e0       	ldi	r21, 0x07	; 7
     f88:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
     f8c:	22 0f       	add	r18, r18
     f8e:	33 1f       	adc	r19, r19
     f90:	22 0f       	add	r18, r18
     f92:	33 1f       	adc	r19, r19
     f94:	a2 0e       	add	r10, r18
     f96:	b3 1e       	adc	r11, r19
     f98:	20 e8       	ldi	r18, 0x80	; 128
     f9a:	33 e3       	ldi	r19, 0x33	; 51
     f9c:	41 ee       	ldi	r20, 0xE1	; 225
     f9e:	51 e0       	ldi	r21, 0x01	; 1
     fa0:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
     fa4:	75 01       	movw	r14, r10
     fa6:	e2 0e       	add	r14, r18
     fa8:	f3 1e       	adc	r15, r19
     faa:	20 e8       	ldi	r18, 0x80	; 128
     fac:	31 e5       	ldi	r19, 0x51	; 81
     fae:	41 e0       	ldi	r20, 0x01	; 1
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
     fb6:	4b 01       	movw	r8, r22
     fb8:	5c 01       	movw	r10, r24
     fba:	3a 83       	std	Y+2, r19	; 0x02
     fbc:	29 83       	std	Y+1, r18	; 0x01
     fbe:	be 01       	movw	r22, r28
     fc0:	6f 5f       	subi	r22, 0xFF	; 255
     fc2:	7f 4f       	sbci	r23, 0xFF	; 255
     fc4:	c7 01       	movw	r24, r14
     fc6:	0e 94 f6 06 	call	0xdec	; 0xdec <get_month>
     fca:	d8 2e       	mov	r13, r24
     fcc:	c5 01       	movw	r24, r10
     fce:	b4 01       	movw	r22, r8
     fd0:	20 e1       	ldi	r18, 0x10	; 16
     fd2:	3e e0       	ldi	r19, 0x0E	; 14
     fd4:	40 e0       	ldi	r20, 0x00	; 0
     fd6:	50 e0       	ldi	r21, 0x00	; 0
     fd8:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
     fdc:	29 01       	movw	r4, r18
     fde:	3a 01       	movw	r6, r20
     fe0:	4b 01       	movw	r8, r22
     fe2:	5c 01       	movw	r10, r24
     fe4:	61 eb       	ldi	r22, 0xB1	; 177
     fe6:	71 e0       	ldi	r23, 0x01	; 1
     fe8:	89 e4       	ldi	r24, 0x49	; 73
     fea:	91 e0       	ldi	r25, 0x01	; 1
     fec:	0e 94 55 08 	call	0x10aa	; 0x10aa <str_cpy>
     ff0:	6d 2d       	mov	r22, r13
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	6f 5f       	subi	r22, 0xFF	; 255
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	42 e0       	ldi	r20, 0x02	; 2
     ffa:	89 e4       	ldi	r24, 0x49	; 73
     ffc:	91 e0       	ldi	r25, 0x01	; 1
     ffe:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    1002:	69 81       	ldd	r22, Y+1	; 0x01
    1004:	7a 81       	ldd	r23, Y+2	; 0x02
    1006:	6f 5f       	subi	r22, 0xFF	; 255
    1008:	7f 4f       	sbci	r23, 0xFF	; 255
    100a:	42 e0       	ldi	r20, 0x02	; 2
    100c:	8c e4       	ldi	r24, 0x4C	; 76
    100e:	91 e0       	ldi	r25, 0x01	; 1
    1010:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    1014:	44 e0       	ldi	r20, 0x04	; 4
    1016:	b7 01       	movw	r22, r14
    1018:	8f e4       	ldi	r24, 0x4F	; 79
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    1020:	42 e0       	ldi	r20, 0x02	; 2
    1022:	b2 01       	movw	r22, r4
    1024:	84 e5       	ldi	r24, 0x54	; 84
    1026:	91 e0       	ldi	r25, 0x01	; 1
    1028:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    102c:	c5 01       	movw	r24, r10
    102e:	b4 01       	movw	r22, r8
    1030:	2c e3       	ldi	r18, 0x3C	; 60
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	40 e0       	ldi	r20, 0x00	; 0
    1036:	50 e0       	ldi	r21, 0x00	; 0
    1038:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
    103c:	49 01       	movw	r8, r18
    103e:	5a 01       	movw	r10, r20
    1040:	6b 01       	movw	r12, r22
    1042:	7c 01       	movw	r14, r24
    1044:	42 e0       	ldi	r20, 0x02	; 2
    1046:	b4 01       	movw	r22, r8
    1048:	87 e5       	ldi	r24, 0x57	; 87
    104a:	91 e0       	ldi	r25, 0x01	; 1
    104c:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    1050:	42 e0       	ldi	r20, 0x02	; 2
    1052:	b6 01       	movw	r22, r12
    1054:	8a e5       	ldi	r24, 0x5A	; 90
    1056:	91 e0       	ldi	r25, 0x01	; 1
    1058:	0e 94 5f 08 	call	0x10be	; 0x10be <str_writeudec16>
    105c:	89 e4       	ldi	r24, 0x49	; 73
    105e:	91 e0       	ldi	r25, 0x01	; 1
    1060:	0f 90       	pop	r0
    1062:	0f 90       	pop	r0
    1064:	df 91       	pop	r29
    1066:	cf 91       	pop	r28
    1068:	ff 90       	pop	r15
    106a:	ef 90       	pop	r14
    106c:	df 90       	pop	r13
    106e:	cf 90       	pop	r12
    1070:	bf 90       	pop	r11
    1072:	af 90       	pop	r10
    1074:	9f 90       	pop	r9
    1076:	8f 90       	pop	r8
    1078:	7f 90       	pop	r7
    107a:	6f 90       	pop	r6
    107c:	5f 90       	pop	r5
    107e:	4f 90       	pop	r4
    1080:	08 95       	ret

00001082 <rtc_get_date_string>:
    1082:	0f 93       	push	r16
    1084:	1f 93       	push	r17
    1086:	0e 94 f5 08 	call	0x11ea	; 0x11ea <timer1_get>
    108a:	00 91 f5 02 	lds	r16, 0x02F5	; 0x8002f5 <rtc_base>
    108e:	10 91 f6 02 	lds	r17, 0x02F6	; 0x8002f6 <rtc_base+0x1>
    1092:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <rtc_base+0x2>
    1096:	30 91 f8 02 	lds	r19, 0x02F8	; 0x8002f8 <rtc_base+0x3>
    109a:	60 0f       	add	r22, r16
    109c:	71 1f       	adc	r23, r17
    109e:	82 1f       	adc	r24, r18
    10a0:	93 1f       	adc	r25, r19
    10a2:	1f 91       	pop	r17
    10a4:	0f 91       	pop	r16
    10a6:	0c 94 3e 07 	jmp	0xe7c	; 0xe7c <rtc_num2datestr>

000010aa <str_cpy>:
    10aa:	fc 01       	movw	r30, r24
    10ac:	db 01       	movw	r26, r22
    10ae:	8d 91       	ld	r24, X+
    10b0:	bd 01       	movw	r22, r26
    10b2:	88 23       	and	r24, r24
    10b4:	11 f0       	breq	.+4      	; 0x10ba <str_cpy+0x10>
    10b6:	81 93       	st	Z+, r24
    10b8:	f9 cf       	rjmp	.-14     	; 0x10ac <str_cpy+0x2>
    10ba:	10 82       	st	Z, r1
    10bc:	08 95       	ret

000010be <str_writeudec16>:
    10be:	9f 92       	push	r9
    10c0:	af 92       	push	r10
    10c2:	bf 92       	push	r11
    10c4:	cf 92       	push	r12
    10c6:	df 92       	push	r13
    10c8:	ef 92       	push	r14
    10ca:	ff 92       	push	r15
    10cc:	0f 93       	push	r16
    10ce:	1f 93       	push	r17
    10d0:	cf 93       	push	r28
    10d2:	df 93       	push	r29
    10d4:	00 d0       	rcall	.+0      	; 0x10d6 <str_writeudec16+0x18>
    10d6:	00 d0       	rcall	.+0      	; 0x10d8 <str_writeudec16+0x1a>
    10d8:	1f 92       	push	r1
    10da:	cd b7       	in	r28, 0x3d	; 61
    10dc:	de b7       	in	r29, 0x3e	; 62
    10de:	fc 01       	movw	r30, r24
    10e0:	6b 01       	movw	r12, r22
    10e2:	9e 01       	movw	r18, r28
    10e4:	2f 5f       	subi	r18, 0xFF	; 255
    10e6:	3f 4f       	sbci	r19, 0xFF	; 255
    10e8:	8e 01       	movw	r16, r28
    10ea:	0a 5f       	subi	r16, 0xFA	; 250
    10ec:	1f 4f       	sbci	r17, 0xFF	; 255
    10ee:	ee 24       	eor	r14, r14
    10f0:	e3 94       	inc	r14
    10f2:	f1 2c       	mov	r15, r1
    10f4:	9a e0       	ldi	r25, 0x0A	; 10
    10f6:	99 2e       	mov	r9, r25
    10f8:	9e 9c       	mul	r9, r14
    10fa:	50 01       	movw	r10, r0
    10fc:	9f 9c       	mul	r9, r15
    10fe:	b0 0c       	add	r11, r0
    1100:	11 24       	eor	r1, r1
    1102:	c6 01       	movw	r24, r12
    1104:	b5 01       	movw	r22, r10
    1106:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
    110a:	b7 01       	movw	r22, r14
    110c:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
    1110:	d9 01       	movw	r26, r18
    1112:	6d 93       	st	X+, r22
    1114:	9d 01       	movw	r18, r26
    1116:	c6 1a       	sub	r12, r22
    1118:	d1 08       	sbc	r13, r1
    111a:	67 fd       	sbrc	r22, 7
    111c:	d3 94       	inc	r13
    111e:	75 01       	movw	r14, r10
    1120:	a0 17       	cp	r26, r16
    1122:	b1 07       	cpc	r27, r17
    1124:	49 f7       	brne	.-46     	; 0x10f8 <str_writeudec16+0x3a>
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	84 e0       	ldi	r24, 0x04	; 4
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	50 e0       	ldi	r21, 0x00	; 0
    1130:	d8 01       	movw	r26, r16
    1132:	2e 91       	ld	r18, -X
    1134:	8d 01       	movw	r16, r26
    1136:	21 11       	cpse	r18, r1
    1138:	05 c0       	rjmp	.+10     	; 0x1144 <str_writeudec16+0x86>
    113a:	61 15       	cp	r22, r1
    113c:	71 05       	cpc	r23, r1
    113e:	11 f4       	brne	.+4      	; 0x1144 <str_writeudec16+0x86>
    1140:	00 97       	sbiw	r24, 0x00	; 0
    1142:	41 f4       	brne	.+16     	; 0x1154 <str_writeudec16+0x96>
    1144:	84 17       	cp	r24, r20
    1146:	95 07       	cpc	r25, r21
    1148:	2c f4       	brge	.+10     	; 0x1154 <str_writeudec16+0x96>
    114a:	20 5d       	subi	r18, 0xD0	; 208
    114c:	21 93       	st	Z+, r18
    114e:	61 e0       	ldi	r22, 0x01	; 1
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	04 c0       	rjmp	.+8      	; 0x115c <str_writeudec16+0x9e>
    1154:	84 17       	cp	r24, r20
    1156:	95 07       	cpc	r25, r21
    1158:	0c f4       	brge	.+2      	; 0x115c <str_writeudec16+0x9e>
    115a:	31 96       	adiw	r30, 0x01	; 1
    115c:	01 97       	sbiw	r24, 0x01	; 1
    115e:	40 f7       	brcc	.-48     	; 0x1130 <str_writeudec16+0x72>
    1160:	0f 90       	pop	r0
    1162:	0f 90       	pop	r0
    1164:	0f 90       	pop	r0
    1166:	0f 90       	pop	r0
    1168:	0f 90       	pop	r0
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	1f 91       	pop	r17
    1170:	0f 91       	pop	r16
    1172:	ff 90       	pop	r15
    1174:	ef 90       	pop	r14
    1176:	df 90       	pop	r13
    1178:	cf 90       	pop	r12
    117a:	bf 90       	pop	r11
    117c:	af 90       	pop	r10
    117e:	9f 90       	pop	r9
    1180:	08 95       	ret

00001182 <__vector_11>:
    1182:	1f 92       	push	r1
    1184:	0f 92       	push	r0
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	0f 92       	push	r0
    118a:	11 24       	eor	r1, r1
    118c:	8f 93       	push	r24
    118e:	9f 93       	push	r25
    1190:	af 93       	push	r26
    1192:	bf 93       	push	r27
    1194:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <timer1_count>
    1198:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <timer1_count+0x1>
    119c:	a0 91 9c 02 	lds	r26, 0x029C	; 0x80029c <timer1_count+0x2>
    11a0:	b0 91 9d 02 	lds	r27, 0x029D	; 0x80029d <timer1_count+0x3>
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	a1 1d       	adc	r26, r1
    11a8:	b1 1d       	adc	r27, r1
    11aa:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <timer1_count>
    11ae:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <timer1_count+0x1>
    11b2:	a0 93 9c 02 	sts	0x029C, r26	; 0x80029c <timer1_count+0x2>
    11b6:	b0 93 9d 02 	sts	0x029D, r27	; 0x80029d <timer1_count+0x3>
    11ba:	bf 91       	pop	r27
    11bc:	af 91       	pop	r26
    11be:	9f 91       	pop	r25
    11c0:	8f 91       	pop	r24
    11c2:	0f 90       	pop	r0
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	0f 90       	pop	r0
    11c8:	1f 90       	pop	r1
    11ca:	18 95       	reti

000011cc <timer1_init>:
    11cc:	83 e2       	ldi	r24, 0x23	; 35
    11ce:	94 ef       	ldi	r25, 0xF4	; 244
    11d0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    11d4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    11d8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    11dc:	8c e0       	ldi	r24, 0x0C	; 12
    11de:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11e2:	82 e0       	ldi	r24, 0x02	; 2
    11e4:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    11e8:	08 95       	ret

000011ea <timer1_get>:
    11ea:	2f b7       	in	r18, 0x3f	; 63
    11ec:	f8 94       	cli
    11ee:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <timer1_count>
    11f2:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <timer1_count+0x1>
    11f6:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <timer1_count+0x2>
    11fa:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <timer1_count+0x3>
    11fe:	2f bf       	out	0x3f, r18	; 63
    1200:	08 95       	ret

00001202 <timer1_clear>:
    1202:	8f b7       	in	r24, 0x3f	; 63
    1204:	f8 94       	cli
    1206:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <timer1_count>
    120a:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <timer1_count+0x1>
    120e:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <timer1_count+0x2>
    1212:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <timer1_count+0x3>
    1216:	8f bf       	out	0x3f, r24	; 63
    1218:	08 95       	ret

0000121a <uart_init>:
    121a:	0e 94 37 0b 	call	0x166e	; 0x166e <serial_init>
    121e:	78 94       	sei
    1220:	08 95       	ret

00001222 <uart_writechar>:
    1222:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <serial_writechar>

00001226 <uart_writestr>:
    1226:	cf 93       	push	r28
    1228:	df 93       	push	r29
    122a:	ec 01       	movw	r28, r24
    122c:	89 91       	ld	r24, Y+
    122e:	88 23       	and	r24, r24
    1230:	19 f0       	breq	.+6      	; 0x1238 <uart_writestr+0x12>
    1232:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    1236:	fa cf       	rjmp	.-12     	; 0x122c <uart_writestr+0x6>
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	08 95       	ret

0000123e <uart_writehex8>:
    123e:	cf 93       	push	r28
    1240:	c8 2f       	mov	r28, r24
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	24 e0       	ldi	r18, 0x04	; 4
    1246:	95 95       	asr	r25
    1248:	87 95       	ror	r24
    124a:	2a 95       	dec	r18
    124c:	e1 f7       	brne	.-8      	; 0x1246 <uart_writehex8+0x8>
    124e:	8a 30       	cpi	r24, 0x0A	; 10
    1250:	10 f4       	brcc	.+4      	; 0x1256 <uart_writehex8+0x18>
    1252:	80 5d       	subi	r24, 0xD0	; 208
    1254:	01 c0       	rjmp	.+2      	; 0x1258 <uart_writehex8+0x1a>
    1256:	89 5c       	subi	r24, 0xC9	; 201
    1258:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    125c:	8c 2f       	mov	r24, r28
    125e:	8f 70       	andi	r24, 0x0F	; 15
    1260:	8a 30       	cpi	r24, 0x0A	; 10
    1262:	10 f0       	brcs	.+4      	; 0x1268 <uart_writehex8+0x2a>
    1264:	89 5c       	subi	r24, 0xC9	; 201
    1266:	01 c0       	rjmp	.+2      	; 0x126a <uart_writehex8+0x2c>
    1268:	80 5d       	subi	r24, 0xD0	; 208
    126a:	cf 91       	pop	r28
    126c:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <serial_writechar>

00001270 <uart_writehex16>:
    1270:	cf 93       	push	r28
    1272:	c8 2f       	mov	r28, r24
    1274:	89 2f       	mov	r24, r25
    1276:	0e 94 1f 09 	call	0x123e	; 0x123e <uart_writehex8>
    127a:	8c 2f       	mov	r24, r28
    127c:	cf 91       	pop	r28
    127e:	0c 94 1f 09 	jmp	0x123e	; 0x123e <uart_writehex8>

00001282 <uart_writedec32>:
    1282:	2f 92       	push	r2
    1284:	3f 92       	push	r3
    1286:	4f 92       	push	r4
    1288:	5f 92       	push	r5
    128a:	6f 92       	push	r6
    128c:	7f 92       	push	r7
    128e:	8f 92       	push	r8
    1290:	9f 92       	push	r9
    1292:	af 92       	push	r10
    1294:	bf 92       	push	r11
    1296:	cf 92       	push	r12
    1298:	df 92       	push	r13
    129a:	ef 92       	push	r14
    129c:	ff 92       	push	r15
    129e:	0f 93       	push	r16
    12a0:	1f 93       	push	r17
    12a2:	cf 93       	push	r28
    12a4:	df 93       	push	r29
    12a6:	cd b7       	in	r28, 0x3d	; 61
    12a8:	de b7       	in	r29, 0x3e	; 62
    12aa:	63 97       	sbiw	r28, 0x13	; 19
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	f8 94       	cli
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	cd bf       	out	0x3d, r28	; 61
    12b6:	6b 01       	movw	r12, r22
    12b8:	7c 01       	movw	r14, r24
    12ba:	97 ff       	sbrs	r25, 7
    12bc:	0d c0       	rjmp	.+26     	; 0x12d8 <uart_writedec32+0x56>
    12be:	f0 94       	com	r15
    12c0:	e0 94       	com	r14
    12c2:	d0 94       	com	r13
    12c4:	c0 94       	com	r12
    12c6:	c1 1c       	adc	r12, r1
    12c8:	d1 1c       	adc	r13, r1
    12ca:	e1 1c       	adc	r14, r1
    12cc:	f1 1c       	adc	r15, r1
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	9b 8b       	std	Y+19, r25	; 0x13
    12d4:	8a 8b       	std	Y+18, r24	; 0x12
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <uart_writedec32+0x5a>
    12d8:	1b 8a       	std	Y+19, r1	; 0x13
    12da:	1a 8a       	std	Y+18, r1	; 0x12
    12dc:	fe 01       	movw	r30, r28
    12de:	31 96       	adiw	r30, 0x01	; 1
    12e0:	5f 01       	movw	r10, r30
    12e2:	8e 01       	movw	r16, r28
    12e4:	05 5f       	subi	r16, 0xF5	; 245
    12e6:	1f 4f       	sbci	r17, 0xFF	; 255
    12e8:	f9 8b       	std	Y+17, r31	; 0x11
    12ea:	e8 8b       	std	Y+16, r30	; 0x10
    12ec:	66 24       	eor	r6, r6
    12ee:	63 94       	inc	r6
    12f0:	71 2c       	mov	r7, r1
    12f2:	81 2c       	mov	r8, r1
    12f4:	91 2c       	mov	r9, r1
    12f6:	aa e0       	ldi	r26, 0x0A	; 10
    12f8:	b0 e0       	ldi	r27, 0x00	; 0
    12fa:	93 01       	movw	r18, r6
    12fc:	a4 01       	movw	r20, r8
    12fe:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
    1302:	1b 01       	movw	r2, r22
    1304:	2c 01       	movw	r4, r24
    1306:	c7 01       	movw	r24, r14
    1308:	b6 01       	movw	r22, r12
    130a:	91 01       	movw	r18, r2
    130c:	a2 01       	movw	r20, r4
    130e:	0e 94 83 0c 	call	0x1906	; 0x1906 <__divmodsi4>
    1312:	93 01       	movw	r18, r6
    1314:	a4 01       	movw	r20, r8
    1316:	0e 94 83 0c 	call	0x1906	; 0x1906 <__divmodsi4>
    131a:	e8 89       	ldd	r30, Y+16	; 0x10
    131c:	f9 89       	ldd	r31, Y+17	; 0x11
    131e:	21 93       	st	Z+, r18
    1320:	f9 8b       	std	Y+17, r31	; 0x11
    1322:	e8 8b       	std	Y+16, r30	; 0x10
    1324:	82 2f       	mov	r24, r18
    1326:	22 0f       	add	r18, r18
    1328:	99 0b       	sbc	r25, r25
    132a:	aa 0b       	sbc	r26, r26
    132c:	bb 0b       	sbc	r27, r27
    132e:	c8 1a       	sub	r12, r24
    1330:	d9 0a       	sbc	r13, r25
    1332:	ea 0a       	sbc	r14, r26
    1334:	fb 0a       	sbc	r15, r27
    1336:	31 01       	movw	r6, r2
    1338:	42 01       	movw	r8, r4
    133a:	0e 17       	cp	r16, r30
    133c:	1f 07       	cpc	r17, r31
    133e:	d9 f6       	brne	.-74     	; 0x12f6 <uart_writedec32+0x74>
    1340:	8a 89       	ldd	r24, Y+18	; 0x12
    1342:	9b 89       	ldd	r25, Y+19	; 0x13
    1344:	89 2b       	or	r24, r25
    1346:	11 f0       	breq	.+4      	; 0x134c <uart_writedec32+0xca>
    1348:	8d e2       	ldi	r24, 0x2D	; 45
    134a:	01 c0       	rjmp	.+2      	; 0x134e <uart_writedec32+0xcc>
    134c:	80 e2       	ldi	r24, 0x20	; 32
    134e:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	f8 01       	movw	r30, r16
    1358:	82 91       	ld	r24, -Z
    135a:	8f 01       	movw	r16, r30
    135c:	81 11       	cpse	r24, r1
    135e:	06 c0       	rjmp	.+12     	; 0x136c <uart_writedec32+0xea>
    1360:	21 15       	cp	r18, r1
    1362:	31 05       	cpc	r19, r1
    1364:	19 f4       	brne	.+6      	; 0x136c <uart_writedec32+0xea>
    1366:	ea 15       	cp	r30, r10
    1368:	fb 05       	cpc	r31, r11
    136a:	29 f4       	brne	.+10     	; 0x1376 <uart_writedec32+0xf4>
    136c:	80 5d       	subi	r24, 0xD0	; 208
    136e:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    1372:	21 e0       	ldi	r18, 0x01	; 1
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	0a 15       	cp	r16, r10
    1378:	1b 05       	cpc	r17, r11
    137a:	69 f7       	brne	.-38     	; 0x1356 <uart_writedec32+0xd4>
    137c:	63 96       	adiw	r28, 0x13	; 19
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	f8 94       	cli
    1382:	de bf       	out	0x3e, r29	; 62
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	cd bf       	out	0x3d, r28	; 61
    1388:	df 91       	pop	r29
    138a:	cf 91       	pop	r28
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	ff 90       	pop	r15
    1392:	ef 90       	pop	r14
    1394:	df 90       	pop	r13
    1396:	cf 90       	pop	r12
    1398:	bf 90       	pop	r11
    139a:	af 90       	pop	r10
    139c:	9f 90       	pop	r9
    139e:	8f 90       	pop	r8
    13a0:	7f 90       	pop	r7
    13a2:	6f 90       	pop	r6
    13a4:	5f 90       	pop	r5
    13a6:	4f 90       	pop	r4
    13a8:	3f 90       	pop	r3
    13aa:	2f 90       	pop	r2
    13ac:	08 95       	ret

000013ae <dump_eeprom>:
    13ae:	2f 92       	push	r2
    13b0:	3f 92       	push	r3
    13b2:	4f 92       	push	r4
    13b4:	5f 92       	push	r5
    13b6:	6f 92       	push	r6
    13b8:	7f 92       	push	r7
    13ba:	8f 92       	push	r8
    13bc:	9f 92       	push	r9
    13be:	af 92       	push	r10
    13c0:	bf 92       	push	r11
    13c2:	cf 92       	push	r12
    13c4:	df 92       	push	r13
    13c6:	ef 92       	push	r14
    13c8:	ff 92       	push	r15
    13ca:	0f 93       	push	r16
    13cc:	1f 93       	push	r17
    13ce:	cf 93       	push	r28
    13d0:	df 93       	push	r29
    13d2:	cd b7       	in	r28, 0x3d	; 61
    13d4:	de b7       	in	r29, 0x3e	; 62
    13d6:	64 97       	sbiw	r28, 0x14	; 20
    13d8:	0f b6       	in	r0, 0x3f	; 63
    13da:	f8 94       	cli
    13dc:	de bf       	out	0x3e, r29	; 62
    13de:	0f be       	out	0x3f, r0	; 63
    13e0:	cd bf       	out	0x3d, r28	; 61
    13e2:	8c 01       	movw	r16, r24
    13e4:	61 15       	cp	r22, r1
    13e6:	71 05       	cpc	r23, r1
    13e8:	09 f4       	brne	.+2      	; 0x13ec <dump_eeprom+0x3e>
    13ea:	92 c0       	rjmp	.+292    	; 0x1510 <dump_eeprom+0x162>
    13ec:	81 2c       	mov	r8, r1
    13ee:	91 2c       	mov	r9, r1
    13f0:	54 01       	movw	r10, r8
    13f2:	cb 01       	movw	r24, r22
    13f4:	a0 e0       	ldi	r26, 0x00	; 0
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	89 8b       	std	Y+17, r24	; 0x11
    13fa:	9a 8b       	std	Y+18, r25	; 0x12
    13fc:	ab 8b       	std	Y+19, r26	; 0x13
    13fe:	bc 8b       	std	Y+20, r27	; 0x14
    1400:	de 01       	movw	r26, r28
    1402:	11 96       	adiw	r26, 0x01	; 1
    1404:	1d 01       	movw	r2, r26
    1406:	89 89       	ldd	r24, Y+17	; 0x11
    1408:	9a 89       	ldd	r25, Y+18	; 0x12
    140a:	ab 89       	ldd	r26, Y+19	; 0x13
    140c:	bc 89       	ldd	r27, Y+20	; 0x14
    140e:	88 16       	cp	r8, r24
    1410:	99 06       	cpc	r9, r25
    1412:	aa 06       	cpc	r10, r26
    1414:	bb 06       	cpc	r11, r27
    1416:	08 f0       	brcs	.+2      	; 0x141a <dump_eeprom+0x6c>
    1418:	7b c0       	rjmp	.+246    	; 0x1510 <dump_eeprom+0x162>
    141a:	81 2f       	mov	r24, r17
    141c:	0e 94 1f 09 	call	0x123e	; 0x123e <uart_writehex8>
    1420:	80 2f       	mov	r24, r16
    1422:	80 7f       	andi	r24, 0xF0	; 240
    1424:	0e 94 1f 09 	call	0x123e	; 0x123e <uart_writehex8>
    1428:	80 e2       	ldi	r24, 0x20	; 32
    142a:	0e 94 11 09 	call	0x1222	; 0x1222 <uart_writechar>
    142e:	61 01       	movw	r12, r2
    1430:	78 01       	movw	r14, r16
    1432:	41 2c       	mov	r4, r1
    1434:	51 2c       	mov	r5, r1
    1436:	32 01       	movw	r6, r4
    1438:	41 e0       	ldi	r20, 0x01	; 1
    143a:	b6 01       	movw	r22, r12
    143c:	c7 01       	movw	r24, r14
    143e:	0e 94 23 01 	call	0x246	; 0x246 <eeprom_readbuf>
    1442:	bf ef       	ldi	r27, 0xFF	; 255
    1444:	eb 1a       	sub	r14, r27
    1446:	fb 0a       	sbc	r15, r27
    1448:	ef ef       	ldi	r30, 0xFF	; 255
    144a:	4e 1a       	sub	r4, r30
    144c:	5e 0a       	sbc	r5, r30
    144e:	6e 0a       	sbc	r6, r30
    1450:	7e 0a       	sbc	r7, r30
    1452:	ff ef       	ldi	r31, 0xFF	; 255
    1454:	8f 1a       	sub	r8, r31
    1456:	9f 0a       	sbc	r9, r31
    1458:	af 0a       	sbc	r10, r31
    145a:	bf 0a       	sbc	r11, r31
    145c:	89 89       	ldd	r24, Y+17	; 0x11
    145e:	9a 89       	ldd	r25, Y+18	; 0x12
    1460:	ab 89       	ldd	r26, Y+19	; 0x13
    1462:	bc 89       	ldd	r27, Y+20	; 0x14
    1464:	88 16       	cp	r8, r24
    1466:	99 06       	cpc	r9, r25
    1468:	aa 06       	cpc	r10, r26
    146a:	bb 06       	cpc	r11, r27
    146c:	50 f0       	brcs	.+20     	; 0x1482 <dump_eeprom+0xd4>
    146e:	68 01       	movw	r12, r16
    1470:	9f e0       	ldi	r25, 0x0F	; 15
    1472:	c9 22       	and	r12, r25
    1474:	dd 24       	eor	r13, r13
    1476:	00 e0       	ldi	r16, 0x00	; 0
    1478:	10 e0       	ldi	r17, 0x00	; 0
    147a:	32 01       	movw	r6, r4
    147c:	6c 0c       	add	r6, r12
    147e:	7d 1c       	adc	r7, r13
    1480:	09 c0       	rjmp	.+18     	; 0x1494 <dump_eeprom+0xe6>
    1482:	af ef       	ldi	r26, 0xFF	; 255
    1484:	ca 1a       	sub	r12, r26
    1486:	da 0a       	sbc	r13, r26
    1488:	c7 01       	movw	r24, r14
    148a:	8f 70       	andi	r24, 0x0F	; 15
    148c:	99 27       	eor	r25, r25
    148e:	89 2b       	or	r24, r25
    1490:	99 f6       	brne	.-90     	; 0x1438 <dump_eeprom+0x8a>
    1492:	ed cf       	rjmp	.-38     	; 0x146e <dump_eeprom+0xc0>
    1494:	0c 15       	cp	r16, r12
    1496:	1d 05       	cpc	r17, r13
    1498:	18 f0       	brcs	.+6      	; 0x14a0 <dump_eeprom+0xf2>
    149a:	06 15       	cp	r16, r6
    149c:	17 05       	cpc	r17, r7
    149e:	28 f0       	brcs	.+10     	; 0x14aa <dump_eeprom+0xfc>
    14a0:	85 ec       	ldi	r24, 0xC5	; 197
    14a2:	91 e0       	ldi	r25, 0x01	; 1
    14a4:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    14a8:	0b c0       	rjmp	.+22     	; 0x14c0 <dump_eeprom+0x112>
    14aa:	f8 01       	movw	r30, r16
    14ac:	ec 19       	sub	r30, r12
    14ae:	fd 09       	sbc	r31, r13
    14b0:	e2 0d       	add	r30, r2
    14b2:	f3 1d       	adc	r31, r3
    14b4:	80 81       	ld	r24, Z
    14b6:	0e 94 1f 09 	call	0x123e	; 0x123e <uart_writehex8>
    14ba:	80 e2       	ldi	r24, 0x20	; 32
    14bc:	0e 94 11 09 	call	0x1222	; 0x1222 <uart_writechar>
    14c0:	0f 5f       	subi	r16, 0xFF	; 255
    14c2:	1f 4f       	sbci	r17, 0xFF	; 255
    14c4:	00 31       	cpi	r16, 0x10	; 16
    14c6:	11 05       	cpc	r17, r1
    14c8:	29 f7       	brne	.-54     	; 0x1494 <dump_eeprom+0xe6>
    14ca:	00 e0       	ldi	r16, 0x00	; 0
    14cc:	10 e0       	ldi	r17, 0x00	; 0
    14ce:	c0 16       	cp	r12, r16
    14d0:	d1 06       	cpc	r13, r17
    14d2:	31 f0       	breq	.+12     	; 0x14e0 <dump_eeprom+0x132>
    14d4:	80 e2       	ldi	r24, 0x20	; 32
    14d6:	0e 94 11 09 	call	0x1222	; 0x1222 <uart_writechar>
    14da:	0f 5f       	subi	r16, 0xFF	; 255
    14dc:	1f 4f       	sbci	r17, 0xFF	; 255
    14de:	f7 cf       	rjmp	.-18     	; 0x14ce <dump_eeprom+0x120>
    14e0:	81 01       	movw	r16, r2
    14e2:	c8 01       	movw	r24, r16
    14e4:	82 19       	sub	r24, r2
    14e6:	93 09       	sbc	r25, r3
    14e8:	84 15       	cp	r24, r4
    14ea:	95 05       	cpc	r25, r5
    14ec:	58 f4       	brcc	.+22     	; 0x1504 <dump_eeprom+0x156>
    14ee:	f8 01       	movw	r30, r16
    14f0:	81 91       	ld	r24, Z+
    14f2:	8f 01       	movw	r16, r30
    14f4:	90 ee       	ldi	r25, 0xE0	; 224
    14f6:	98 0f       	add	r25, r24
    14f8:	90 36       	cpi	r25, 0x60	; 96
    14fa:	08 f0       	brcs	.+2      	; 0x14fe <dump_eeprom+0x150>
    14fc:	8e e2       	ldi	r24, 0x2E	; 46
    14fe:	0e 94 11 09 	call	0x1222	; 0x1222 <uart_writechar>
    1502:	ef cf       	rjmp	.-34     	; 0x14e2 <dump_eeprom+0x134>
    1504:	89 ec       	ldi	r24, 0xC9	; 201
    1506:	91 e0       	ldi	r25, 0x01	; 1
    1508:	0e 94 13 09 	call	0x1226	; 0x1226 <uart_writestr>
    150c:	87 01       	movw	r16, r14
    150e:	7b cf       	rjmp	.-266    	; 0x1406 <dump_eeprom+0x58>
    1510:	64 96       	adiw	r28, 0x14	; 20
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	ef 90       	pop	r14
    1528:	df 90       	pop	r13
    152a:	cf 90       	pop	r12
    152c:	bf 90       	pop	r11
    152e:	af 90       	pop	r10
    1530:	9f 90       	pop	r9
    1532:	8f 90       	pop	r8
    1534:	7f 90       	pop	r7
    1536:	6f 90       	pop	r6
    1538:	5f 90       	pop	r5
    153a:	4f 90       	pop	r4
    153c:	3f 90       	pop	r3
    153e:	2f 90       	pop	r2
    1540:	08 95       	ret

00001542 <__vector_14>:
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	2f 93       	push	r18
    154e:	3f 93       	push	r19
    1550:	8f 93       	push	r24
    1552:	9f 93       	push	r25
    1554:	20 91 a4 02 	lds	r18, 0x02A4	; 0x8002a4 <delay_count>
    1558:	30 91 a5 02 	lds	r19, 0x02A5	; 0x8002a5 <delay_count+0x1>
    155c:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <delay_limit>
    1560:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <delay_limit+0x1>
    1564:	28 17       	cp	r18, r24
    1566:	39 07       	cpc	r19, r25
    1568:	49 f0       	breq	.+18     	; 0x157c <__vector_14+0x3a>
    156a:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <delay_count>
    156e:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <delay_count+0x1>
    1572:	01 96       	adiw	r24, 0x01	; 1
    1574:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <delay_count+0x1>
    1578:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <delay_count>
    157c:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <delay_count+0x2>
    1580:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <delay_count+0x3>
    1584:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <delay_limit+0x2>
    1588:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <delay_limit+0x3>
    158c:	28 17       	cp	r18, r24
    158e:	39 07       	cpc	r19, r25
    1590:	49 f0       	breq	.+18     	; 0x15a4 <__vector_14+0x62>
    1592:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <delay_count+0x2>
    1596:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <delay_count+0x3>
    159a:	01 96       	adiw	r24, 0x01	; 1
    159c:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <delay_count+0x3>
    15a0:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <delay_count+0x2>
    15a4:	9f 91       	pop	r25
    15a6:	8f 91       	pop	r24
    15a8:	3f 91       	pop	r19
    15aa:	2f 91       	pop	r18
    15ac:	0f 90       	pop	r0
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	0f 90       	pop	r0
    15b2:	1f 90       	pop	r1
    15b4:	18 95       	reti

000015b6 <delay_init>:
    15b6:	89 ef       	ldi	r24, 0xF9	; 249
    15b8:	87 bd       	out	0x27, r24	; 39
    15ba:	82 e0       	ldi	r24, 0x02	; 2
    15bc:	84 bd       	out	0x24, r24	; 36
    15be:	93 e0       	ldi	r25, 0x03	; 3
    15c0:	95 bd       	out	0x25, r25	; 37
    15c2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
    15c6:	08 95       	ret

000015c8 <delay_get>:
    15c8:	82 30       	cpi	r24, 0x02	; 2
    15ca:	91 05       	cpc	r25, r1
    15cc:	50 f4       	brcc	.+20     	; 0x15e2 <delay_get+0x1a>
    15ce:	f8 94       	cli
    15d0:	88 0f       	add	r24, r24
    15d2:	99 1f       	adc	r25, r25
    15d4:	fc 01       	movw	r30, r24
    15d6:	ec 55       	subi	r30, 0x5C	; 92
    15d8:	fd 4f       	sbci	r31, 0xFD	; 253
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	78 94       	sei
    15e0:	08 95       	ret
    15e2:	80 e0       	ldi	r24, 0x00	; 0
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	08 95       	ret

000015e8 <delay_isdone>:
    15e8:	82 30       	cpi	r24, 0x02	; 2
    15ea:	91 05       	cpc	r25, r1
    15ec:	98 f4       	brcc	.+38     	; 0x1614 <delay_isdone+0x2c>
    15ee:	88 0f       	add	r24, r24
    15f0:	99 1f       	adc	r25, r25
    15f2:	fc 01       	movw	r30, r24
    15f4:	ec 55       	subi	r30, 0x5C	; 92
    15f6:	fd 4f       	sbci	r31, 0xFD	; 253
    15f8:	20 81       	ld	r18, Z
    15fa:	31 81       	ldd	r19, Z+1	; 0x01
    15fc:	fc 01       	movw	r30, r24
    15fe:	e0 56       	subi	r30, 0x60	; 96
    1600:	fd 4f       	sbci	r31, 0xFD	; 253
    1602:	81 e0       	ldi	r24, 0x01	; 1
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	40 81       	ld	r20, Z
    1608:	51 81       	ldd	r21, Z+1	; 0x01
    160a:	42 17       	cp	r20, r18
    160c:	53 07       	cpc	r21, r19
    160e:	21 f0       	breq	.+8      	; 0x1618 <delay_isdone+0x30>
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	08 95       	ret
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	08 95       	ret

0000161a <delay_set>:
    161a:	0f 93       	push	r16
    161c:	1f 93       	push	r17
    161e:	cf 93       	push	r28
    1620:	df 93       	push	r29
    1622:	ec 01       	movw	r28, r24
    1624:	8b 01       	movw	r16, r22
    1626:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <initialized.1590>
    162a:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <initialized.1590+0x1>
    162e:	89 2b       	or	r24, r25
    1630:	41 f4       	brne	.+16     	; 0x1642 <delay_set+0x28>
    1632:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <delay_init>
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <initialized.1590+0x1>
    163e:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <initialized.1590>
    1642:	c2 30       	cpi	r28, 0x02	; 2
    1644:	d1 05       	cpc	r29, r1
    1646:	70 f4       	brcc	.+28     	; 0x1664 <delay_set+0x4a>
    1648:	8f b7       	in	r24, 0x3f	; 63
    164a:	f8 94       	cli
    164c:	cc 0f       	add	r28, r28
    164e:	dd 1f       	adc	r29, r29
    1650:	fe 01       	movw	r30, r28
    1652:	e0 56       	subi	r30, 0x60	; 96
    1654:	fd 4f       	sbci	r31, 0xFD	; 253
    1656:	11 83       	std	Z+1, r17	; 0x01
    1658:	00 83       	st	Z, r16
    165a:	cc 55       	subi	r28, 0x5C	; 92
    165c:	dd 4f       	sbci	r29, 0xFD	; 253
    165e:	19 82       	std	Y+1, r1	; 0x01
    1660:	18 82       	st	Y, r1
    1662:	8f bf       	out	0x3f, r24	; 63
    1664:	df 91       	pop	r29
    1666:	cf 91       	pop	r28
    1668:	1f 91       	pop	r17
    166a:	0f 91       	pop	r16
    166c:	08 95       	ret

0000166e <serial_init>:
    166e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1672:	87 e6       	ldi	r24, 0x67	; 103
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    167a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    167e:	e1 ec       	ldi	r30, 0xC1	; 193
    1680:	f0 e0       	ldi	r31, 0x00	; 0
    1682:	88 e1       	ldi	r24, 0x18	; 24
    1684:	80 83       	st	Z, r24
    1686:	86 e0       	ldi	r24, 0x06	; 6
    1688:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    168c:	80 81       	ld	r24, Z
    168e:	80 6a       	ori	r24, 0xA0	; 160
    1690:	80 83       	st	Z, r24
    1692:	08 95       	ret

00001694 <__vector_18>:
    1694:	1f 92       	push	r1
    1696:	0f 92       	push	r0
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	0f 92       	push	r0
    169c:	11 24       	eor	r1, r1
    169e:	2f 93       	push	r18
    16a0:	8f 93       	push	r24
    16a2:	9f 93       	push	r25
    16a4:	ef 93       	push	r30
    16a6:	ff 93       	push	r31
    16a8:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <rxtail>
    16ac:	20 91 ab 02 	lds	r18, 0x02AB	; 0x8002ab <rxhead>
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	82 1b       	sub	r24, r18
    16b4:	91 09       	sbc	r25, r1
    16b6:	01 97       	sbiw	r24, 0x01	; 1
    16b8:	8f 73       	andi	r24, 0x3F	; 63
    16ba:	99 27       	eor	r25, r25
    16bc:	89 2b       	or	r24, r25
    16be:	79 f0       	breq	.+30     	; 0x16de <__vector_18+0x4a>
    16c0:	e0 91 ab 02 	lds	r30, 0x02AB	; 0x8002ab <rxhead>
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    16ca:	e7 50       	subi	r30, 0x07	; 7
    16cc:	fd 4f       	sbci	r31, 0xFD	; 253
    16ce:	80 83       	st	Z, r24
    16d0:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <rxhead>
    16d4:	8f 5f       	subi	r24, 0xFF	; 255
    16d6:	8f 73       	andi	r24, 0x3F	; 63
    16d8:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <rxhead>
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <__vector_18+0x4e>
    16de:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    16e2:	ff 91       	pop	r31
    16e4:	ef 91       	pop	r30
    16e6:	9f 91       	pop	r25
    16e8:	8f 91       	pop	r24
    16ea:	2f 91       	pop	r18
    16ec:	0f 90       	pop	r0
    16ee:	0f be       	out	0x3f, r0	; 63
    16f0:	0f 90       	pop	r0
    16f2:	1f 90       	pop	r1
    16f4:	18 95       	reti

000016f6 <__vector_19>:
    16f6:	1f 92       	push	r1
    16f8:	0f 92       	push	r0
    16fa:	0f b6       	in	r0, 0x3f	; 63
    16fc:	0f 92       	push	r0
    16fe:	11 24       	eor	r1, r1
    1700:	2f 93       	push	r18
    1702:	8f 93       	push	r24
    1704:	9f 93       	push	r25
    1706:	ef 93       	push	r30
    1708:	ff 93       	push	r31
    170a:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <txhead>
    170e:	20 91 a8 02 	lds	r18, 0x02A8	; 0x8002a8 <txtail>
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	82 1b       	sub	r24, r18
    1716:	91 09       	sbc	r25, r1
    1718:	8f 73       	andi	r24, 0x3F	; 63
    171a:	99 27       	eor	r25, r25
    171c:	89 2b       	or	r24, r25
    171e:	79 f0       	breq	.+30     	; 0x173e <__vector_19+0x48>
    1720:	e0 91 a8 02 	lds	r30, 0x02A8	; 0x8002a8 <txtail>
    1724:	f0 e0       	ldi	r31, 0x00	; 0
    1726:	e7 5c       	subi	r30, 0xC7	; 199
    1728:	fc 4f       	sbci	r31, 0xFC	; 252
    172a:	80 81       	ld	r24, Z
    172c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1730:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <txtail>
    1734:	8f 5f       	subi	r24, 0xFF	; 255
    1736:	8f 73       	andi	r24, 0x3F	; 63
    1738:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <txtail>
    173c:	05 c0       	rjmp	.+10     	; 0x1748 <__vector_19+0x52>
    173e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1742:	8f 7d       	andi	r24, 0xDF	; 223
    1744:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1748:	ff 91       	pop	r31
    174a:	ef 91       	pop	r30
    174c:	9f 91       	pop	r25
    174e:	8f 91       	pop	r24
    1750:	2f 91       	pop	r18
    1752:	0f 90       	pop	r0
    1754:	0f be       	out	0x3f, r0	; 63
    1756:	0f 90       	pop	r0
    1758:	1f 90       	pop	r1
    175a:	18 95       	reti

0000175c <serial_rxchars>:
    175c:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <rxhead>
    1760:	90 91 aa 02 	lds	r25, 0x02AA	; 0x8002aa <rxtail>
    1764:	89 1b       	sub	r24, r25
    1766:	8f 73       	andi	r24, 0x3F	; 63
    1768:	08 95       	ret

0000176a <serial_popchar>:
    176a:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <rxhead>
    176e:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <rxtail>
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	82 1b       	sub	r24, r18
    1776:	91 09       	sbc	r25, r1
    1778:	8f 73       	andi	r24, 0x3F	; 63
    177a:	99 27       	eor	r25, r25
    177c:	89 2b       	or	r24, r25
    177e:	69 f0       	breq	.+26     	; 0x179a <serial_popchar+0x30>
    1780:	e0 91 aa 02 	lds	r30, 0x02AA	; 0x8002aa <rxtail>
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	e7 50       	subi	r30, 0x07	; 7
    1788:	fd 4f       	sbci	r31, 0xFD	; 253
    178a:	80 81       	ld	r24, Z
    178c:	90 91 aa 02 	lds	r25, 0x02AA	; 0x8002aa <rxtail>
    1790:	9f 5f       	subi	r25, 0xFF	; 255
    1792:	9f 73       	andi	r25, 0x3F	; 63
    1794:	90 93 aa 02 	sts	0x02AA, r25	; 0x8002aa <rxtail>
    1798:	08 95       	ret
    179a:	80 e0       	ldi	r24, 0x00	; 0
    179c:	08 95       	ret

0000179e <serial_writechar>:
    179e:	0f b6       	in	r0, 0x3f	; 63
    17a0:	07 fe       	sbrs	r0, 7
    17a2:	0e c0       	rjmp	.+28     	; 0x17c0 <serial_writechar+0x22>
    17a4:	20 91 a8 02 	lds	r18, 0x02A8	; 0x8002a8 <txtail>
    17a8:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <txhead>
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	29 1b       	sub	r18, r25
    17b0:	31 09       	sbc	r19, r1
    17b2:	21 50       	subi	r18, 0x01	; 1
    17b4:	31 09       	sbc	r19, r1
    17b6:	2f 73       	andi	r18, 0x3F	; 63
    17b8:	33 27       	eor	r19, r19
    17ba:	23 2b       	or	r18, r19
    17bc:	99 f3       	breq	.-26     	; 0x17a4 <serial_writechar+0x6>
    17be:	0d c0       	rjmp	.+26     	; 0x17da <serial_writechar+0x3c>
    17c0:	20 91 a8 02 	lds	r18, 0x02A8	; 0x8002a8 <txtail>
    17c4:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <txhead>
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	29 1b       	sub	r18, r25
    17cc:	31 09       	sbc	r19, r1
    17ce:	21 50       	subi	r18, 0x01	; 1
    17d0:	31 09       	sbc	r19, r1
    17d2:	2f 73       	andi	r18, 0x3F	; 63
    17d4:	33 27       	eor	r19, r19
    17d6:	23 2b       	or	r18, r19
    17d8:	61 f0       	breq	.+24     	; 0x17f2 <serial_writechar+0x54>
    17da:	e0 91 a9 02 	lds	r30, 0x02A9	; 0x8002a9 <txhead>
    17de:	f0 e0       	ldi	r31, 0x00	; 0
    17e0:	e7 5c       	subi	r30, 0xC7	; 199
    17e2:	fc 4f       	sbci	r31, 0xFC	; 252
    17e4:	80 83       	st	Z, r24
    17e6:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <txhead>
    17ea:	8f 5f       	subi	r24, 0xFF	; 255
    17ec:	8f 73       	andi	r24, 0x3F	; 63
    17ee:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <txhead>
    17f2:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    17f6:	80 62       	ori	r24, 0x20	; 32
    17f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    17fc:	08 95       	ret

000017fe <serial_writestr>:
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	ec 01       	movw	r28, r24
    1806:	80 e0       	ldi	r24, 0x00	; 0
    1808:	11 e0       	ldi	r17, 0x01	; 1
    180a:	18 0f       	add	r17, r24
    180c:	fe 01       	movw	r30, r28
    180e:	e8 0f       	add	r30, r24
    1810:	f1 1d       	adc	r31, r1
    1812:	80 81       	ld	r24, Z
    1814:	88 23       	and	r24, r24
    1816:	21 f0       	breq	.+8      	; 0x1820 <serial_writestr+0x22>
    1818:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    181c:	81 2f       	mov	r24, r17
    181e:	f4 cf       	rjmp	.-24     	; 0x1808 <serial_writestr+0xa>
    1820:	df 91       	pop	r29
    1822:	cf 91       	pop	r28
    1824:	1f 91       	pop	r17
    1826:	08 95       	ret

00001828 <serial_writestr_P>:
    1828:	1f 93       	push	r17
    182a:	cf 93       	push	r28
    182c:	df 93       	push	r29
    182e:	ec 01       	movw	r28, r24
    1830:	80 e0       	ldi	r24, 0x00	; 0
    1832:	11 e0       	ldi	r17, 0x01	; 1
    1834:	18 0f       	add	r17, r24
    1836:	fe 01       	movw	r30, r28
    1838:	e8 0f       	add	r30, r24
    183a:	f1 1d       	adc	r31, r1
    183c:	84 91       	lpm	r24, Z
    183e:	88 23       	and	r24, r24
    1840:	21 f0       	breq	.+8      	; 0x184a <serial_writestr_P+0x22>
    1842:	0e 94 cf 0b 	call	0x179e	; 0x179e <serial_writechar>
    1846:	81 2f       	mov	r24, r17
    1848:	f4 cf       	rjmp	.-24     	; 0x1832 <serial_writestr_P+0xa>
    184a:	df 91       	pop	r29
    184c:	cf 91       	pop	r28
    184e:	1f 91       	pop	r17
    1850:	08 95       	ret

00001852 <__mulsi3>:
    1852:	db 01       	movw	r26, r22
    1854:	8f 93       	push	r24
    1856:	9f 93       	push	r25
    1858:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__muluhisi3>
    185c:	bf 91       	pop	r27
    185e:	af 91       	pop	r26
    1860:	a2 9f       	mul	r26, r18
    1862:	80 0d       	add	r24, r0
    1864:	91 1d       	adc	r25, r1
    1866:	a3 9f       	mul	r26, r19
    1868:	90 0d       	add	r25, r0
    186a:	b2 9f       	mul	r27, r18
    186c:	90 0d       	add	r25, r0
    186e:	11 24       	eor	r1, r1
    1870:	08 95       	ret

00001872 <__udivmodhi4>:
    1872:	aa 1b       	sub	r26, r26
    1874:	bb 1b       	sub	r27, r27
    1876:	51 e1       	ldi	r21, 0x11	; 17
    1878:	07 c0       	rjmp	.+14     	; 0x1888 <__udivmodhi4_ep>

0000187a <__udivmodhi4_loop>:
    187a:	aa 1f       	adc	r26, r26
    187c:	bb 1f       	adc	r27, r27
    187e:	a6 17       	cp	r26, r22
    1880:	b7 07       	cpc	r27, r23
    1882:	10 f0       	brcs	.+4      	; 0x1888 <__udivmodhi4_ep>
    1884:	a6 1b       	sub	r26, r22
    1886:	b7 0b       	sbc	r27, r23

00001888 <__udivmodhi4_ep>:
    1888:	88 1f       	adc	r24, r24
    188a:	99 1f       	adc	r25, r25
    188c:	5a 95       	dec	r21
    188e:	a9 f7       	brne	.-22     	; 0x187a <__udivmodhi4_loop>
    1890:	80 95       	com	r24
    1892:	90 95       	com	r25
    1894:	bc 01       	movw	r22, r24
    1896:	cd 01       	movw	r24, r26
    1898:	08 95       	ret

0000189a <__divmodhi4>:
    189a:	97 fb       	bst	r25, 7
    189c:	07 2e       	mov	r0, r23
    189e:	16 f4       	brtc	.+4      	; 0x18a4 <__divmodhi4+0xa>
    18a0:	00 94       	com	r0
    18a2:	07 d0       	rcall	.+14     	; 0x18b2 <__divmodhi4_neg1>
    18a4:	77 fd       	sbrc	r23, 7
    18a6:	09 d0       	rcall	.+18     	; 0x18ba <__divmodhi4_neg2>
    18a8:	0e 94 39 0c 	call	0x1872	; 0x1872 <__udivmodhi4>
    18ac:	07 fc       	sbrc	r0, 7
    18ae:	05 d0       	rcall	.+10     	; 0x18ba <__divmodhi4_neg2>
    18b0:	3e f4       	brtc	.+14     	; 0x18c0 <__divmodhi4_exit>

000018b2 <__divmodhi4_neg1>:
    18b2:	90 95       	com	r25
    18b4:	81 95       	neg	r24
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	08 95       	ret

000018ba <__divmodhi4_neg2>:
    18ba:	70 95       	com	r23
    18bc:	61 95       	neg	r22
    18be:	7f 4f       	sbci	r23, 0xFF	; 255

000018c0 <__divmodhi4_exit>:
    18c0:	08 95       	ret

000018c2 <__udivmodsi4>:
    18c2:	a1 e2       	ldi	r26, 0x21	; 33
    18c4:	1a 2e       	mov	r1, r26
    18c6:	aa 1b       	sub	r26, r26
    18c8:	bb 1b       	sub	r27, r27
    18ca:	fd 01       	movw	r30, r26
    18cc:	0d c0       	rjmp	.+26     	; 0x18e8 <__udivmodsi4_ep>

000018ce <__udivmodsi4_loop>:
    18ce:	aa 1f       	adc	r26, r26
    18d0:	bb 1f       	adc	r27, r27
    18d2:	ee 1f       	adc	r30, r30
    18d4:	ff 1f       	adc	r31, r31
    18d6:	a2 17       	cp	r26, r18
    18d8:	b3 07       	cpc	r27, r19
    18da:	e4 07       	cpc	r30, r20
    18dc:	f5 07       	cpc	r31, r21
    18de:	20 f0       	brcs	.+8      	; 0x18e8 <__udivmodsi4_ep>
    18e0:	a2 1b       	sub	r26, r18
    18e2:	b3 0b       	sbc	r27, r19
    18e4:	e4 0b       	sbc	r30, r20
    18e6:	f5 0b       	sbc	r31, r21

000018e8 <__udivmodsi4_ep>:
    18e8:	66 1f       	adc	r22, r22
    18ea:	77 1f       	adc	r23, r23
    18ec:	88 1f       	adc	r24, r24
    18ee:	99 1f       	adc	r25, r25
    18f0:	1a 94       	dec	r1
    18f2:	69 f7       	brne	.-38     	; 0x18ce <__udivmodsi4_loop>
    18f4:	60 95       	com	r22
    18f6:	70 95       	com	r23
    18f8:	80 95       	com	r24
    18fa:	90 95       	com	r25
    18fc:	9b 01       	movw	r18, r22
    18fe:	ac 01       	movw	r20, r24
    1900:	bd 01       	movw	r22, r26
    1902:	cf 01       	movw	r24, r30
    1904:	08 95       	ret

00001906 <__divmodsi4>:
    1906:	05 2e       	mov	r0, r21
    1908:	97 fb       	bst	r25, 7
    190a:	1e f4       	brtc	.+6      	; 0x1912 <__divmodsi4+0xc>
    190c:	00 94       	com	r0
    190e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__negsi2>
    1912:	57 fd       	sbrc	r21, 7
    1914:	07 d0       	rcall	.+14     	; 0x1924 <__divmodsi4_neg2>
    1916:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <__udivmodsi4>
    191a:	07 fc       	sbrc	r0, 7
    191c:	03 d0       	rcall	.+6      	; 0x1924 <__divmodsi4_neg2>
    191e:	4e f4       	brtc	.+18     	; 0x1932 <__divmodsi4_exit>
    1920:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__negsi2>

00001924 <__divmodsi4_neg2>:
    1924:	50 95       	com	r21
    1926:	40 95       	com	r20
    1928:	30 95       	com	r19
    192a:	21 95       	neg	r18
    192c:	3f 4f       	sbci	r19, 0xFF	; 255
    192e:	4f 4f       	sbci	r20, 0xFF	; 255
    1930:	5f 4f       	sbci	r21, 0xFF	; 255

00001932 <__divmodsi4_exit>:
    1932:	08 95       	ret

00001934 <__negsi2>:
    1934:	90 95       	com	r25
    1936:	80 95       	com	r24
    1938:	70 95       	com	r23
    193a:	61 95       	neg	r22
    193c:	7f 4f       	sbci	r23, 0xFF	; 255
    193e:	8f 4f       	sbci	r24, 0xFF	; 255
    1940:	9f 4f       	sbci	r25, 0xFF	; 255
    1942:	08 95       	ret

00001944 <__umulhisi3>:
    1944:	a2 9f       	mul	r26, r18
    1946:	b0 01       	movw	r22, r0
    1948:	b3 9f       	mul	r27, r19
    194a:	c0 01       	movw	r24, r0
    194c:	a3 9f       	mul	r26, r19
    194e:	70 0d       	add	r23, r0
    1950:	81 1d       	adc	r24, r1
    1952:	11 24       	eor	r1, r1
    1954:	91 1d       	adc	r25, r1
    1956:	b2 9f       	mul	r27, r18
    1958:	70 0d       	add	r23, r0
    195a:	81 1d       	adc	r24, r1
    195c:	11 24       	eor	r1, r1
    195e:	91 1d       	adc	r25, r1
    1960:	08 95       	ret

00001962 <__muluhisi3>:
    1962:	0e 94 a2 0c 	call	0x1944	; 0x1944 <__umulhisi3>
    1966:	a5 9f       	mul	r26, r21
    1968:	90 0d       	add	r25, r0
    196a:	b4 9f       	mul	r27, r20
    196c:	90 0d       	add	r25, r0
    196e:	a4 9f       	mul	r26, r20
    1970:	80 0d       	add	r24, r0
    1972:	91 1d       	adc	r25, r1
    1974:	11 24       	eor	r1, r1
    1976:	08 95       	ret

00001978 <_exit>:
    1978:	f8 94       	cli

0000197a <__stop_program>:
    197a:	ff cf       	rjmp	.-2      	; 0x197a <__stop_program>
