
bin/Debug/project1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  000011bc  00001250  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001194  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  00001194  00001194  00001228  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000009a  00800180  00800180  000012d0  2**0
                  ALLOC
  4 .stab         00001380  00000000  00000000  000012d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000ab3  00000000  00000000  00002650  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  00003103  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003114  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00003154  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  00003748  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  00003cea  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  00003d04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 0b 01 	jmp	0x216	; 0x216 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__vector_18>
      4c:	0c 94 9b 07 	jmp	0xf36	; 0xf36 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec eb       	ldi	r30, 0xBC	; 188
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 38       	cpi	r26, 0x80	; 128
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a0 e8       	ldi	r26, 0x80	; 128
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	aa 31       	cpi	r26, 0x1A	; 26
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 fd 01 	call	0x3fa	; 0x3fa <main>
      9e:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
 *
 * Changes:
 *     TCCR0A, TCCR0B, TIMSK0, OCR0A
 *
 */
static void init() {
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    TCCR0A = (COM | WGMA);
      ae:	84 e4       	ldi	r24, 0x44	; 68
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	fc 01       	movw	r30, r24
      b6:	20 83       	st	Z, r18
    TCCR0B = (WGMB | CS);
      b8:	85 e4       	ldi	r24, 0x45	; 69
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	23 e0       	ldi	r18, 0x03	; 3
      be:	fc 01       	movw	r30, r24
      c0:	20 83       	st	Z, r18
    TIMSK0 = ENABLE_TIMER_INTERRUPT;
      c2:	8e e6       	ldi	r24, 0x6E	; 110
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	22 e0       	ldi	r18, 0x02	; 2
      c8:	fc 01       	movw	r30, r24
      ca:	20 83       	st	Z, r18
    OCR0A = TOP;
      cc:	87 e4       	ldi	r24, 0x47	; 71
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	29 ef       	ldi	r18, 0xF9	; 249
      d2:	fc 01       	movw	r30, r24
      d4:	20 83       	st	Z, r18

    count[0] = 0;
      d6:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <__data_end+0x1>
      da:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <__data_end>
    count[1] = 0;
      de:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <__data_end+0x3>
      e2:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <__data_end+0x2>
    limit[0] = 0;
      e6:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <limit+0x1>
      ea:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <limit>
    limit[1] = 0;
      ee:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <limit+0x3>
      f2:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <limit+0x2>

    initialized = 1;
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <initialized>
}
      fc:	00 00       	nop
      fe:	df 91       	pop	r29
     100:	cf 91       	pop	r28
     102:	08 95       	ret

00000104 <delay_get>:
 *
 * Changes:
 *     Nothing
 *
 */
unsigned delay_get(unsigned num) {
     104:	cf 93       	push	r28
     106:	df 93       	push	r29
     108:	00 d0       	rcall	.+0      	; 0x10a <delay_get+0x6>
     10a:	00 d0       	rcall	.+0      	; 0x10c <delay_get+0x8>
     10c:	1f 92       	push	r1
     10e:	cd b7       	in	r28, 0x3d	; 61
     110:	de b7       	in	r29, 0x3e	; 62
     112:	9d 83       	std	Y+5, r25	; 0x05
     114:	8c 83       	std	Y+4, r24	; 0x04

    /* get global interrupt enable bit state */
    unsigned char sreg_state = SREG;
     116:	8f e5       	ldi	r24, 0x5F	; 95
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	fc 01       	movw	r30, r24
     11c:	80 81       	ld	r24, Z
     11e:	89 83       	std	Y+1, r24	; 0x01

    /* disable interrupts */
    __builtin_avr_cli();
     120:	f8 94       	cli

    /* get the count[n] value */
    unsigned int value = count[num];
     122:	8c 81       	ldd	r24, Y+4	; 0x04
     124:	9d 81       	ldd	r25, Y+5	; 0x05
     126:	88 0f       	add	r24, r24
     128:	99 1f       	adc	r25, r25
     12a:	80 58       	subi	r24, 0x80	; 128
     12c:	9e 4f       	sbci	r25, 0xFE	; 254
     12e:	fc 01       	movw	r30, r24
     130:	80 81       	ld	r24, Z
     132:	91 81       	ldd	r25, Z+1	; 0x01
     134:	9b 83       	std	Y+3, r25	; 0x03
     136:	8a 83       	std	Y+2, r24	; 0x02

    /* restore global interrupt state */
    SREG = sreg_state;
     138:	8f e5       	ldi	r24, 0x5F	; 95
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	29 81       	ldd	r18, Y+1	; 0x01
     13e:	fc 01       	movw	r30, r24
     140:	20 83       	st	Z, r18

    /* return the count value */
    return value;
     142:	8a 81       	ldd	r24, Y+2	; 0x02
     144:	9b 81       	ldd	r25, Y+3	; 0x03

}
     146:	0f 90       	pop	r0
     148:	0f 90       	pop	r0
     14a:	0f 90       	pop	r0
     14c:	0f 90       	pop	r0
     14e:	0f 90       	pop	r0
     150:	df 91       	pop	r29
     152:	cf 91       	pop	r28
     154:	08 95       	ret

00000156 <delay_set>:
 *
 * Changes:
 *     count[num], limit[num]
 *
 */
void delay_set(unsigned int num, unsigned int time){
     156:	cf 93       	push	r28
     158:	df 93       	push	r29
     15a:	00 d0       	rcall	.+0      	; 0x15c <delay_set+0x6>
     15c:	00 d0       	rcall	.+0      	; 0x15e <delay_set+0x8>
     15e:	1f 92       	push	r1
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
     164:	9b 83       	std	Y+3, r25	; 0x03
     166:	8a 83       	std	Y+2, r24	; 0x02
     168:	7d 83       	std	Y+5, r23	; 0x05
     16a:	6c 83       	std	Y+4, r22	; 0x04

    if (initialized != 1) {
     16c:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <initialized>
     170:	81 30       	cpi	r24, 0x01	; 1
     172:	11 f0       	breq	.+4      	; 0x178 <delay_set+0x22>
        init();
     174:	0e 94 53 00 	call	0xa6	; 0xa6 <init>
    }

    /* get global interrupt enable bit state */
    unsigned char sreg_state = SREG;
     178:	8f e5       	ldi	r24, 0x5F	; 95
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	fc 01       	movw	r30, r24
     17e:	80 81       	ld	r24, Z
     180:	89 83       	std	Y+1, r24	; 0x01

    /* disable interrupts */
    __builtin_avr_cli();
     182:	f8 94       	cli

    /* set the limit for delay[n] and clear the count for delay[n] */
    limit[num] = time;
     184:	8a 81       	ldd	r24, Y+2	; 0x02
     186:	9b 81       	ldd	r25, Y+3	; 0x03
     188:	88 0f       	add	r24, r24
     18a:	99 1f       	adc	r25, r25
     18c:	8c 57       	subi	r24, 0x7C	; 124
     18e:	9e 4f       	sbci	r25, 0xFE	; 254
     190:	2c 81       	ldd	r18, Y+4	; 0x04
     192:	3d 81       	ldd	r19, Y+5	; 0x05
     194:	fc 01       	movw	r30, r24
     196:	31 83       	std	Z+1, r19	; 0x01
     198:	20 83       	st	Z, r18
    count[num] = 0;
     19a:	8a 81       	ldd	r24, Y+2	; 0x02
     19c:	9b 81       	ldd	r25, Y+3	; 0x03
     19e:	88 0f       	add	r24, r24
     1a0:	99 1f       	adc	r25, r25
     1a2:	80 58       	subi	r24, 0x80	; 128
     1a4:	9e 4f       	sbci	r25, 0xFE	; 254
     1a6:	fc 01       	movw	r30, r24
     1a8:	11 82       	std	Z+1, r1	; 0x01
     1aa:	10 82       	st	Z, r1

    /* restore global interrupt state */
    SREG = sreg_state;
     1ac:	8f e5       	ldi	r24, 0x5F	; 95
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	29 81       	ldd	r18, Y+1	; 0x01
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18

}
     1b6:	00 00       	nop
     1b8:	0f 90       	pop	r0
     1ba:	0f 90       	pop	r0
     1bc:	0f 90       	pop	r0
     1be:	0f 90       	pop	r0
     1c0:	0f 90       	pop	r0
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	08 95       	ret

000001c8 <delay_isdone>:
 *
 * Changes:
 *     Nothing
 *
 */
unsigned char delay_isdone(unsigned int num) {
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	00 d0       	rcall	.+0      	; 0x1ce <delay_isdone+0x6>
     1ce:	1f 92       	push	r1
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62
     1d4:	9b 83       	std	Y+3, r25	; 0x03
     1d6:	8a 83       	std	Y+2, r24	; 0x02

    unsigned char value = 0;
     1d8:	19 82       	std	Y+1, r1	; 0x01

    if (count[num] == limit[num]) {
     1da:	8a 81       	ldd	r24, Y+2	; 0x02
     1dc:	9b 81       	ldd	r25, Y+3	; 0x03
     1de:	88 0f       	add	r24, r24
     1e0:	99 1f       	adc	r25, r25
     1e2:	80 58       	subi	r24, 0x80	; 128
     1e4:	9e 4f       	sbci	r25, 0xFE	; 254
     1e6:	fc 01       	movw	r30, r24
     1e8:	20 81       	ld	r18, Z
     1ea:	31 81       	ldd	r19, Z+1	; 0x01
     1ec:	8a 81       	ldd	r24, Y+2	; 0x02
     1ee:	9b 81       	ldd	r25, Y+3	; 0x03
     1f0:	88 0f       	add	r24, r24
     1f2:	99 1f       	adc	r25, r25
     1f4:	8c 57       	subi	r24, 0x7C	; 124
     1f6:	9e 4f       	sbci	r25, 0xFE	; 254
     1f8:	fc 01       	movw	r30, r24
     1fa:	80 81       	ld	r24, Z
     1fc:	91 81       	ldd	r25, Z+1	; 0x01
     1fe:	28 17       	cp	r18, r24
     200:	39 07       	cpc	r19, r25
     202:	11 f4       	brne	.+4      	; 0x208 <delay_isdone+0x40>
            value = 1;
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	89 83       	std	Y+1, r24	; 0x01
    }

    return value;
     208:	89 81       	ldd	r24, Y+1	; 0x01

}
     20a:	0f 90       	pop	r0
     20c:	0f 90       	pop	r0
     20e:	0f 90       	pop	r0
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	08 95       	ret

00000216 <__vector_14>:
 * Changes:
 *     count[0], count[1]
 *
 */
void __vector_14(void) __attribute__ ((signal,used, externally_visible));
void __vector_14(void) {
     216:	1f 92       	push	r1
     218:	0f 92       	push	r0
     21a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     21e:	0f 92       	push	r0
     220:	11 24       	eor	r1, r1
     222:	8f 93       	push	r24
     224:	9f 93       	push	r25
     226:	cf 93       	push	r28
     228:	df 93       	push	r29
     22a:	cd b7       	in	r28, 0x3d	; 61
     22c:	de b7       	in	r29, 0x3e	; 62

    count[0]++;
     22e:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <__data_end>
     232:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <__data_end+0x1>
     236:	01 96       	adiw	r24, 0x01	; 1
     238:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <__data_end+0x1>
     23c:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__data_end>
    count[1]++;
     240:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <__data_end+0x2>
     244:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <__data_end+0x3>
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <__data_end+0x3>
     24e:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <__data_end+0x2>

 }
     252:	00 00       	nop
     254:	df 91       	pop	r29
     256:	cf 91       	pop	r28
     258:	9f 91       	pop	r25
     25a:	8f 91       	pop	r24
     25c:	0f 90       	pop	r0
     25e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     262:	0f 90       	pop	r0
     264:	1f 90       	pop	r1
     266:	18 95       	reti

00000268 <led_set_blink>:
 *
 * Changes:
 *     blink_msg, blink_pos, blink_state
 *
 */
void led_set_blink(char* msg) {
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	00 d0       	rcall	.+0      	; 0x26e <led_set_blink+0x6>
     26e:	cd b7       	in	r28, 0x3d	; 61
     270:	de b7       	in	r29, 0x3e	; 62
     272:	9a 83       	std	Y+2, r25	; 0x02
     274:	89 83       	std	Y+1, r24	; 0x01

    /* blink_msg = msg */
    blink_msg = msg;
     276:	89 81       	ldd	r24, Y+1	; 0x01
     278:	9a 81       	ldd	r25, Y+2	; 0x02
     27a:	90 93 8a 01 	sts	0x018A, r25	; 0x80018a <blink_msg+0x1>
     27e:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <blink_msg>

    /* blink_pos = 0 */
    blink_pos = 0;
     282:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <blink_pos+0x1>
     286:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <blink_pos>

    /* blink_state = PHASE1 */
    blink_state = PHASE1;
     28a:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <blink_state>

    /* delay_set(0,0) */
    delay_set(0,0);
     28e:	60 e0       	ldi	r22, 0x00	; 0
     290:	70 e0       	ldi	r23, 0x00	; 0
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	90 e0       	ldi	r25, 0x00	; 0
     296:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>

    /* led_off */
    led_off();
     29a:	0e 94 27 03 	call	0x64e	; 0x64e <led_off>

}/*
     29e:	00 00       	nop
     2a0:	0f 90       	pop	r0
     2a2:	0f 90       	pop	r0
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	08 95       	ret

000002aa <led_update>:
 *
 * Changes:
 *     blink_state
 *
 */
void led_update() {
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62

    if (*blink_msg == 0 || !delay_isdone(0)) {
     2b2:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <blink_msg>
     2b6:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <blink_msg+0x1>
     2ba:	fc 01       	movw	r30, r24
     2bc:	80 81       	ld	r24, Z
     2be:	88 23       	and	r24, r24
     2c0:	09 f4       	brne	.+2      	; 0x2c4 <led_update+0x1a>
     2c2:	97 c0       	rjmp	.+302    	; 0x3f2 <led_update+0x148>
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <delay_isdone>
     2cc:	89 2b       	or	r24, r25
     2ce:	09 f4       	brne	.+2      	; 0x2d2 <led_update+0x28>
     2d0:	90 c0       	rjmp	.+288    	; 0x3f2 <led_update+0x148>
        return;
    }

    switch (blink_state){
     2d2:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <blink_state>
     2d6:	88 2f       	mov	r24, r24
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	00 97       	sbiw	r24, 0x00	; 0
     2dc:	21 f0       	breq	.+8      	; 0x2e6 <led_update+0x3c>
     2de:	01 97       	sbiw	r24, 0x01	; 1
     2e0:	09 f4       	brne	.+2      	; 0x2e4 <led_update+0x3a>
     2e2:	5f c0       	rjmp	.+190    	; 0x3a2 <led_update+0xf8>
     2e4:	87 c0       	rjmp	.+270    	; 0x3f4 <led_update+0x14a>

        case PHASE1: {
            switch (blink_msg[blink_pos]){
     2e6:	20 91 89 01 	lds	r18, 0x0189	; 0x800189 <blink_msg>
     2ea:	30 91 8a 01 	lds	r19, 0x018A	; 0x80018a <blink_msg+0x1>
     2ee:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <blink_pos>
     2f2:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <blink_pos+0x1>
     2f6:	82 0f       	add	r24, r18
     2f8:	93 1f       	adc	r25, r19
     2fa:	fc 01       	movw	r30, r24
     2fc:	80 81       	ld	r24, Z
     2fe:	08 2e       	mov	r0, r24
     300:	00 0c       	add	r0, r0
     302:	99 0b       	sbc	r25, r25
     304:	8d 32       	cpi	r24, 0x2D	; 45
     306:	91 05       	cpc	r25, r1
     308:	61 f1       	breq	.+88     	; 0x362 <led_update+0xb8>
     30a:	8e 32       	cpi	r24, 0x2E	; 46
     30c:	91 05       	cpc	r25, r1
     30e:	a9 f1       	breq	.+106    	; 0x37a <led_update+0xd0>
     310:	80 97       	sbiw	r24, 0x20	; 32
     312:	09 f0       	breq	.+2      	; 0x316 <led_update+0x6c>
     314:	3e c0       	rjmp	.+124    	; 0x392 <led_update+0xe8>

                case ' ': {
                    if ( blink_msg[blink_pos+1] == 0) {
     316:	20 91 89 01 	lds	r18, 0x0189	; 0x800189 <blink_msg>
     31a:	30 91 8a 01 	lds	r19, 0x018A	; 0x80018a <blink_msg+0x1>
     31e:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <blink_pos>
     322:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <blink_pos+0x1>
     326:	01 96       	adiw	r24, 0x01	; 1
     328:	82 0f       	add	r24, r18
     32a:	93 1f       	adc	r25, r19
     32c:	fc 01       	movw	r30, r24
     32e:	80 81       	ld	r24, Z
     330:	88 23       	and	r24, r24
     332:	51 f4       	brne	.+20     	; 0x348 <led_update+0x9e>
                        blink_pos++;
     334:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <blink_pos>
     338:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <blink_pos+0x1>
     33c:	01 96       	adiw	r24, 0x01	; 1
     33e:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <blink_pos+0x1>
     342:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <blink_pos>
     346:	04 c0       	rjmp	.+8      	; 0x350 <led_update+0xa6>
                    }
                    else {
                        blink_pos = 0;
     348:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <blink_pos+0x1>
     34c:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <blink_pos>
                    }
                    led_off();
     350:	0e 94 27 03 	call	0x64e	; 0x64e <led_off>
                    delay_set(0, BLANK_SPACE);
     354:	68 ee       	ldi	r22, 0xE8	; 232
     356:	73 e0       	ldi	r23, 0x03	; 3
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
                }
                break;
     360:	20 c0       	rjmp	.+64     	; 0x3a2 <led_update+0xf8>

                case '-': {
                    led_on();
     362:	0e 94 25 03 	call	0x64a	; 0x64a <led_on>
                    delay_set(0, DASH);
     366:	6e ee       	ldi	r22, 0xEE	; 238
     368:	72 e0       	ldi	r23, 0x02	; 2
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
                    blink_state = PHASE2;
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <blink_state>
                }
                break;
     378:	14 c0       	rjmp	.+40     	; 0x3a2 <led_update+0xf8>

                case '.': {
                    led_on();
     37a:	0e 94 25 03 	call	0x64a	; 0x64a <led_on>
                    delay_set(0, DOT);
     37e:	6a ef       	ldi	r22, 0xFA	; 250
     380:	70 e0       	ldi	r23, 0x00	; 0
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
                    blink_state = PHASE2;
     38a:	81 e0       	ldi	r24, 0x01	; 1
     38c:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <blink_state>
                }
                break;
     390:	08 c0       	rjmp	.+16     	; 0x3a2 <led_update+0xf8>

                default: {
                    led_off();
     392:	0e 94 27 03 	call	0x64e	; 0x64e <led_off>
                    delay_set(0,OTHER);
     396:	60 e0       	ldi	r22, 0x00	; 0
     398:	70 e0       	ldi	r23, 0x00	; 0
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
                }
            }
        }
        case PHASE2: {

            if (blink_msg[blink_pos+1] !=0){
     3a2:	20 91 89 01 	lds	r18, 0x0189	; 0x800189 <blink_msg>
     3a6:	30 91 8a 01 	lds	r19, 0x018A	; 0x80018a <blink_msg+0x1>
     3aa:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <blink_pos>
     3ae:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <blink_pos+0x1>
     3b2:	01 96       	adiw	r24, 0x01	; 1
     3b4:	82 0f       	add	r24, r18
     3b6:	93 1f       	adc	r25, r19
     3b8:	fc 01       	movw	r30, r24
     3ba:	80 81       	ld	r24, Z
     3bc:	88 23       	and	r24, r24
     3be:	51 f0       	breq	.+20     	; 0x3d4 <led_update+0x12a>
                blink_pos++;
     3c0:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <blink_pos>
     3c4:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <blink_pos+0x1>
     3c8:	01 96       	adiw	r24, 0x01	; 1
     3ca:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <blink_pos+0x1>
     3ce:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <blink_pos>
     3d2:	04 c0       	rjmp	.+8      	; 0x3dc <led_update+0x132>
            }
            else {
                blink_pos = 0;
     3d4:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <blink_pos+0x1>
     3d8:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <blink_pos>
            }
            led_off();
     3dc:	0e 94 27 03 	call	0x64e	; 0x64e <led_off>
            delay_set(0,PHASE2_DELAY);
     3e0:	64 e6       	ldi	r22, 0x64	; 100
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
            blink_state = PHASE1;
     3ec:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <blink_state>
     3f0:	01 c0       	rjmp	.+2      	; 0x3f4 <led_update+0x14a>
 *
 */
void led_update() {

    if (*blink_msg == 0 || !delay_isdone(0)) {
        return;
     3f2:	00 00       	nop
            led_off();
            delay_set(0,PHASE2_DELAY);
            blink_state = PHASE1;
        }
    }
}
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <main>:
#include "led.h"
#include "rtc.h"
#include "timer1.h"
#include "uart.h"

int main(void){
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	28 97       	sbiw	r28, 0x08	; 8
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	de bf       	out	0x3e, r29	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	cd bf       	out	0x3d, r28	; 61

    /* Hardware init */
    uart_init();
     40e:	0e 94 8d 06 	call	0xd1a	; 0xd1a <uart_init>
    led_init();
     412:	0e 94 22 03 	call	0x644	; 0x644 <led_init>
    rtc_init();
     416:	0e 94 2e 03 	call	0x65c	; 0x65c <rtc_init>

    led_set_blink("--- -.-");
     41a:	84 e1       	ldi	r24, 0x14	; 20
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	0e 94 34 01 	call	0x268	; 0x268 <led_set_blink>
    rtc_set_by_datestr("01/01/2019 00:00:00");
     422:	8c e1       	ldi	r24, 0x1C	; 28
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	0e 94 5d 03 	call	0x6ba	; 0x6ba <rtc_set_by_datestr>

    uart_writestr("SER486 Project 1 - Jose Solis Salazar\n\r");
     42a:	80 e3       	ldi	r24, 0x30	; 48
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	0e 94 93 06 	call	0xd26	; 0xd26 <uart_writestr>

     /* get baseline performance */
    signed long c1=0;
     432:	19 82       	std	Y+1, r1	; 0x01
     434:	1a 82       	std	Y+2, r1	; 0x02
     436:	1b 82       	std	Y+3, r1	; 0x03
     438:	1c 82       	std	Y+4, r1	; 0x04
    delay_set(1,100); while (!delay_isdone(1)) { c1++; }
     43a:	64 e6       	ldi	r22, 0x64	; 100
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
     446:	0b c0       	rjmp	.+22     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     448:	89 81       	ldd	r24, Y+1	; 0x01
     44a:	9a 81       	ldd	r25, Y+2	; 0x02
     44c:	ab 81       	ldd	r26, Y+3	; 0x03
     44e:	bc 81       	ldd	r27, Y+4	; 0x04
     450:	01 96       	adiw	r24, 0x01	; 1
     452:	a1 1d       	adc	r26, r1
     454:	b1 1d       	adc	r27, r1
     456:	89 83       	std	Y+1, r24	; 0x01
     458:	9a 83       	std	Y+2, r25	; 0x02
     45a:	ab 83       	std	Y+3, r26	; 0x03
     45c:	bc 83       	std	Y+4, r27	; 0x04
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <delay_isdone>
     466:	89 2b       	or	r24, r25
     468:	79 f3       	breq	.-34     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>

    /* measure performance with led_update */
    signed long c2=0;
     46a:	1d 82       	std	Y+5, r1	; 0x05
     46c:	1e 82       	std	Y+6, r1	; 0x06
     46e:	1f 82       	std	Y+7, r1	; 0x07
     470:	18 86       	std	Y+8, r1	; 0x08
    delay_set(1,100); while (!delay_isdone(1)) { led_update(); c2++; }
     472:	64 e6       	ldi	r22, 0x64	; 100
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
     47e:	0d c0       	rjmp	.+26     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
     480:	0e 94 55 01 	call	0x2aa	; 0x2aa <led_update>
     484:	8d 81       	ldd	r24, Y+5	; 0x05
     486:	9e 81       	ldd	r25, Y+6	; 0x06
     488:	af 81       	ldd	r26, Y+7	; 0x07
     48a:	b8 85       	ldd	r27, Y+8	; 0x08
     48c:	01 96       	adiw	r24, 0x01	; 1
     48e:	a1 1d       	adc	r26, r1
     490:	b1 1d       	adc	r27, r1
     492:	8d 83       	std	Y+5, r24	; 0x05
     494:	9e 83       	std	Y+6, r25	; 0x06
     496:	af 83       	std	Y+7, r26	; 0x07
     498:	b8 87       	std	Y+8, r27	; 0x08
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <delay_isdone>
     4a2:	89 2b       	or	r24, r25
     4a4:	69 f3       	breq	.-38     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>

    /* display the results */
    uart_writedec32(c1); uart_writestr(" ");
     4a6:	89 81       	ldd	r24, Y+1	; 0x01
     4a8:	9a 81       	ldd	r25, Y+2	; 0x02
     4aa:	ab 81       	ldd	r26, Y+3	; 0x03
     4ac:	bc 81       	ldd	r27, Y+4	; 0x04
     4ae:	bc 01       	movw	r22, r24
     4b0:	cd 01       	movw	r24, r26
     4b2:	0e 94 c1 06 	call	0xd82	; 0xd82 <uart_writedec32>
     4b6:	88 e5       	ldi	r24, 0x58	; 88
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	0e 94 93 06 	call	0xd26	; 0xd26 <uart_writestr>
    uart_writedec32(c2); uart_writestr("\r\n");
     4be:	8d 81       	ldd	r24, Y+5	; 0x05
     4c0:	9e 81       	ldd	r25, Y+6	; 0x06
     4c2:	af 81       	ldd	r26, Y+7	; 0x07
     4c4:	b8 85       	ldd	r27, Y+8	; 0x08
     4c6:	bc 01       	movw	r22, r24
     4c8:	cd 01       	movw	r24, r26
     4ca:	0e 94 c1 06 	call	0xd82	; 0xd82 <uart_writedec32>
     4ce:	8a e5       	ldi	r24, 0x5A	; 90
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	0e 94 93 06 	call	0xd26	; 0xd26 <uart_writestr>

    while(1){

        led_update();
     4d6:	0e 94 55 01 	call	0x2aa	; 0x2aa <led_update>

        delay_set(1, 500);
     4da:	64 ef       	ldi	r22, 0xF4	; 244
     4dc:	71 e0       	ldi	r23, 0x01	; 1
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 ab 00 	call	0x156	; 0x156 <delay_set>
        while(!delay_isdone(1)){}
     4e6:	00 00       	nop
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <delay_isdone>
     4f0:	89 2b       	or	r24, r25
     4f2:	d1 f3       	breq	.-12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
        uart_writestr(rtc_get_date_string());
     4f4:	0e 94 0d 06 	call	0xc1a	; 0xc1a <rtc_get_date_string>
     4f8:	0e 94 93 06 	call	0xd26	; 0xd26 <uart_writestr>
        uart_writestr("\r");
     4fc:	8d e5       	ldi	r24, 0x5D	; 93
     4fe:	91 e0       	ldi	r25, 0x01	; 1
     500:	0e 94 93 06 	call	0xd26	; 0xd26 <uart_writestr>
    }
     504:	e8 cf       	rjmp	.-48     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>

00000506 <timer1_init>:
 *
 * Changes:
 *     TCCR0A, TCCR0B, TIMSK0, OCR0A
 *
 */
void timer1_init() {
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
   TCCR1A = (COM | WGMA);
     50e:	80 e8       	ldi	r24, 0x80	; 128
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	fc 01       	movw	r30, r24
     514:	10 82       	st	Z, r1
   TCCR1B = (INPUT_CAPTURE | WGMB | CS);
     516:	81 e8       	ldi	r24, 0x81	; 129
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	2d e0       	ldi	r18, 0x0D	; 13
     51c:	fc 01       	movw	r30, r24
     51e:	20 83       	st	Z, r18
   TIMSK1 = ENABLE_TIMER_INTERRUPT;
     520:	8f e6       	ldi	r24, 0x6F	; 111
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	22 e0       	ldi	r18, 0x02	; 2
     526:	fc 01       	movw	r30, r24
     528:	20 83       	st	Z, r18

   OCR1AH = TOPH;
     52a:	89 e8       	ldi	r24, 0x89	; 137
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	2d e3       	ldi	r18, 0x3D	; 61
     530:	fc 01       	movw	r30, r24
     532:	20 83       	st	Z, r18
   OCR1AL = TOPL;
     534:	88 e8       	ldi	r24, 0x88	; 136
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	28 e0       	ldi	r18, 0x08	; 8
     53a:	fc 01       	movw	r30, r24
     53c:	20 83       	st	Z, r18

   count = 0;
     53e:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <count>
     542:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <count+0x1>
     546:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <count+0x2>
     54a:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <count+0x3>
}
     54e:	00 00       	nop
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	08 95       	ret

00000556 <timer1_get>:
 *
 * Changes:
 *     Nothing
 *
 */
unsigned long timer1_get() {
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	00 d0       	rcall	.+0      	; 0x55c <timer1_get+0x6>
     55c:	00 d0       	rcall	.+0      	; 0x55e <timer1_get+0x8>
     55e:	1f 92       	push	r1
     560:	cd b7       	in	r28, 0x3d	; 61
     562:	de b7       	in	r29, 0x3e	; 62

    /* get global interrupt enable bit state */
    unsigned char sreg_state = SREG;
     564:	8f e5       	ldi	r24, 0x5F	; 95
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	fc 01       	movw	r30, r24
     56a:	80 81       	ld	r24, Z
     56c:	89 83       	std	Y+1, r24	; 0x01

    /* disable interrupts */
    __builtin_avr_cli();
     56e:	f8 94       	cli

    /* get the count value */
    unsigned long value = count;
     570:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <count>
     574:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <count+0x1>
     578:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <count+0x2>
     57c:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <count+0x3>
     580:	8a 83       	std	Y+2, r24	; 0x02
     582:	9b 83       	std	Y+3, r25	; 0x03
     584:	ac 83       	std	Y+4, r26	; 0x04
     586:	bd 83       	std	Y+5, r27	; 0x05

    /* restore the global interrupt state */
    SREG = sreg_state;
     588:	8f e5       	ldi	r24, 0x5F	; 95
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	29 81       	ldd	r18, Y+1	; 0x01
     58e:	fc 01       	movw	r30, r24
     590:	20 83       	st	Z, r18

    /* return the count value */
    return value;
     592:	8a 81       	ldd	r24, Y+2	; 0x02
     594:	9b 81       	ldd	r25, Y+3	; 0x03
     596:	ac 81       	ldd	r26, Y+4	; 0x04
     598:	bd 81       	ldd	r27, Y+5	; 0x05

}
     59a:	bc 01       	movw	r22, r24
     59c:	cd 01       	movw	r24, r26
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
     5a4:	0f 90       	pop	r0
     5a6:	0f 90       	pop	r0
     5a8:	df 91       	pop	r29
     5aa:	cf 91       	pop	r28
     5ac:	08 95       	ret

000005ae <timer1_clear>:
 *
 * Changes:
 *     count
 *
 */
void timer1_clear() {
     5ae:	cf 93       	push	r28
     5b0:	df 93       	push	r29
     5b2:	1f 92       	push	r1
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62

    /* get global interrupt enable state */
    unsigned char sreg_state = SREG;
     5b8:	8f e5       	ldi	r24, 0x5F	; 95
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	fc 01       	movw	r30, r24
     5be:	80 81       	ld	r24, Z
     5c0:	89 83       	std	Y+1, r24	; 0x01

    /* disable interrupts */
    __builtin_avr_cli();
     5c2:	f8 94       	cli

    /* count = 0 */
    count = 0;
     5c4:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <count>
     5c8:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <count+0x1>
     5cc:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <count+0x2>
     5d0:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <count+0x3>

    /* restore global interrupt state */
    SREG = sreg_state;
     5d4:	8f e5       	ldi	r24, 0x5F	; 95
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	29 81       	ldd	r18, Y+1	; 0x01
     5da:	fc 01       	movw	r30, r24
     5dc:	20 83       	st	Z, r18

}
     5de:	00 00       	nop
     5e0:	0f 90       	pop	r0
     5e2:	df 91       	pop	r29
     5e4:	cf 91       	pop	r28
     5e6:	08 95       	ret

000005e8 <__vector_11>:
 * Changes:
 *     count
 *
 */
void __vector_11(void) __attribute__ ((signal,used, externally_visible));
void __vector_11(void) {
     5e8:	1f 92       	push	r1
     5ea:	0f 92       	push	r0
     5ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5f0:	0f 92       	push	r0
     5f2:	11 24       	eor	r1, r1
     5f4:	8f 93       	push	r24
     5f6:	9f 93       	push	r25
     5f8:	af 93       	push	r26
     5fa:	bf 93       	push	r27
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
   count++;
     604:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <count>
     608:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <count+0x1>
     60c:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <count+0x2>
     610:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <count+0x3>
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	a1 1d       	adc	r26, r1
     618:	b1 1d       	adc	r27, r1
     61a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <count>
     61e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <count+0x1>
     622:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <count+0x2>
     626:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <count+0x3>
}
     62a:	00 00       	nop
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	bf 91       	pop	r27
     632:	af 91       	pop	r26
     634:	9f 91       	pop	r25
     636:	8f 91       	pop	r24
     638:	0f 90       	pop	r0
     63a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     63e:	0f 90       	pop	r0
     640:	1f 90       	pop	r1
     642:	18 95       	reti

00000644 <led_init>:
     644:	21 9a       	sbi	0x04, 1	; 4
     646:	29 98       	cbi	0x05, 1	; 5
     648:	08 95       	ret

0000064a <led_on>:
     64a:	29 9a       	sbi	0x05, 1	; 5
     64c:	08 95       	ret

0000064e <led_off>:
     64e:	29 98       	cbi	0x05, 1	; 5
     650:	08 95       	ret

00000652 <led_is_on>:
     652:	85 b1       	in	r24, 0x05	; 5
     654:	86 95       	lsr	r24
     656:	81 70       	andi	r24, 0x01	; 1
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	08 95       	ret

0000065c <rtc_init>:
     65c:	0c 94 83 02 	jmp	0x506	; 0x506 <timer1_init>

00000660 <rtc_get_date>:
     660:	0f 93       	push	r16
     662:	1f 93       	push	r17
     664:	0e 94 ab 02 	call	0x556	; 0x556 <timer1_get>
     668:	00 91 96 01 	lds	r16, 0x0196	; 0x800196 <rtc_base>
     66c:	10 91 97 01 	lds	r17, 0x0197	; 0x800197 <rtc_base+0x1>
     670:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <rtc_base+0x2>
     674:	30 91 99 01 	lds	r19, 0x0199	; 0x800199 <rtc_base+0x3>
     678:	60 0f       	add	r22, r16
     67a:	71 1f       	adc	r23, r17
     67c:	82 1f       	adc	r24, r18
     67e:	93 1f       	adc	r25, r19
     680:	1f 91       	pop	r17
     682:	0f 91       	pop	r16
     684:	08 95       	ret

00000686 <is_leapyear>:
     686:	9c 01       	movw	r18, r24
     688:	60 e9       	ldi	r22, 0x90	; 144
     68a:	71 e0       	ldi	r23, 0x01	; 1
     68c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     690:	89 2b       	or	r24, r25
     692:	79 f0       	breq	.+30     	; 0x6b2 <is_leapyear+0x2c>
     694:	c9 01       	movw	r24, r18
     696:	83 70       	andi	r24, 0x03	; 3
     698:	99 27       	eor	r25, r25
     69a:	89 2b       	or	r24, r25
     69c:	61 f4       	brne	.+24     	; 0x6b6 <is_leapyear+0x30>
     69e:	c9 01       	movw	r24, r18
     6a0:	64 e6       	ldi	r22, 0x64	; 100
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     6a8:	9c 01       	movw	r18, r24
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	23 2b       	or	r18, r19
     6ae:	21 f4       	brne	.+8      	; 0x6b8 <is_leapyear+0x32>
     6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <is_leapyear+0x30>
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	08 95       	ret
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	08 95       	ret

000006ba <rtc_set_by_datestr>:
     6ba:	2f 92       	push	r2
     6bc:	3f 92       	push	r3
     6be:	4f 92       	push	r4
     6c0:	5f 92       	push	r5
     6c2:	6f 92       	push	r6
     6c4:	7f 92       	push	r7
     6c6:	8f 92       	push	r8
     6c8:	9f 92       	push	r9
     6ca:	af 92       	push	r10
     6cc:	bf 92       	push	r11
     6ce:	cf 92       	push	r12
     6d0:	df 92       	push	r13
     6d2:	ef 92       	push	r14
     6d4:	ff 92       	push	r15
     6d6:	0f 93       	push	r16
     6d8:	1f 93       	push	r17
     6da:	cf 93       	push	r28
     6dc:	df 93       	push	r29
     6de:	cd b7       	in	r28, 0x3d	; 61
     6e0:	de b7       	in	r29, 0x3e	; 62
     6e2:	67 97       	sbiw	r28, 0x17	; 23
     6e4:	0f b6       	in	r0, 0x3f	; 63
     6e6:	f8 94       	cli
     6e8:	de bf       	out	0x3e, r29	; 62
     6ea:	0f be       	out	0x3f, r0	; 63
     6ec:	cd bf       	out	0x3d, r28	; 61
     6ee:	2c e0       	ldi	r18, 0x0C	; 12
     6f0:	ef e5       	ldi	r30, 0x5F	; 95
     6f2:	f1 e0       	ldi	r31, 0x01	; 1
     6f4:	ae 01       	movw	r20, r28
     6f6:	4f 5f       	subi	r20, 0xFF	; 255
     6f8:	5f 4f       	sbci	r21, 0xFF	; 255
     6fa:	1a 01       	movw	r2, r20
     6fc:	da 01       	movw	r26, r20
     6fe:	01 90       	ld	r0, Z+
     700:	0d 92       	st	X+, r0
     702:	2a 95       	dec	r18
     704:	e1 f7       	brne	.-8      	; 0x6fe <rtc_set_by_datestr+0x44>
     706:	dc 01       	movw	r26, r24
     708:	2c 91       	ld	r18, X
     70a:	22 0f       	add	r18, r18
     70c:	20 56       	subi	r18, 0x60	; 96
     70e:	32 2f       	mov	r19, r18
     710:	33 0f       	add	r19, r19
     712:	33 0f       	add	r19, r19
     714:	23 0f       	add	r18, r19
     716:	11 96       	adiw	r26, 0x01	; 1
     718:	3c 91       	ld	r19, X
     71a:	11 97       	sbiw	r26, 0x01	; 1
     71c:	31 53       	subi	r19, 0x31	; 49
     71e:	23 0f       	add	r18, r19
     720:	2d 87       	std	Y+13, r18	; 0x0d
     722:	13 96       	adiw	r26, 0x03	; 3
     724:	2c 91       	ld	r18, X
     726:	13 97       	sbiw	r26, 0x03	; 3
     728:	02 2e       	mov	r0, r18
     72a:	00 0c       	add	r0, r0
     72c:	33 0b       	sbc	r19, r19
     72e:	20 53       	subi	r18, 0x30	; 48
     730:	31 09       	sbc	r19, r1
     732:	6a e0       	ldi	r22, 0x0A	; 10
     734:	62 9f       	mul	r22, r18
     736:	a0 01       	movw	r20, r0
     738:	63 9f       	mul	r22, r19
     73a:	50 0d       	add	r21, r0
     73c:	11 24       	eor	r1, r1
     73e:	14 96       	adiw	r26, 0x04	; 4
     740:	cc 90       	ld	r12, X
     742:	0c 2c       	mov	r0, r12
     744:	00 0c       	add	r0, r0
     746:	dd 08       	sbc	r13, r13
     748:	b0 e3       	ldi	r27, 0x30	; 48
     74a:	cb 1a       	sub	r12, r27
     74c:	d1 08       	sbc	r13, r1
     74e:	c4 0e       	add	r12, r20
     750:	d5 1e       	adc	r13, r21
     752:	86 01       	movw	r16, r12
     754:	01 50       	subi	r16, 0x01	; 1
     756:	11 09       	sbc	r17, r1
     758:	fc 01       	movw	r30, r24
     75a:	26 81       	ldd	r18, Z+6	; 0x06
     75c:	02 2e       	mov	r0, r18
     75e:	00 0c       	add	r0, r0
     760:	33 0b       	sbc	r19, r19
     762:	20 53       	subi	r18, 0x30	; 48
     764:	31 09       	sbc	r19, r1
     766:	e8 ee       	ldi	r30, 0xE8	; 232
     768:	f3 e0       	ldi	r31, 0x03	; 3
     76a:	2e 9f       	mul	r18, r30
     76c:	a0 01       	movw	r20, r0
     76e:	2f 9f       	mul	r18, r31
     770:	50 0d       	add	r21, r0
     772:	3e 9f       	mul	r19, r30
     774:	50 0d       	add	r21, r0
     776:	11 24       	eor	r1, r1
     778:	dc 01       	movw	r26, r24
     77a:	17 96       	adiw	r26, 0x07	; 7
     77c:	2c 91       	ld	r18, X
     77e:	17 97       	sbiw	r26, 0x07	; 7
     780:	02 2e       	mov	r0, r18
     782:	00 0c       	add	r0, r0
     784:	33 0b       	sbc	r19, r19
     786:	20 53       	subi	r18, 0x30	; 48
     788:	31 09       	sbc	r19, r1
     78a:	74 e6       	ldi	r23, 0x64	; 100
     78c:	72 9f       	mul	r23, r18
     78e:	70 01       	movw	r14, r0
     790:	73 9f       	mul	r23, r19
     792:	f0 0c       	add	r15, r0
     794:	11 24       	eor	r1, r1
     796:	e4 0e       	add	r14, r20
     798:	f5 1e       	adc	r15, r21
     79a:	18 96       	adiw	r26, 0x08	; 8
     79c:	4c 91       	ld	r20, X
     79e:	18 97       	sbiw	r26, 0x08	; 8
     7a0:	04 2e       	mov	r0, r20
     7a2:	00 0c       	add	r0, r0
     7a4:	55 0b       	sbc	r21, r21
     7a6:	40 53       	subi	r20, 0x30	; 48
     7a8:	51 09       	sbc	r21, r1
     7aa:	64 9f       	mul	r22, r20
     7ac:	90 01       	movw	r18, r0
     7ae:	65 9f       	mul	r22, r21
     7b0:	30 0d       	add	r19, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e2 0e       	add	r14, r18
     7b6:	f3 1e       	adc	r15, r19
     7b8:	19 96       	adiw	r26, 0x09	; 9
     7ba:	2c 91       	ld	r18, X
     7bc:	19 97       	sbiw	r26, 0x09	; 9
     7be:	f7 01       	movw	r30, r14
     7c0:	e2 0f       	add	r30, r18
     7c2:	f1 1d       	adc	r31, r1
     7c4:	27 fd       	sbrc	r18, 7
     7c6:	fa 95       	dec	r31
     7c8:	af 01       	movw	r20, r30
     7ca:	58 50       	subi	r21, 0x08	; 8
     7cc:	7a 01       	movw	r14, r20
     7ce:	1b 96       	adiw	r26, 0x0b	; 11
     7d0:	2c 91       	ld	r18, X
     7d2:	1b 97       	sbiw	r26, 0x0b	; 11
     7d4:	22 0f       	add	r18, r18
     7d6:	20 56       	subi	r18, 0x60	; 96
     7d8:	32 2f       	mov	r19, r18
     7da:	33 0f       	add	r19, r19
     7dc:	33 0f       	add	r19, r19
     7de:	23 0f       	add	r18, r19
     7e0:	1c 96       	adiw	r26, 0x0c	; 12
     7e2:	3c 91       	ld	r19, X
     7e4:	1c 97       	sbiw	r26, 0x0c	; 12
     7e6:	30 53       	subi	r19, 0x30	; 48
     7e8:	23 0f       	add	r18, r19
     7ea:	29 8b       	std	Y+17, r18	; 0x11
     7ec:	1e 96       	adiw	r26, 0x0e	; 14
     7ee:	2c 91       	ld	r18, X
     7f0:	1e 97       	sbiw	r26, 0x0e	; 14
     7f2:	22 0f       	add	r18, r18
     7f4:	20 56       	subi	r18, 0x60	; 96
     7f6:	32 2f       	mov	r19, r18
     7f8:	33 0f       	add	r19, r19
     7fa:	33 0f       	add	r19, r19
     7fc:	23 0f       	add	r18, r19
     7fe:	1f 96       	adiw	r26, 0x0f	; 15
     800:	3c 91       	ld	r19, X
     802:	1f 97       	sbiw	r26, 0x0f	; 15
     804:	30 53       	subi	r19, 0x30	; 48
     806:	23 0f       	add	r18, r19
     808:	2a 8b       	std	Y+18, r18	; 0x12
     80a:	51 96       	adiw	r26, 0x11	; 17
     80c:	2c 91       	ld	r18, X
     80e:	51 97       	sbiw	r26, 0x11	; 17
     810:	22 0f       	add	r18, r18
     812:	20 56       	subi	r18, 0x60	; 96
     814:	32 2f       	mov	r19, r18
     816:	33 0f       	add	r19, r19
     818:	33 0f       	add	r19, r19
     81a:	23 0f       	add	r18, r19
     81c:	52 96       	adiw	r26, 0x12	; 18
     81e:	8c 91       	ld	r24, X
     820:	80 53       	subi	r24, 0x30	; 48
     822:	28 0f       	add	r18, r24
     824:	2b 8b       	std	Y+19, r18	; 0x13
     826:	ca 01       	movw	r24, r20
     828:	0e 94 43 03 	call	0x686	; 0x686 <is_leapyear>
     82c:	88 23       	and	r24, r24
     82e:	21 f0       	breq	.+8      	; 0x838 <rtc_set_by_datestr+0x17e>
     830:	5d 85       	ldd	r21, Y+13	; 0x0d
     832:	52 30       	cpi	r21, 0x02	; 2
     834:	08 f0       	brcs	.+2      	; 0x838 <rtc_set_by_datestr+0x17e>
     836:	86 01       	movw	r16, r12
     838:	c7 01       	movw	r24, r14
     83a:	60 e9       	ldi	r22, 0x90	; 144
     83c:	71 e0       	ldi	r23, 0x01	; 1
     83e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     842:	fc 01       	movw	r30, r24
     844:	db 01       	movw	r26, r22
     846:	20 e8       	ldi	r18, 0x80	; 128
     848:	39 e5       	ldi	r19, 0x59	; 89
     84a:	40 e6       	ldi	r20, 0x60	; 96
     84c:	50 ef       	ldi	r21, 0xF0	; 240
     84e:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     852:	2b 01       	movw	r4, r22
     854:	3c 01       	movw	r6, r24
     856:	cf 01       	movw	r24, r30
     858:	64 e6       	ldi	r22, 0x64	; 100
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     860:	fc 01       	movw	r30, r24
     862:	db 01       	movw	r26, r22
     864:	20 e0       	ldi	r18, 0x00	; 0
     866:	32 ec       	ldi	r19, 0xC2	; 194
     868:	47 e1       	ldi	r20, 0x17	; 23
     86a:	5c eb       	ldi	r21, 0xBC	; 188
     86c:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     870:	4b 01       	movw	r8, r22
     872:	5c 01       	movw	r10, r24
     874:	df 01       	movw	r26, r30
     876:	b6 95       	lsr	r27
     878:	a7 95       	ror	r26
     87a:	b6 95       	lsr	r27
     87c:	a7 95       	ror	r26
     87e:	20 e8       	ldi	r18, 0x80	; 128
     880:	3f e1       	ldi	r19, 0x1F	; 31
     882:	46 e8       	ldi	r20, 0x86	; 134
     884:	57 e0       	ldi	r21, 0x07	; 7
     886:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     88a:	6b 01       	movw	r12, r22
     88c:	7c 01       	movw	r14, r24
     88e:	df 01       	movw	r26, r30
     890:	a3 70       	andi	r26, 0x03	; 3
     892:	bb 27       	eor	r27, r27
     894:	20 e8       	ldi	r18, 0x80	; 128
     896:	33 e3       	ldi	r19, 0x33	; 51
     898:	41 ee       	ldi	r20, 0xE1	; 225
     89a:	51 e0       	ldi	r21, 0x01	; 1
     89c:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     8a0:	6c 8b       	std	Y+20, r22	; 0x14
     8a2:	7d 8b       	std	Y+21, r23	; 0x15
     8a4:	8e 8b       	std	Y+22, r24	; 0x16
     8a6:	9f 8b       	std	Y+23, r25	; 0x17
     8a8:	f1 01       	movw	r30, r2
     8aa:	8e 2f       	mov	r24, r30
     8ac:	82 19       	sub	r24, r2
     8ae:	9d 85       	ldd	r25, Y+13	; 0x0d
     8b0:	89 17       	cp	r24, r25
     8b2:	20 f4       	brcc	.+8      	; 0x8bc <rtc_set_by_datestr+0x202>
     8b4:	81 91       	ld	r24, Z+
     8b6:	08 0f       	add	r16, r24
     8b8:	11 1d       	adc	r17, r1
     8ba:	f7 cf       	rjmp	.-18     	; 0x8aa <rtc_set_by_datestr+0x1f0>
     8bc:	a9 89       	ldd	r26, Y+17	; 0x11
     8be:	2a 2f       	mov	r18, r26
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	a0 e1       	ldi	r26, 0x10	; 16
     8c4:	be e0       	ldi	r27, 0x0E	; 14
     8c6:	0e 94 ae 08 	call	0x115c	; 0x115c <__umulhisi3>
     8ca:	6d 87       	std	Y+13, r22	; 0x0d
     8cc:	7e 87       	std	Y+14, r23	; 0x0e
     8ce:	8f 87       	std	Y+15, r24	; 0x0f
     8d0:	98 8b       	std	Y+16, r25	; 0x10
     8d2:	ba 89       	ldd	r27, Y+18	; 0x12
     8d4:	2b 2f       	mov	r18, r27
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	ac e3       	ldi	r26, 0x3C	; 60
     8da:	b0 e0       	ldi	r27, 0x00	; 0
     8dc:	0e 94 ae 08 	call	0x115c	; 0x115c <__umulhisi3>
     8e0:	2d 85       	ldd	r18, Y+13	; 0x0d
     8e2:	3e 85       	ldd	r19, Y+14	; 0x0e
     8e4:	4f 85       	ldd	r20, Y+15	; 0x0f
     8e6:	58 89       	ldd	r21, Y+16	; 0x10
     8e8:	26 0f       	add	r18, r22
     8ea:	37 1f       	adc	r19, r23
     8ec:	48 1f       	adc	r20, r24
     8ee:	59 1f       	adc	r21, r25
     8f0:	da 01       	movw	r26, r20
     8f2:	c9 01       	movw	r24, r18
     8f4:	3b 89       	ldd	r19, Y+19	; 0x13
     8f6:	83 0f       	add	r24, r19
     8f8:	91 1d       	adc	r25, r1
     8fa:	a1 1d       	adc	r26, r1
     8fc:	b1 1d       	adc	r27, r1
     8fe:	48 0e       	add	r4, r24
     900:	59 1e       	adc	r5, r25
     902:	6a 1e       	adc	r6, r26
     904:	7b 1e       	adc	r7, r27
     906:	84 0c       	add	r8, r4
     908:	95 1c       	adc	r9, r5
     90a:	a6 1c       	adc	r10, r6
     90c:	b7 1c       	adc	r11, r7
     90e:	c8 0c       	add	r12, r8
     910:	d9 1c       	adc	r13, r9
     912:	ea 1c       	adc	r14, r10
     914:	fb 1c       	adc	r15, r11
     916:	8c 89       	ldd	r24, Y+20	; 0x14
     918:	9d 89       	ldd	r25, Y+21	; 0x15
     91a:	ae 89       	ldd	r26, Y+22	; 0x16
     91c:	bf 89       	ldd	r27, Y+23	; 0x17
     91e:	c8 0e       	add	r12, r24
     920:	d9 1e       	adc	r13, r25
     922:	ea 1e       	adc	r14, r26
     924:	fb 1e       	adc	r15, r27
     926:	d8 01       	movw	r26, r16
     928:	20 e8       	ldi	r18, 0x80	; 128
     92a:	31 e5       	ldi	r19, 0x51	; 81
     92c:	41 e0       	ldi	r20, 0x01	; 1
     92e:	50 e0       	ldi	r21, 0x00	; 0
     930:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     934:	dc 01       	movw	r26, r24
     936:	cb 01       	movw	r24, r22
     938:	8c 0d       	add	r24, r12
     93a:	9d 1d       	adc	r25, r13
     93c:	ae 1d       	adc	r26, r14
     93e:	bf 1d       	adc	r27, r15
     940:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <rtc_base>
     944:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <rtc_base+0x1>
     948:	a0 93 98 01 	sts	0x0198, r26	; 0x800198 <rtc_base+0x2>
     94c:	b0 93 99 01 	sts	0x0199, r27	; 0x800199 <rtc_base+0x3>
     950:	67 96       	adiw	r28, 0x17	; 23
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	1f 91       	pop	r17
     962:	0f 91       	pop	r16
     964:	ff 90       	pop	r15
     966:	ef 90       	pop	r14
     968:	df 90       	pop	r13
     96a:	cf 90       	pop	r12
     96c:	bf 90       	pop	r11
     96e:	af 90       	pop	r10
     970:	9f 90       	pop	r9
     972:	8f 90       	pop	r8
     974:	7f 90       	pop	r7
     976:	6f 90       	pop	r6
     978:	5f 90       	pop	r5
     97a:	4f 90       	pop	r4
     97c:	3f 90       	pop	r3
     97e:	2f 90       	pop	r2
     980:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <timer1_clear>

00000984 <get_month>:
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	cd b7       	in	r28, 0x3d	; 61
     992:	de b7       	in	r29, 0x3e	; 62
     994:	68 97       	sbiw	r28, 0x18	; 24
     996:	0f b6       	in	r0, 0x3f	; 63
     998:	f8 94       	cli
     99a:	de bf       	out	0x3e, r29	; 62
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	cd bf       	out	0x3d, r28	; 61
     9a0:	7b 01       	movw	r14, r22
     9a2:	2c e0       	ldi	r18, 0x0C	; 12
     9a4:	ef e5       	ldi	r30, 0x5F	; 95
     9a6:	f1 e0       	ldi	r31, 0x01	; 1
     9a8:	de 01       	movw	r26, r28
     9aa:	1d 96       	adiw	r26, 0x0d	; 13
     9ac:	01 90       	ld	r0, Z+
     9ae:	0d 92       	st	X+, r0
     9b0:	2a 95       	dec	r18
     9b2:	e1 f7       	brne	.-8      	; 0x9ac <get_month+0x28>
     9b4:	8e 01       	movw	r16, r28
     9b6:	0f 5f       	subi	r16, 0xFF	; 255
     9b8:	1f 4f       	sbci	r17, 0xFF	; 255
     9ba:	2c e0       	ldi	r18, 0x0C	; 12
     9bc:	f8 01       	movw	r30, r16
     9be:	11 92       	st	Z+, r1
     9c0:	2a 95       	dec	r18
     9c2:	e9 f7       	brne	.-6      	; 0x9be <get_month+0x3a>
     9c4:	0e 94 43 03 	call	0x686	; 0x686 <is_leapyear>
     9c8:	8a 83       	std	Y+2, r24	; 0x02
     9ca:	de 01       	movw	r26, r28
     9cc:	1d 96       	adiw	r26, 0x0d	; 13
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	f7 01       	movw	r30, r14
     9d2:	40 81       	ld	r20, Z
     9d4:	51 81       	ldd	r21, Z+1	; 0x01
     9d6:	9d 91       	ld	r25, X+
     9d8:	f8 01       	movw	r30, r16
     9da:	21 91       	ld	r18, Z+
     9dc:	8f 01       	movw	r16, r30
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	29 0f       	add	r18, r25
     9e2:	31 1d       	adc	r19, r1
     9e4:	42 17       	cp	r20, r18
     9e6:	53 07       	cpc	r21, r19
     9e8:	40 f0       	brcs	.+16     	; 0x9fa <get_month+0x76>
     9ea:	42 1b       	sub	r20, r18
     9ec:	53 0b       	sbc	r21, r19
     9ee:	f7 01       	movw	r30, r14
     9f0:	51 83       	std	Z+1, r21	; 0x01
     9f2:	40 83       	st	Z, r20
     9f4:	8f 5f       	subi	r24, 0xFF	; 255
     9f6:	8c 30       	cpi	r24, 0x0C	; 12
     9f8:	59 f7       	brne	.-42     	; 0x9d0 <get_month+0x4c>
     9fa:	68 96       	adiw	r28, 0x18	; 24
     9fc:	0f b6       	in	r0, 0x3f	; 63
     9fe:	f8 94       	cli
     a00:	de bf       	out	0x3e, r29	; 62
     a02:	0f be       	out	0x3f, r0	; 63
     a04:	cd bf       	out	0x3d, r28	; 61
     a06:	df 91       	pop	r29
     a08:	cf 91       	pop	r28
     a0a:	1f 91       	pop	r17
     a0c:	0f 91       	pop	r16
     a0e:	ff 90       	pop	r15
     a10:	ef 90       	pop	r14
     a12:	08 95       	ret

00000a14 <rtc_num2datestr>:
     a14:	4f 92       	push	r4
     a16:	5f 92       	push	r5
     a18:	6f 92       	push	r6
     a1a:	7f 92       	push	r7
     a1c:	8f 92       	push	r8
     a1e:	9f 92       	push	r9
     a20:	af 92       	push	r10
     a22:	bf 92       	push	r11
     a24:	cf 92       	push	r12
     a26:	df 92       	push	r13
     a28:	ef 92       	push	r14
     a2a:	ff 92       	push	r15
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	00 d0       	rcall	.+0      	; 0xa32 <rtc_num2datestr+0x1e>
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	2b 01       	movw	r4, r22
     a38:	3c 01       	movw	r6, r24
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	20 e8       	ldi	r18, 0x80	; 128
     a44:	42 16       	cp	r4, r18
     a46:	29 e5       	ldi	r18, 0x59	; 89
     a48:	52 06       	cpc	r5, r18
     a4a:	20 e6       	ldi	r18, 0x60	; 96
     a4c:	62 06       	cpc	r6, r18
     a4e:	20 ef       	ldi	r18, 0xF0	; 240
     a50:	72 06       	cpc	r7, r18
     a52:	18 f4       	brcc	.+6      	; 0xa5a <rtc_num2datestr+0x46>
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	dc 01       	movw	r26, r24
     a5a:	20 e9       	ldi	r18, 0x90	; 144
     a5c:	31 e0       	ldi	r19, 0x01	; 1
     a5e:	82 9f       	mul	r24, r18
     a60:	50 01       	movw	r10, r0
     a62:	83 9f       	mul	r24, r19
     a64:	b0 0c       	add	r11, r0
     a66:	92 9f       	mul	r25, r18
     a68:	b0 0c       	add	r11, r0
     a6a:	11 24       	eor	r1, r1
     a6c:	80 e3       	ldi	r24, 0x30	; 48
     a6e:	a8 1a       	sub	r10, r24
     a70:	88 ef       	ldi	r24, 0xF8	; 248
     a72:	b8 0a       	sbc	r11, r24
     a74:	c1 2c       	mov	r12, r1
     a76:	d1 2c       	mov	r13, r1
     a78:	76 01       	movw	r14, r12
     a7a:	c3 94       	inc	r12
     a7c:	20 e8       	ldi	r18, 0x80	; 128
     a7e:	42 16       	cp	r4, r18
     a80:	29 e5       	ldi	r18, 0x59	; 89
     a82:	52 06       	cpc	r5, r18
     a84:	20 e6       	ldi	r18, 0x60	; 96
     a86:	62 06       	cpc	r6, r18
     a88:	20 ef       	ldi	r18, 0xF0	; 240
     a8a:	72 06       	cpc	r7, r18
     a8c:	18 f4       	brcc	.+6      	; 0xa94 <rtc_num2datestr+0x80>
     a8e:	c1 2c       	mov	r12, r1
     a90:	d1 2c       	mov	r13, r1
     a92:	76 01       	movw	r14, r12
     a94:	a7 01       	movw	r20, r14
     a96:	96 01       	movw	r18, r12
     a98:	60 e8       	ldi	r22, 0x80	; 128
     a9a:	79 e5       	ldi	r23, 0x59	; 89
     a9c:	80 e6       	ldi	r24, 0x60	; 96
     a9e:	90 ef       	ldi	r25, 0xF0	; 240
     aa0:	0e 94 49 08 	call	0x1092	; 0x1092 <__mulsi3>
     aa4:	73 01       	movw	r14, r6
     aa6:	62 01       	movw	r12, r4
     aa8:	c6 1a       	sub	r12, r22
     aaa:	d7 0a       	sbc	r13, r23
     aac:	e8 0a       	sbc	r14, r24
     aae:	f9 0a       	sbc	r15, r25
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	a0 e0       	ldi	r26, 0x00	; 0
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
     ab8:	c1 14       	cp	r12, r1
     aba:	22 ec       	ldi	r18, 0xC2	; 194
     abc:	d2 06       	cpc	r13, r18
     abe:	27 e1       	ldi	r18, 0x17	; 23
     ac0:	e2 06       	cpc	r14, r18
     ac2:	2c eb       	ldi	r18, 0xBC	; 188
     ac4:	f2 06       	cpc	r15, r18
     ac6:	18 f4       	brcc	.+6      	; 0xace <rtc_num2datestr+0xba>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	dc 01       	movw	r26, r24
     ace:	44 e6       	ldi	r20, 0x64	; 100
     ad0:	48 9f       	mul	r20, r24
     ad2:	90 01       	movw	r18, r0
     ad4:	49 9f       	mul	r20, r25
     ad6:	30 0d       	add	r19, r0
     ad8:	11 24       	eor	r1, r1
     ada:	a2 0e       	add	r10, r18
     adc:	b3 1e       	adc	r11, r19
     ade:	21 e0       	ldi	r18, 0x01	; 1
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	40 e0       	ldi	r20, 0x00	; 0
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	c1 14       	cp	r12, r1
     ae8:	82 ec       	ldi	r24, 0xC2	; 194
     aea:	d8 06       	cpc	r13, r24
     aec:	87 e1       	ldi	r24, 0x17	; 23
     aee:	e8 06       	cpc	r14, r24
     af0:	8c eb       	ldi	r24, 0xBC	; 188
     af2:	f8 06       	cpc	r15, r24
     af4:	18 f4       	brcc	.+6      	; 0xafc <rtc_num2datestr+0xe8>
     af6:	20 e0       	ldi	r18, 0x00	; 0
     af8:	30 e0       	ldi	r19, 0x00	; 0
     afa:	a9 01       	movw	r20, r18
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	72 ec       	ldi	r23, 0xC2	; 194
     b00:	87 e1       	ldi	r24, 0x17	; 23
     b02:	9c eb       	ldi	r25, 0xBC	; 188
     b04:	0e 94 49 08 	call	0x1092	; 0x1092 <__mulsi3>
     b08:	a7 01       	movw	r20, r14
     b0a:	96 01       	movw	r18, r12
     b0c:	26 1b       	sub	r18, r22
     b0e:	37 0b       	sbc	r19, r23
     b10:	48 0b       	sbc	r20, r24
     b12:	59 0b       	sbc	r21, r25
     b14:	ca 01       	movw	r24, r20
     b16:	b9 01       	movw	r22, r18
     b18:	20 e8       	ldi	r18, 0x80	; 128
     b1a:	3f e1       	ldi	r19, 0x1F	; 31
     b1c:	46 e8       	ldi	r20, 0x86	; 134
     b1e:	57 e0       	ldi	r21, 0x07	; 7
     b20:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
     b24:	22 0f       	add	r18, r18
     b26:	33 1f       	adc	r19, r19
     b28:	22 0f       	add	r18, r18
     b2a:	33 1f       	adc	r19, r19
     b2c:	a2 0e       	add	r10, r18
     b2e:	b3 1e       	adc	r11, r19
     b30:	20 e8       	ldi	r18, 0x80	; 128
     b32:	33 e3       	ldi	r19, 0x33	; 51
     b34:	41 ee       	ldi	r20, 0xE1	; 225
     b36:	51 e0       	ldi	r21, 0x01	; 1
     b38:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
     b3c:	75 01       	movw	r14, r10
     b3e:	e2 0e       	add	r14, r18
     b40:	f3 1e       	adc	r15, r19
     b42:	20 e8       	ldi	r18, 0x80	; 128
     b44:	31 e5       	ldi	r19, 0x51	; 81
     b46:	41 e0       	ldi	r20, 0x01	; 1
     b48:	50 e0       	ldi	r21, 0x00	; 0
     b4a:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
     b4e:	4b 01       	movw	r8, r22
     b50:	5c 01       	movw	r10, r24
     b52:	3a 83       	std	Y+2, r19	; 0x02
     b54:	29 83       	std	Y+1, r18	; 0x01
     b56:	be 01       	movw	r22, r28
     b58:	6f 5f       	subi	r22, 0xFF	; 255
     b5a:	7f 4f       	sbci	r23, 0xFF	; 255
     b5c:	c7 01       	movw	r24, r14
     b5e:	0e 94 c2 04 	call	0x984	; 0x984 <get_month>
     b62:	d8 2e       	mov	r13, r24
     b64:	c5 01       	movw	r24, r10
     b66:	b4 01       	movw	r22, r8
     b68:	20 e1       	ldi	r18, 0x10	; 16
     b6a:	3e e0       	ldi	r19, 0x0E	; 14
     b6c:	40 e0       	ldi	r20, 0x00	; 0
     b6e:	50 e0       	ldi	r21, 0x00	; 0
     b70:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
     b74:	29 01       	movw	r4, r18
     b76:	3a 01       	movw	r6, r20
     b78:	4b 01       	movw	r8, r22
     b7a:	5c 01       	movw	r10, r24
     b7c:	6b e6       	ldi	r22, 0x6B	; 107
     b7e:	71 e0       	ldi	r23, 0x01	; 1
     b80:	80 e0       	ldi	r24, 0x00	; 0
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 21 06 	call	0xc42	; 0xc42 <str_cpy>
     b88:	6d 2d       	mov	r22, r13
     b8a:	70 e0       	ldi	r23, 0x00	; 0
     b8c:	6f 5f       	subi	r22, 0xFF	; 255
     b8e:	7f 4f       	sbci	r23, 0xFF	; 255
     b90:	42 e0       	ldi	r20, 0x02	; 2
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	91 e0       	ldi	r25, 0x01	; 1
     b96:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     b9a:	69 81       	ldd	r22, Y+1	; 0x01
     b9c:	7a 81       	ldd	r23, Y+2	; 0x02
     b9e:	6f 5f       	subi	r22, 0xFF	; 255
     ba0:	7f 4f       	sbci	r23, 0xFF	; 255
     ba2:	42 e0       	ldi	r20, 0x02	; 2
     ba4:	83 e0       	ldi	r24, 0x03	; 3
     ba6:	91 e0       	ldi	r25, 0x01	; 1
     ba8:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     bac:	44 e0       	ldi	r20, 0x04	; 4
     bae:	b7 01       	movw	r22, r14
     bb0:	86 e0       	ldi	r24, 0x06	; 6
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     bb8:	42 e0       	ldi	r20, 0x02	; 2
     bba:	b2 01       	movw	r22, r4
     bbc:	8b e0       	ldi	r24, 0x0B	; 11
     bbe:	91 e0       	ldi	r25, 0x01	; 1
     bc0:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     bc4:	c5 01       	movw	r24, r10
     bc6:	b4 01       	movw	r22, r8
     bc8:	2c e3       	ldi	r18, 0x3C	; 60
     bca:	30 e0       	ldi	r19, 0x00	; 0
     bcc:	40 e0       	ldi	r20, 0x00	; 0
     bce:	50 e0       	ldi	r21, 0x00	; 0
     bd0:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
     bd4:	49 01       	movw	r8, r18
     bd6:	5a 01       	movw	r10, r20
     bd8:	6b 01       	movw	r12, r22
     bda:	7c 01       	movw	r14, r24
     bdc:	42 e0       	ldi	r20, 0x02	; 2
     bde:	b4 01       	movw	r22, r8
     be0:	8e e0       	ldi	r24, 0x0E	; 14
     be2:	91 e0       	ldi	r25, 0x01	; 1
     be4:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     be8:	42 e0       	ldi	r20, 0x02	; 2
     bea:	b6 01       	movw	r22, r12
     bec:	81 e1       	ldi	r24, 0x11	; 17
     bee:	91 e0       	ldi	r25, 0x01	; 1
     bf0:	0e 94 2b 06 	call	0xc56	; 0xc56 <str_writeudec16>
     bf4:	80 e0       	ldi	r24, 0x00	; 0
     bf6:	91 e0       	ldi	r25, 0x01	; 1
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	ff 90       	pop	r15
     c02:	ef 90       	pop	r14
     c04:	df 90       	pop	r13
     c06:	cf 90       	pop	r12
     c08:	bf 90       	pop	r11
     c0a:	af 90       	pop	r10
     c0c:	9f 90       	pop	r9
     c0e:	8f 90       	pop	r8
     c10:	7f 90       	pop	r7
     c12:	6f 90       	pop	r6
     c14:	5f 90       	pop	r5
     c16:	4f 90       	pop	r4
     c18:	08 95       	ret

00000c1a <rtc_get_date_string>:
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	0e 94 ab 02 	call	0x556	; 0x556 <timer1_get>
     c22:	00 91 96 01 	lds	r16, 0x0196	; 0x800196 <rtc_base>
     c26:	10 91 97 01 	lds	r17, 0x0197	; 0x800197 <rtc_base+0x1>
     c2a:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <rtc_base+0x2>
     c2e:	30 91 99 01 	lds	r19, 0x0199	; 0x800199 <rtc_base+0x3>
     c32:	60 0f       	add	r22, r16
     c34:	71 1f       	adc	r23, r17
     c36:	82 1f       	adc	r24, r18
     c38:	93 1f       	adc	r25, r19
     c3a:	1f 91       	pop	r17
     c3c:	0f 91       	pop	r16
     c3e:	0c 94 0a 05 	jmp	0xa14	; 0xa14 <rtc_num2datestr>

00000c42 <str_cpy>:
     c42:	fc 01       	movw	r30, r24
     c44:	db 01       	movw	r26, r22
     c46:	8d 91       	ld	r24, X+
     c48:	bd 01       	movw	r22, r26
     c4a:	88 23       	and	r24, r24
     c4c:	11 f0       	breq	.+4      	; 0xc52 <str_cpy+0x10>
     c4e:	81 93       	st	Z+, r24
     c50:	f9 cf       	rjmp	.-14     	; 0xc44 <str_cpy+0x2>
     c52:	10 82       	st	Z, r1
     c54:	08 95       	ret

00000c56 <str_writeudec16>:
     c56:	9f 92       	push	r9
     c58:	af 92       	push	r10
     c5a:	bf 92       	push	r11
     c5c:	cf 92       	push	r12
     c5e:	df 92       	push	r13
     c60:	ef 92       	push	r14
     c62:	ff 92       	push	r15
     c64:	0f 93       	push	r16
     c66:	1f 93       	push	r17
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	00 d0       	rcall	.+0      	; 0xc6e <str_writeudec16+0x18>
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <str_writeudec16+0x1a>
     c70:	1f 92       	push	r1
     c72:	cd b7       	in	r28, 0x3d	; 61
     c74:	de b7       	in	r29, 0x3e	; 62
     c76:	fc 01       	movw	r30, r24
     c78:	6b 01       	movw	r12, r22
     c7a:	9e 01       	movw	r18, r28
     c7c:	2f 5f       	subi	r18, 0xFF	; 255
     c7e:	3f 4f       	sbci	r19, 0xFF	; 255
     c80:	8e 01       	movw	r16, r28
     c82:	0a 5f       	subi	r16, 0xFA	; 250
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	ee 24       	eor	r14, r14
     c88:	e3 94       	inc	r14
     c8a:	f1 2c       	mov	r15, r1
     c8c:	9a e0       	ldi	r25, 0x0A	; 10
     c8e:	99 2e       	mov	r9, r25
     c90:	9e 9c       	mul	r9, r14
     c92:	50 01       	movw	r10, r0
     c94:	9f 9c       	mul	r9, r15
     c96:	b0 0c       	add	r11, r0
     c98:	11 24       	eor	r1, r1
     c9a:	c6 01       	movw	r24, r12
     c9c:	b5 01       	movw	r22, r10
     c9e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     ca2:	b7 01       	movw	r22, r14
     ca4:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__udivmodhi4>
     ca8:	d9 01       	movw	r26, r18
     caa:	6d 93       	st	X+, r22
     cac:	9d 01       	movw	r18, r26
     cae:	c6 1a       	sub	r12, r22
     cb0:	d1 08       	sbc	r13, r1
     cb2:	67 fd       	sbrc	r22, 7
     cb4:	d3 94       	inc	r13
     cb6:	75 01       	movw	r14, r10
     cb8:	a0 17       	cp	r26, r16
     cba:	b1 07       	cpc	r27, r17
     cbc:	49 f7       	brne	.-46     	; 0xc90 <str_writeudec16+0x3a>
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	84 e0       	ldi	r24, 0x04	; 4
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	50 e0       	ldi	r21, 0x00	; 0
     cc8:	d8 01       	movw	r26, r16
     cca:	2e 91       	ld	r18, -X
     ccc:	8d 01       	movw	r16, r26
     cce:	21 11       	cpse	r18, r1
     cd0:	05 c0       	rjmp	.+10     	; 0xcdc <str_writeudec16+0x86>
     cd2:	61 15       	cp	r22, r1
     cd4:	71 05       	cpc	r23, r1
     cd6:	11 f4       	brne	.+4      	; 0xcdc <str_writeudec16+0x86>
     cd8:	00 97       	sbiw	r24, 0x00	; 0
     cda:	41 f4       	brne	.+16     	; 0xcec <str_writeudec16+0x96>
     cdc:	84 17       	cp	r24, r20
     cde:	95 07       	cpc	r25, r21
     ce0:	2c f4       	brge	.+10     	; 0xcec <str_writeudec16+0x96>
     ce2:	20 5d       	subi	r18, 0xD0	; 208
     ce4:	21 93       	st	Z+, r18
     ce6:	61 e0       	ldi	r22, 0x01	; 1
     ce8:	70 e0       	ldi	r23, 0x00	; 0
     cea:	04 c0       	rjmp	.+8      	; 0xcf4 <str_writeudec16+0x9e>
     cec:	84 17       	cp	r24, r20
     cee:	95 07       	cpc	r25, r21
     cf0:	0c f4       	brge	.+2      	; 0xcf4 <str_writeudec16+0x9e>
     cf2:	31 96       	adiw	r30, 0x01	; 1
     cf4:	01 97       	sbiw	r24, 0x01	; 1
     cf6:	40 f7       	brcc	.-48     	; 0xcc8 <str_writeudec16+0x72>
     cf8:	0f 90       	pop	r0
     cfa:	0f 90       	pop	r0
     cfc:	0f 90       	pop	r0
     cfe:	0f 90       	pop	r0
     d00:	0f 90       	pop	r0
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	1f 91       	pop	r17
     d08:	0f 91       	pop	r16
     d0a:	ff 90       	pop	r15
     d0c:	ef 90       	pop	r14
     d0e:	df 90       	pop	r13
     d10:	cf 90       	pop	r12
     d12:	bf 90       	pop	r11
     d14:	af 90       	pop	r10
     d16:	9f 90       	pop	r9
     d18:	08 95       	ret

00000d1a <uart_init>:
     d1a:	0e 94 57 07 	call	0xeae	; 0xeae <serial_init>
     d1e:	78 94       	sei
     d20:	08 95       	ret

00000d22 <uart_writechar>:
     d22:	0c 94 ef 07 	jmp	0xfde	; 0xfde <serial_writechar>

00000d26 <uart_writestr>:
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	ec 01       	movw	r28, r24
     d2c:	89 91       	ld	r24, Y+
     d2e:	88 23       	and	r24, r24
     d30:	19 f0       	breq	.+6      	; 0xd38 <uart_writestr+0x12>
     d32:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
     d36:	fa cf       	rjmp	.-12     	; 0xd2c <uart_writestr+0x6>
     d38:	df 91       	pop	r29
     d3a:	cf 91       	pop	r28
     d3c:	08 95       	ret

00000d3e <uart_writehex8>:
     d3e:	cf 93       	push	r28
     d40:	c8 2f       	mov	r28, r24
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	24 e0       	ldi	r18, 0x04	; 4
     d46:	95 95       	asr	r25
     d48:	87 95       	ror	r24
     d4a:	2a 95       	dec	r18
     d4c:	e1 f7       	brne	.-8      	; 0xd46 <uart_writehex8+0x8>
     d4e:	8a 30       	cpi	r24, 0x0A	; 10
     d50:	10 f4       	brcc	.+4      	; 0xd56 <uart_writehex8+0x18>
     d52:	80 5d       	subi	r24, 0xD0	; 208
     d54:	01 c0       	rjmp	.+2      	; 0xd58 <uart_writehex8+0x1a>
     d56:	89 5c       	subi	r24, 0xC9	; 201
     d58:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
     d5c:	8c 2f       	mov	r24, r28
     d5e:	8f 70       	andi	r24, 0x0F	; 15
     d60:	8a 30       	cpi	r24, 0x0A	; 10
     d62:	10 f0       	brcs	.+4      	; 0xd68 <uart_writehex8+0x2a>
     d64:	89 5c       	subi	r24, 0xC9	; 201
     d66:	01 c0       	rjmp	.+2      	; 0xd6a <uart_writehex8+0x2c>
     d68:	80 5d       	subi	r24, 0xD0	; 208
     d6a:	cf 91       	pop	r28
     d6c:	0c 94 ef 07 	jmp	0xfde	; 0xfde <serial_writechar>

00000d70 <uart_writehex16>:
     d70:	cf 93       	push	r28
     d72:	c8 2f       	mov	r28, r24
     d74:	89 2f       	mov	r24, r25
     d76:	0e 94 9f 06 	call	0xd3e	; 0xd3e <uart_writehex8>
     d7a:	8c 2f       	mov	r24, r28
     d7c:	cf 91       	pop	r28
     d7e:	0c 94 9f 06 	jmp	0xd3e	; 0xd3e <uart_writehex8>

00000d82 <uart_writedec32>:
     d82:	2f 92       	push	r2
     d84:	3f 92       	push	r3
     d86:	4f 92       	push	r4
     d88:	5f 92       	push	r5
     d8a:	6f 92       	push	r6
     d8c:	7f 92       	push	r7
     d8e:	8f 92       	push	r8
     d90:	9f 92       	push	r9
     d92:	af 92       	push	r10
     d94:	bf 92       	push	r11
     d96:	cf 92       	push	r12
     d98:	df 92       	push	r13
     d9a:	ef 92       	push	r14
     d9c:	ff 92       	push	r15
     d9e:	0f 93       	push	r16
     da0:	1f 93       	push	r17
     da2:	cf 93       	push	r28
     da4:	df 93       	push	r29
     da6:	cd b7       	in	r28, 0x3d	; 61
     da8:	de b7       	in	r29, 0x3e	; 62
     daa:	63 97       	sbiw	r28, 0x13	; 19
     dac:	0f b6       	in	r0, 0x3f	; 63
     dae:	f8 94       	cli
     db0:	de bf       	out	0x3e, r29	; 62
     db2:	0f be       	out	0x3f, r0	; 63
     db4:	cd bf       	out	0x3d, r28	; 61
     db6:	6b 01       	movw	r12, r22
     db8:	7c 01       	movw	r14, r24
     dba:	97 ff       	sbrs	r25, 7
     dbc:	0d c0       	rjmp	.+26     	; 0xdd8 <uart_writedec32+0x56>
     dbe:	f0 94       	com	r15
     dc0:	e0 94       	com	r14
     dc2:	d0 94       	com	r13
     dc4:	c0 94       	com	r12
     dc6:	c1 1c       	adc	r12, r1
     dc8:	d1 1c       	adc	r13, r1
     dca:	e1 1c       	adc	r14, r1
     dcc:	f1 1c       	adc	r15, r1
     dce:	81 e0       	ldi	r24, 0x01	; 1
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	9b 8b       	std	Y+19, r25	; 0x13
     dd4:	8a 8b       	std	Y+18, r24	; 0x12
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <uart_writedec32+0x5a>
     dd8:	1b 8a       	std	Y+19, r1	; 0x13
     dda:	1a 8a       	std	Y+18, r1	; 0x12
     ddc:	fe 01       	movw	r30, r28
     dde:	31 96       	adiw	r30, 0x01	; 1
     de0:	5f 01       	movw	r10, r30
     de2:	8e 01       	movw	r16, r28
     de4:	05 5f       	subi	r16, 0xF5	; 245
     de6:	1f 4f       	sbci	r17, 0xFF	; 255
     de8:	f9 8b       	std	Y+17, r31	; 0x11
     dea:	e8 8b       	std	Y+16, r30	; 0x10
     dec:	66 24       	eor	r6, r6
     dee:	63 94       	inc	r6
     df0:	71 2c       	mov	r7, r1
     df2:	81 2c       	mov	r8, r1
     df4:	91 2c       	mov	r9, r1
     df6:	aa e0       	ldi	r26, 0x0A	; 10
     df8:	b0 e0       	ldi	r27, 0x00	; 0
     dfa:	93 01       	movw	r18, r6
     dfc:	a4 01       	movw	r20, r8
     dfe:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
     e02:	1b 01       	movw	r2, r22
     e04:	2c 01       	movw	r4, r24
     e06:	c7 01       	movw	r24, r14
     e08:	b6 01       	movw	r22, r12
     e0a:	91 01       	movw	r18, r2
     e0c:	a2 01       	movw	r20, r4
     e0e:	0e 94 8f 08 	call	0x111e	; 0x111e <__divmodsi4>
     e12:	93 01       	movw	r18, r6
     e14:	a4 01       	movw	r20, r8
     e16:	0e 94 8f 08 	call	0x111e	; 0x111e <__divmodsi4>
     e1a:	e8 89       	ldd	r30, Y+16	; 0x10
     e1c:	f9 89       	ldd	r31, Y+17	; 0x11
     e1e:	21 93       	st	Z+, r18
     e20:	f9 8b       	std	Y+17, r31	; 0x11
     e22:	e8 8b       	std	Y+16, r30	; 0x10
     e24:	82 2f       	mov	r24, r18
     e26:	22 0f       	add	r18, r18
     e28:	99 0b       	sbc	r25, r25
     e2a:	aa 0b       	sbc	r26, r26
     e2c:	bb 0b       	sbc	r27, r27
     e2e:	c8 1a       	sub	r12, r24
     e30:	d9 0a       	sbc	r13, r25
     e32:	ea 0a       	sbc	r14, r26
     e34:	fb 0a       	sbc	r15, r27
     e36:	31 01       	movw	r6, r2
     e38:	42 01       	movw	r8, r4
     e3a:	0e 17       	cp	r16, r30
     e3c:	1f 07       	cpc	r17, r31
     e3e:	d9 f6       	brne	.-74     	; 0xdf6 <uart_writedec32+0x74>
     e40:	8a 89       	ldd	r24, Y+18	; 0x12
     e42:	9b 89       	ldd	r25, Y+19	; 0x13
     e44:	89 2b       	or	r24, r25
     e46:	11 f0       	breq	.+4      	; 0xe4c <uart_writedec32+0xca>
     e48:	8d e2       	ldi	r24, 0x2D	; 45
     e4a:	01 c0       	rjmp	.+2      	; 0xe4e <uart_writedec32+0xcc>
     e4c:	80 e2       	ldi	r24, 0x20	; 32
     e4e:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	f8 01       	movw	r30, r16
     e58:	82 91       	ld	r24, -Z
     e5a:	8f 01       	movw	r16, r30
     e5c:	81 11       	cpse	r24, r1
     e5e:	06 c0       	rjmp	.+12     	; 0xe6c <uart_writedec32+0xea>
     e60:	21 15       	cp	r18, r1
     e62:	31 05       	cpc	r19, r1
     e64:	19 f4       	brne	.+6      	; 0xe6c <uart_writedec32+0xea>
     e66:	ea 15       	cp	r30, r10
     e68:	fb 05       	cpc	r31, r11
     e6a:	29 f4       	brne	.+10     	; 0xe76 <uart_writedec32+0xf4>
     e6c:	80 5d       	subi	r24, 0xD0	; 208
     e6e:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
     e72:	21 e0       	ldi	r18, 0x01	; 1
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	0a 15       	cp	r16, r10
     e78:	1b 05       	cpc	r17, r11
     e7a:	69 f7       	brne	.-38     	; 0xe56 <uart_writedec32+0xd4>
     e7c:	63 96       	adiw	r28, 0x13	; 19
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	1f 91       	pop	r17
     e8e:	0f 91       	pop	r16
     e90:	ff 90       	pop	r15
     e92:	ef 90       	pop	r14
     e94:	df 90       	pop	r13
     e96:	cf 90       	pop	r12
     e98:	bf 90       	pop	r11
     e9a:	af 90       	pop	r10
     e9c:	9f 90       	pop	r9
     e9e:	8f 90       	pop	r8
     ea0:	7f 90       	pop	r7
     ea2:	6f 90       	pop	r6
     ea4:	5f 90       	pop	r5
     ea6:	4f 90       	pop	r4
     ea8:	3f 90       	pop	r3
     eaa:	2f 90       	pop	r2
     eac:	08 95       	ret

00000eae <serial_init>:
     eae:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     eb2:	87 e6       	ldi	r24, 0x67	; 103
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     eba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     ebe:	e1 ec       	ldi	r30, 0xC1	; 193
     ec0:	f0 e0       	ldi	r31, 0x00	; 0
     ec2:	88 e1       	ldi	r24, 0x18	; 24
     ec4:	80 83       	st	Z, r24
     ec6:	86 e0       	ldi	r24, 0x06	; 6
     ec8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     ecc:	80 81       	ld	r24, Z
     ece:	80 6a       	ori	r24, 0xA0	; 160
     ed0:	80 83       	st	Z, r24
     ed2:	08 95       	ret

00000ed4 <__vector_18>:
     ed4:	1f 92       	push	r1
     ed6:	0f 92       	push	r0
     ed8:	0f b6       	in	r0, 0x3f	; 63
     eda:	0f 92       	push	r0
     edc:	11 24       	eor	r1, r1
     ede:	2f 93       	push	r18
     ee0:	8f 93       	push	r24
     ee2:	9f 93       	push	r25
     ee4:	ef 93       	push	r30
     ee6:	ff 93       	push	r31
     ee8:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <rxtail>
     eec:	20 91 95 01 	lds	r18, 0x0195	; 0x800195 <rxhead>
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	82 1b       	sub	r24, r18
     ef4:	91 09       	sbc	r25, r1
     ef6:	01 97       	sbiw	r24, 0x01	; 1
     ef8:	8f 73       	andi	r24, 0x3F	; 63
     efa:	99 27       	eor	r25, r25
     efc:	89 2b       	or	r24, r25
     efe:	79 f0       	breq	.+30     	; 0xf1e <__vector_18+0x4a>
     f00:	e0 91 95 01 	lds	r30, 0x0195	; 0x800195 <rxhead>
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f0a:	e6 56       	subi	r30, 0x66	; 102
     f0c:	fe 4f       	sbci	r31, 0xFE	; 254
     f0e:	80 83       	st	Z, r24
     f10:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <rxhead>
     f14:	8f 5f       	subi	r24, 0xFF	; 255
     f16:	8f 73       	andi	r24, 0x3F	; 63
     f18:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <rxhead>
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <__vector_18+0x4e>
     f1e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f22:	ff 91       	pop	r31
     f24:	ef 91       	pop	r30
     f26:	9f 91       	pop	r25
     f28:	8f 91       	pop	r24
     f2a:	2f 91       	pop	r18
     f2c:	0f 90       	pop	r0
     f2e:	0f be       	out	0x3f, r0	; 63
     f30:	0f 90       	pop	r0
     f32:	1f 90       	pop	r1
     f34:	18 95       	reti

00000f36 <__vector_19>:
     f36:	1f 92       	push	r1
     f38:	0f 92       	push	r0
     f3a:	0f b6       	in	r0, 0x3f	; 63
     f3c:	0f 92       	push	r0
     f3e:	11 24       	eor	r1, r1
     f40:	2f 93       	push	r18
     f42:	8f 93       	push	r24
     f44:	9f 93       	push	r25
     f46:	ef 93       	push	r30
     f48:	ff 93       	push	r31
     f4a:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <txhead>
     f4e:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <txtail>
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	82 1b       	sub	r24, r18
     f56:	91 09       	sbc	r25, r1
     f58:	8f 73       	andi	r24, 0x3F	; 63
     f5a:	99 27       	eor	r25, r25
     f5c:	89 2b       	or	r24, r25
     f5e:	79 f0       	breq	.+30     	; 0xf7e <__vector_19+0x48>
     f60:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <txtail>
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	e6 52       	subi	r30, 0x26	; 38
     f68:	fe 4f       	sbci	r31, 0xFE	; 254
     f6a:	80 81       	ld	r24, Z
     f6c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f70:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <txtail>
     f74:	8f 5f       	subi	r24, 0xFF	; 255
     f76:	8f 73       	andi	r24, 0x3F	; 63
     f78:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <txtail>
     f7c:	05 c0       	rjmp	.+10     	; 0xf88 <__vector_19+0x52>
     f7e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     f82:	8f 7d       	andi	r24, 0xDF	; 223
     f84:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     f88:	ff 91       	pop	r31
     f8a:	ef 91       	pop	r30
     f8c:	9f 91       	pop	r25
     f8e:	8f 91       	pop	r24
     f90:	2f 91       	pop	r18
     f92:	0f 90       	pop	r0
     f94:	0f be       	out	0x3f, r0	; 63
     f96:	0f 90       	pop	r0
     f98:	1f 90       	pop	r1
     f9a:	18 95       	reti

00000f9c <serial_rxchars>:
     f9c:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <rxhead>
     fa0:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <rxtail>
     fa4:	89 1b       	sub	r24, r25
     fa6:	8f 73       	andi	r24, 0x3F	; 63
     fa8:	08 95       	ret

00000faa <serial_popchar>:
     faa:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <rxhead>
     fae:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <rxtail>
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	82 1b       	sub	r24, r18
     fb6:	91 09       	sbc	r25, r1
     fb8:	8f 73       	andi	r24, 0x3F	; 63
     fba:	99 27       	eor	r25, r25
     fbc:	89 2b       	or	r24, r25
     fbe:	69 f0       	breq	.+26     	; 0xfda <serial_popchar+0x30>
     fc0:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <rxtail>
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	e6 56       	subi	r30, 0x66	; 102
     fc8:	fe 4f       	sbci	r31, 0xFE	; 254
     fca:	80 81       	ld	r24, Z
     fcc:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <rxtail>
     fd0:	9f 5f       	subi	r25, 0xFF	; 255
     fd2:	9f 73       	andi	r25, 0x3F	; 63
     fd4:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <rxtail>
     fd8:	08 95       	ret
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	08 95       	ret

00000fde <serial_writechar>:
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	07 fe       	sbrs	r0, 7
     fe2:	0e c0       	rjmp	.+28     	; 0x1000 <serial_writechar+0x22>
     fe4:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <txtail>
     fe8:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <txhead>
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	29 1b       	sub	r18, r25
     ff0:	31 09       	sbc	r19, r1
     ff2:	21 50       	subi	r18, 0x01	; 1
     ff4:	31 09       	sbc	r19, r1
     ff6:	2f 73       	andi	r18, 0x3F	; 63
     ff8:	33 27       	eor	r19, r19
     ffa:	23 2b       	or	r18, r19
     ffc:	99 f3       	breq	.-26     	; 0xfe4 <serial_writechar+0x6>
     ffe:	0d c0       	rjmp	.+26     	; 0x101a <serial_writechar+0x3c>
    1000:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <txtail>
    1004:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <txhead>
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	29 1b       	sub	r18, r25
    100c:	31 09       	sbc	r19, r1
    100e:	21 50       	subi	r18, 0x01	; 1
    1010:	31 09       	sbc	r19, r1
    1012:	2f 73       	andi	r18, 0x3F	; 63
    1014:	33 27       	eor	r19, r19
    1016:	23 2b       	or	r18, r19
    1018:	61 f0       	breq	.+24     	; 0x1032 <serial_writechar+0x54>
    101a:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <txhead>
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	e6 52       	subi	r30, 0x26	; 38
    1022:	fe 4f       	sbci	r31, 0xFE	; 254
    1024:	80 83       	st	Z, r24
    1026:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <txhead>
    102a:	8f 5f       	subi	r24, 0xFF	; 255
    102c:	8f 73       	andi	r24, 0x3F	; 63
    102e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <txhead>
    1032:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1036:	80 62       	ori	r24, 0x20	; 32
    1038:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    103c:	08 95       	ret

0000103e <serial_writestr>:
    103e:	1f 93       	push	r17
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
    1044:	ec 01       	movw	r28, r24
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	11 e0       	ldi	r17, 0x01	; 1
    104a:	18 0f       	add	r17, r24
    104c:	fe 01       	movw	r30, r28
    104e:	e8 0f       	add	r30, r24
    1050:	f1 1d       	adc	r31, r1
    1052:	80 81       	ld	r24, Z
    1054:	88 23       	and	r24, r24
    1056:	21 f0       	breq	.+8      	; 0x1060 <serial_writestr+0x22>
    1058:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
    105c:	81 2f       	mov	r24, r17
    105e:	f4 cf       	rjmp	.-24     	; 0x1048 <serial_writestr+0xa>
    1060:	df 91       	pop	r29
    1062:	cf 91       	pop	r28
    1064:	1f 91       	pop	r17
    1066:	08 95       	ret

00001068 <serial_writestr_P>:
    1068:	1f 93       	push	r17
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	ec 01       	movw	r28, r24
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	11 e0       	ldi	r17, 0x01	; 1
    1074:	18 0f       	add	r17, r24
    1076:	fe 01       	movw	r30, r28
    1078:	e8 0f       	add	r30, r24
    107a:	f1 1d       	adc	r31, r1
    107c:	84 91       	lpm	r24, Z
    107e:	88 23       	and	r24, r24
    1080:	21 f0       	breq	.+8      	; 0x108a <serial_writestr_P+0x22>
    1082:	0e 94 ef 07 	call	0xfde	; 0xfde <serial_writechar>
    1086:	81 2f       	mov	r24, r17
    1088:	f4 cf       	rjmp	.-24     	; 0x1072 <serial_writestr_P+0xa>
    108a:	df 91       	pop	r29
    108c:	cf 91       	pop	r28
    108e:	1f 91       	pop	r17
    1090:	08 95       	ret

00001092 <__mulsi3>:
    1092:	db 01       	movw	r26, r22
    1094:	8f 93       	push	r24
    1096:	9f 93       	push	r25
    1098:	0e 94 bd 08 	call	0x117a	; 0x117a <__muluhisi3>
    109c:	bf 91       	pop	r27
    109e:	af 91       	pop	r26
    10a0:	a2 9f       	mul	r26, r18
    10a2:	80 0d       	add	r24, r0
    10a4:	91 1d       	adc	r25, r1
    10a6:	a3 9f       	mul	r26, r19
    10a8:	90 0d       	add	r25, r0
    10aa:	b2 9f       	mul	r27, r18
    10ac:	90 0d       	add	r25, r0
    10ae:	11 24       	eor	r1, r1
    10b0:	08 95       	ret

000010b2 <__udivmodhi4>:
    10b2:	aa 1b       	sub	r26, r26
    10b4:	bb 1b       	sub	r27, r27
    10b6:	51 e1       	ldi	r21, 0x11	; 17
    10b8:	07 c0       	rjmp	.+14     	; 0x10c8 <__udivmodhi4_ep>

000010ba <__udivmodhi4_loop>:
    10ba:	aa 1f       	adc	r26, r26
    10bc:	bb 1f       	adc	r27, r27
    10be:	a6 17       	cp	r26, r22
    10c0:	b7 07       	cpc	r27, r23
    10c2:	10 f0       	brcs	.+4      	; 0x10c8 <__udivmodhi4_ep>
    10c4:	a6 1b       	sub	r26, r22
    10c6:	b7 0b       	sbc	r27, r23

000010c8 <__udivmodhi4_ep>:
    10c8:	88 1f       	adc	r24, r24
    10ca:	99 1f       	adc	r25, r25
    10cc:	5a 95       	dec	r21
    10ce:	a9 f7       	brne	.-22     	; 0x10ba <__udivmodhi4_loop>
    10d0:	80 95       	com	r24
    10d2:	90 95       	com	r25
    10d4:	bc 01       	movw	r22, r24
    10d6:	cd 01       	movw	r24, r26
    10d8:	08 95       	ret

000010da <__udivmodsi4>:
    10da:	a1 e2       	ldi	r26, 0x21	; 33
    10dc:	1a 2e       	mov	r1, r26
    10de:	aa 1b       	sub	r26, r26
    10e0:	bb 1b       	sub	r27, r27
    10e2:	fd 01       	movw	r30, r26
    10e4:	0d c0       	rjmp	.+26     	; 0x1100 <__udivmodsi4_ep>

000010e6 <__udivmodsi4_loop>:
    10e6:	aa 1f       	adc	r26, r26
    10e8:	bb 1f       	adc	r27, r27
    10ea:	ee 1f       	adc	r30, r30
    10ec:	ff 1f       	adc	r31, r31
    10ee:	a2 17       	cp	r26, r18
    10f0:	b3 07       	cpc	r27, r19
    10f2:	e4 07       	cpc	r30, r20
    10f4:	f5 07       	cpc	r31, r21
    10f6:	20 f0       	brcs	.+8      	; 0x1100 <__udivmodsi4_ep>
    10f8:	a2 1b       	sub	r26, r18
    10fa:	b3 0b       	sbc	r27, r19
    10fc:	e4 0b       	sbc	r30, r20
    10fe:	f5 0b       	sbc	r31, r21

00001100 <__udivmodsi4_ep>:
    1100:	66 1f       	adc	r22, r22
    1102:	77 1f       	adc	r23, r23
    1104:	88 1f       	adc	r24, r24
    1106:	99 1f       	adc	r25, r25
    1108:	1a 94       	dec	r1
    110a:	69 f7       	brne	.-38     	; 0x10e6 <__udivmodsi4_loop>
    110c:	60 95       	com	r22
    110e:	70 95       	com	r23
    1110:	80 95       	com	r24
    1112:	90 95       	com	r25
    1114:	9b 01       	movw	r18, r22
    1116:	ac 01       	movw	r20, r24
    1118:	bd 01       	movw	r22, r26
    111a:	cf 01       	movw	r24, r30
    111c:	08 95       	ret

0000111e <__divmodsi4>:
    111e:	05 2e       	mov	r0, r21
    1120:	97 fb       	bst	r25, 7
    1122:	1e f4       	brtc	.+6      	; 0x112a <__divmodsi4+0xc>
    1124:	00 94       	com	r0
    1126:	0e 94 a6 08 	call	0x114c	; 0x114c <__negsi2>
    112a:	57 fd       	sbrc	r21, 7
    112c:	07 d0       	rcall	.+14     	; 0x113c <__divmodsi4_neg2>
    112e:	0e 94 6d 08 	call	0x10da	; 0x10da <__udivmodsi4>
    1132:	07 fc       	sbrc	r0, 7
    1134:	03 d0       	rcall	.+6      	; 0x113c <__divmodsi4_neg2>
    1136:	4e f4       	brtc	.+18     	; 0x114a <__divmodsi4_exit>
    1138:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__negsi2>

0000113c <__divmodsi4_neg2>:
    113c:	50 95       	com	r21
    113e:	40 95       	com	r20
    1140:	30 95       	com	r19
    1142:	21 95       	neg	r18
    1144:	3f 4f       	sbci	r19, 0xFF	; 255
    1146:	4f 4f       	sbci	r20, 0xFF	; 255
    1148:	5f 4f       	sbci	r21, 0xFF	; 255

0000114a <__divmodsi4_exit>:
    114a:	08 95       	ret

0000114c <__negsi2>:
    114c:	90 95       	com	r25
    114e:	80 95       	com	r24
    1150:	70 95       	com	r23
    1152:	61 95       	neg	r22
    1154:	7f 4f       	sbci	r23, 0xFF	; 255
    1156:	8f 4f       	sbci	r24, 0xFF	; 255
    1158:	9f 4f       	sbci	r25, 0xFF	; 255
    115a:	08 95       	ret

0000115c <__umulhisi3>:
    115c:	a2 9f       	mul	r26, r18
    115e:	b0 01       	movw	r22, r0
    1160:	b3 9f       	mul	r27, r19
    1162:	c0 01       	movw	r24, r0
    1164:	a3 9f       	mul	r26, r19
    1166:	70 0d       	add	r23, r0
    1168:	81 1d       	adc	r24, r1
    116a:	11 24       	eor	r1, r1
    116c:	91 1d       	adc	r25, r1
    116e:	b2 9f       	mul	r27, r18
    1170:	70 0d       	add	r23, r0
    1172:	81 1d       	adc	r24, r1
    1174:	11 24       	eor	r1, r1
    1176:	91 1d       	adc	r25, r1
    1178:	08 95       	ret

0000117a <__muluhisi3>:
    117a:	0e 94 ae 08 	call	0x115c	; 0x115c <__umulhisi3>
    117e:	a5 9f       	mul	r26, r21
    1180:	90 0d       	add	r25, r0
    1182:	b4 9f       	mul	r27, r20
    1184:	90 0d       	add	r25, r0
    1186:	a4 9f       	mul	r26, r20
    1188:	80 0d       	add	r24, r0
    118a:	91 1d       	adc	r25, r1
    118c:	11 24       	eor	r1, r1
    118e:	08 95       	ret

00001190 <_exit>:
    1190:	f8 94       	cli

00001192 <__stop_program>:
    1192:	ff cf       	rjmp	.-2      	; 0x1192 <__stop_program>
